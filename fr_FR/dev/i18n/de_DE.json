{
    "dev\/Icone_de_plugin.md": {
        "Documentation icône de plugins": "",
        "Afin de pouvoir être publié sur le Market Jeedom, tout plugin doit disposer d'une icône": "",
        "Cette icône sera celle affichée pour les utilisateurs, sur le market et depuis l'interface Jeedom": "",
        "Il faut produire un fichier au format png, de 309 x 348 pixels": "",
        "Le nom du fichier est structuré ainsi ": "",
        "`<plugin-id>_icon.png`": "",
        "Il doit être enregistré dans le dossier `\/plugin-info\/`": "",
        "Ce fichier est obligatoire": "",
        "Nous vous remercions par avance de ne pas utiliser le même code couleur que les icônes des plugins officiels Jeedom": "",
        "Depuis 2020, il est recommandé de ne plus mettre le nom sous l'image (attention à garder quand même les mêmes tailles du modèle": "",
        "Merci d'utiliser ce modèle (bords arrondi, taille, fond coloré, transparence autour etc..) ": ""
    },
    "dev\/cmd_value.md": {
        "1 = oui": "",
        "Info\/Statut Défectueux": "",
        "0 = non": "",
        "1 = en ligne": "",
        "Info\/Connectivité En Ligne": "",
        "0 = hors ligne": "",
        "1 = actif": "",
        "Info\/Statut Actif": "",
        "0 = inactif": "",
        "Type générique": "",
        "Valeurs \/ Action": "",
        "Info\/Son (dB": "",
        "Info\/Pression": "",
        "1 = Choc": "",
        "Info\/Choc": "",
        "0 = Pas de choc": "",
        "1 = Sabotage": "",
        "Info\/Sabotage": "",
        "0 = Pas de sabotage": "",
        "1 = Fuite détectée": "",
        "Info\/Fuite d'eau": "",
        "0 = Pas de fuite détectée": "",
        "Info\/Inondation": "",
        "1 = Fumée détectée": "",
        "Info\/Détection de fumée": "",
        "0 = Pas de fumée": "",
        "1 = OUI": "",
        "Info\/Batterie Basse": "",
        "0 = NON": "",
        "Non présent = Non Rechargable": "",
        "Info\/Batterie en charge": "",
        "Info\/Batterie": "",
        "%": "",
        "Info\/Température": "",
        "50 → 300 °C": "",
        "Info\/CO2 (ppm": "",
        "PPM ou binaire": "",
        "Info\/Humidité": "",
        "Info\/Luminosité": "",
        "0 → 100000 lux": "",
        "1 = CO anormal": "",
        "Info\/Détecteur CO": "",
        "0 = CO normal": "",
        "Info\/Qualité d'air (Indice Personnalisable": "",
        "ppb ou µg\/m3": "",
        "Info\/Qualité d'air (Indice AQI": "",
        "indice AQI": "",
        "1 = Quelqu'un": "",
        "Info\/Présence Occupation": "",
        "0 = Personne": "",
        "Valeurs \/ Unité": "",
        "Info\/Consommation Electrique": "",
        "Info\/Puissance Electrique": "",
        "Action\/Portail ou garage bouton de fermeture": "",
        "Action\/Portail ou garage bouton d'ouverture": "",
        "Ouvrant si bloqué (par sécurité": "",
        "Action\/Portail ou garage bouton toggle": "",
        "Interrupteur ouvrant si fermé et fermant si ouvert": "",
        "Basé sur un équipement z-wave, pourrait être aussi binaire ou libellé": "",
        "même traitement": "",
        "0 = Fermé": "",
        "Info\/Portail état ouvrant": "",
        "Action\/Thermostat Déverrouillage": "",
        "Déverrouiller le thermostat": "",
        "Action\/Thermostat Verrouillage": "",
        "Verrouiller le thermostat": "",
        "1 = Verrouillé": "",
        "Info\/Thermostat Verrouillage": "",
        "0 = Non Verrouillé": "",
        "Action\/Thermostat Consigne": "",
        "Min&Max Obligatoires": "",
        "Info\/Thermostat Consigne": "",
        "Valeur entre Min et Max de l'Action\/Thermostat Consigne": "",
        "Info\/Thermostat Température ambiante": "",
        "Degrés Celcius": "",
        "Info\/Thermostat Température Extérieur": "",
        "Action\/Thermostat Mode": "",
        "Mode du thermostat, peut être multiple": "",
        "le nom d'une commande Action\/Thermostat Mode": "",
        "Info\/Thermostat Mode": "",
        "Off' ou 'Arret' = OFF": "",
        "Préférer l'anglais": "",
        "Info\/Thermostat Etat (HUMAIN": "",
        "off' ou 'arrêté' ou 'arret": "",
        "1 = Allumé": "",
        "Info\/Thermostat Etat (BINAIRE": "",
        "0 = Eteint": "",
        "Action\/Alarme Mode": "",
        "Mode de l'alarme, peut être multiple": "",
        "Action\/Alarme libérée": "",
        "Désarme l'alarme": "",
        "Action\/Alarme armée": "",
        "Arme l'alarme": "",
        "le nom d'une commande Action\/Alarme Mode": "",
        "Info\/Alarme mode": "",
        "Libellé affichant": "",
        "prioritaire sur modes": "",
        "Info\/Alarme état activée": "",
        "0 = Désarmée": "",
        "prioritaire sur activée et modes": "",
        "Info\/Alarme état": "",
        "1 = Déclenchée": "",
        "1 = Sonne": "",
        "Info\/Sirène Etat": "",
        "0 = Sonne pas": "",
        "1 = Pas de contact (Ouvert": "",
        "0 = Contact (Fermé": "",
        "Info\/Porte": "",
        "1 = Mouvement": "",
        "Info\/Présence": "",
        "0 = Pas de mouvement": "",
        "Action\/Serrure Bouton Fermer": "",
        "Action\/Serrure Bouton Ouvrir": "",
        "Déverrouillage": "",
        "1 = Sécurisée (Verrouillée": "",
        "Info\/Serrure Etat": "",
        "0 = Non Sécurisée (Non Verrouillée": "",
        "Bouton Off": "",
        "Action\/Valve": "",
        "Bouton On": "",
        "Info\/Valve": "",
        "Action\/Irrigation": "",
        "Info\/Irrigation": "",
        "Action\/Robinet": "",
        "Info\/Robinet": "",
        "modifiable via min-max du slider": "",
        "Action\/Volet Slider Inclinaison Verticale": "",
        "Angle 0->90°": "",
        "Info\/Volet Etat Inclinaison Verticale": "",
        "Angle 0->90° (via slider": "",
        "Action\/Volet Slider Inclinaison Horizontale": "",
        "Info\/Volet Etat Inclinaison Horizontale": "",
        "Min et Max obligatoires": "",
        "Action\/Volet Bouton Slider": "",
        "Donne la proportion d'ouverture du volet": "",
        "Action\/Volet Bouton Stop": "",
        "Arret du mouvement du volet": "",
        "Lancement de la fermeture ou set valeur min slider ou état ou 0": "",
        "Action\/Volet Bouton Descendre": "",
        "Fermeture du volet": "",
        "Lancement de l'ouverture ou set valeur max slider ou état ou 100": "",
        "Action\/Volet Bouton Monter": "",
        "Ouverture du volet": "",
        "Info\/Volet Etat": "",
        "Si Binaire": "",
        "Min Max Obligatoire": "",
        "Action\/Ventilateur": "",
        "ou gradation si vitesse": "",
        "Info\/Ventilateur": "",
        "Eteindre l'interrupteur": "",
        "Action\/Interrupteur": "",
        "Allumer l'interrupteur": "",
        "Info\/Interrupteur": "",
        "Eteindre la prise": "",
        "Action\/Prise": "",
        "Allumer la prise": "",
        "Info\/Prise": "",
        "Action\/Lumière Mode": "",
        "Preset\/Scène lumière, peut être multiple": "",
        "Action\/Lumière Toggle": "",
        "Inversion de l'état si binaire": "",
        "Min&Max Obligatoire": "",
        "Action\/Lumière Température Couleur": "",
        "Modification de la température couleur": "",
        "Info\/Lumière Température Couleur": "",
        "Format Mired (<=500) ou Kelvin (>500": "",
        "Action\/Lumière Couleur": "",
        "Modification de la couleur, Format #RRGGBB": "",
        "Info\/Lumière Couleur": "",
        "Format #RRGGBB": "",
        "Action\/Lumière Bouton Off": "",
        "Eteignage de la lumière (Changement de l'Etat": "",
        "Action\/Lumière Bouton On": "",
        "Allumage de la lumière (Changement de l'Etat": "",
        "Action\/Lumière Slider": "",
        "Variateur de luminosité": "",
        "Toujours utiliser avec Lumière Etat sur la commande binaire": "",
        "Info\/Lumière Luminosité": "",
        "Info\/Lumière Etat": "",
        "Soit Luminosité": "",
        "Valeur des commandes": "",
        "Cette documentation rassemble les recommandations pour les valeurs des commandes (action ou info) en fonction des types": "",
        "Il n'est pas obligatoire de les suivres mais pour une meilleure intégration à Jeedom il est vivement conseillé de le faire": "",
        "Lumière": "",
        "0-100 Ou 0-99 ou 0-255": "",
        "en fonction du max de Action\/Lumière Slider": "",
        "ou Soit Binaire": "",
        "autre que 0 = Allumé": "",
        "1 = Ouvert": "",
        "Si Numérique": "",
        "min du Bouton Slider(sinon min de l'Etat, sinon 0) = Fermé": "",
        "max du Bouton Slider(sinon max de l'Etat, sinon 100) = Ouvert": "",
        "Si pas de bouton Silder": "",
        "Min et Max obligatoires dans l'Etat": "",
        "Si présent": "",
        "en option": "",
        "Générique": "",
        "ajouter un variateur": "",
        "et ajouter le numérique à l'action": "",
        "ça existe": "",
        "Info\/Fenêtre": "",
        "Sirènes": "",
        "heat' ou 'chauffage": "",
        "cool' ou 'climatisation": "",
        "Aucun' ou 'Thermostat' = Mode Consigne": "",
        "Portails ou Garages": "",
        "Info\/Garage état ouvrant": "",
        "252 = Fermeture en cours": "",
        "253 = Stoppé": "",
        "254 = Ouverture en cours": "",
        "255 = Ouvert": "",
        "avec soit": "",
        "ou soit": "",
        "Statuts d'équipements": "",
        " dB.": " .",
        " dB?": " ?",
        "dB ": " ",
        " dB]": " ]",
        "[dB]": "[]",
        "*dB*": "**",
        " dB*": " *",
        " bar.": " .",
        " bar?": " ?",
        "bar ": " ",
        " bar]": " ]",
        "[bar]": "[]",
        "*bar*": "**",
        " bar*": " *",
        " KWh.": " .",
        " KWh?": " ?",
        "KWh ": " ",
        " KWh]": " ]",
        "[KWh]": "[]",
        "*KWh*": "**",
        " KWh*": " *",
        " Watts.": " .",
        " Watts?": " ?",
        "Watts ": " ",
        " Watts]": " ]",
        "[Watts]": "[]",
        "*Watts*": "**",
        " Watts*": " *",
        " Unité.": " .",
        " Unité?": " ?",
        "Unité ": " ",
        " Unité]": " ]",
        "[Unité]": "[]",
        "*Unité*": "**",
        " Unité*": " *",
        " Fermeture.": " .",
        " Fermeture?": " ?",
        "Fermeture ": " ",
        " Fermeture]": " ]",
        "[Fermeture]": "[]",
        "*Fermeture*": "**",
        " Fermeture*": " *",
        " Ouverture.": " .",
        " Ouverture?": " ?",
        "Ouverture ": " ",
        " Ouverture]": " ]",
        "[Ouverture]": "[]",
        "*Ouverture*": "**",
        " Ouverture*": " *",
        " Verrouillage.": " .",
        " Verrouillage?": " ?",
        "Verrouillage ": " ",
        " Verrouillage]": " ]",
        "[Verrouillage]": "[]",
        "*Verrouillage*": "**",
        " Verrouillage*": " *",
        " Eteindre.": " .",
        " Eteindre?": " ?",
        "Eteindre ": " ",
        " Eteindre]": " ]",
        "[Eteindre]": "[]",
        "*Eteindre*": "**",
        " Eteindre*": " *",
        " Allumer.": " .",
        " Allumer?": " ?",
        "Allumer ": " ",
        " Allumer]": " ]",
        "[Allumer]": "[]",
        "*Allumer*": "**",
        " Allumer*": " *",
        " Etat.": " .",
        " Etat?": " ?",
        "Etat ": " ",
        " Etat]": " ]",
        "[Etat]": "[]",
        "*Etat*": "**",
        " Etat*": " *",
        " Rotation.": " .",
        " Rotation?": " ?",
        "Rotation ": " ",
        " Rotation]": " ]",
        "[Rotation]": "[]",
        "*Rotation*": "**",
        " Rotation*": " *",
        " Luminosité.": " .",
        " Luminosité?": " ?",
        "Luminosité ": " ",
        " Luminosité]": " ]",
        "[Luminosité]": "[]",
        "*Luminosité*": "**",
        " Luminosité*": " *",
        " Obligatoire.": " .",
        " Obligatoire?": " ?",
        "Obligatoire ": " ",
        " Obligatoire]": " ]",
        "[Obligatoire]": "[]",
        "*Obligatoire*": "**",
        " Obligatoire*": " *",
        " Prise.": " .",
        " Prise?": " ?",
        "Prise ": " ",
        " Prise]": " ]",
        "[Prise]": "[]",
        "*Prise*": "**",
        " Prise*": " *",
        " Interrupteurs.": " .",
        " Interrupteurs?": " ?",
        "Interrupteurs ": " ",
        " Interrupteurs]": " ]",
        "[Interrupteurs]": "[]",
        "*Interrupteurs*": "**",
        " Interrupteurs*": " *",
        " Ventilateur.": " .",
        " Ventilateur?": " ?",
        "Ventilateur ": " ",
        " Ventilateur]": " ]",
        "[Ventilateur]": "[]",
        "*Ventilateur*": "**",
        " Ventilateur*": " *",
        " Vitesse.": " .",
        " Vitesse?": " ?",
        "Vitesse ": " ",
        " Vitesse]": " ]",
        "[Vitesse]": "[]",
        "*Vitesse*": "**",
        " Vitesse*": " *",
        " Volet.": " .",
        " Volet?": " ?",
        "Volet ": " ",
        " Volet]": " ]",
        "[Volet]": "[]",
        "*Volet*": "**",
        " Volet*": " *",
        " Valves.": " .",
        " Valves?": " ?",
        "Valves ": " ",
        " Valves]": " ]",
        "[Valves]": "[]",
        "*Valves*": "**",
        " Valves*": " *",
        " Serrures.": " .",
        " Serrures?": " ?",
        "Serrures ": " ",
        " Serrures]": " ]",
        "[Serrures]": "[]",
        "*Serrures*": "**",
        " Serrures*": " *",
        " Mouvement.": " .",
        " Mouvement?": " ?",
        "Mouvement ": " ",
        " Mouvement]": " ]",
        "[Mouvement]": "[]",
        "*Mouvement*": "**",
        " Mouvement*": " *",
        " Alarme.": " .",
        " Alarme?": " ?",
        "Alarme ": " ",
        " Alarme]": " ]",
        "[Alarme]": "[]",
        "*Alarme*": "**",
        " Alarme*": " *",
        " exactement.": " .",
        " exactement?": " ?",
        "exactement ": " ",
        " exactement]": " ]",
        "[exactement]": "[]",
        "*exactement*": "**",
        " exactement*": " *",
        " Thermostats.": " .",
        " Thermostats?": " ?",
        "Thermostats ": " ",
        " Thermostats]": " ]",
        "[Thermostats]": "[]",
        "*Thermostats*": "**",
        " Thermostats*": " *",
        " Electricité.": " .",
        " Electricité?": " ?",
        "Electricité ": " ",
        " Electricité]": " ]",
        "[Electricité]": "[]",
        "*Electricité*": "**",
        " Electricité*": " *",
        " Divers.": " .",
        " Divers?": " ?",
        "Divers ": " ",
        " Divers]": " ]",
        "[Divers]": "[]",
        "*Divers*": "**",
        " Divers*": " *"
    },
    "dev\/core4.0.md": {
        "Développeurs de plugin": "",
        "Core v4": "",
        "Font-awesome 4 n'est plus intégré au Core, remplacé par Font-Awesome 5": "",
        "Compatibilité V4 sur le market": "",
        "La v3 qui sortira en Novembre 2020 aura un module de migration permettant de passer de la V3 à la V4": "",
        "Lors de la phase de migration des v3 vers la v4, les plugins sans compatibilité v4 dans leur info": "",
        "json alerteront l'utilisateur final avant la mise à jour": "",
        "Si votre plugin est compatible v4, indiquez le dans le info": "",
        "json de cotre plugin": "",
        "info.json": "",
        "[\"miniplus\",\"smart\",\"rpi\",\"docker\",\"diy\",\"v4\"],`": "",
        "Vous pouvez tester depuis un scénario \/ bloc Code si vos plugins ont bien la compatibilité renseignée": "",
        "~~~ php": "",
        "\/\/Author of plugins to check (case sensitive": "",
        "foreach ($pluginsArray as $plugin": "",
        "if ($plugin['author'] == $author": "",
        "if ($plugin['hardwareCompatibility']['v4": "",
        "if ($countPlugins > 0": "",
        "if ($countIncompatibles > 0": "",
        "~~~": "",
        "Adaptation des plugins pour le Core v4": "",
        "plugin template": "",
        "Nettoyer au maximum les inline style (cf": "",
        "span affichage de commande": "",
        "class `state`": "",
        "Bouton de commande": "",
        "a class `action`": "",
        "Sur les input-group": "",
        "class `roundedLeft` sur le premier élément (a input, button etc": "",
        "class `roundedRight` sur le dernier élément (a input, button etc": "",
        "Sur la div eqLogicThumbnailContainer": "",
        "Supprimer tous les styles": "",
        "Sur les divs parents, ajouter une class de couleur": "",
        "couleurs de logo": "",
        "`logoPrimary` et `logoSecondary`": "",
        "Attention pour les plugins ayant des templates": "",
        "l'icône refresh a changé (font-awesome 5": "",
        "Attention aux class des boutons, input etc": "",
        "32px de haut": "",
        "btn-sm \/ input-sm": "",
        "28px de haut": "",
        "22px de haut": "",
        "Fichier desktop\/php\/pluginid": "",
        "remplacer object": "",
        "all() par jeeObject": "",
        "Tester les plugins sur les trois thèmes 2019 Light \/ Dark \/ Legacy": "",
        "Images en png avec alpha si nécessaire, afin d'éviter les carrés blancs disgracieux en thème Dark": "",
        "Au final les pages du plugin doivent être cohérentes avec les pages du core objets\/scénarios\/interactions (tailles, couleurs, dispositions etc": "",
        "Pas d'effet de style, mais de la cohérence": "",
        "La sidebar n'a pas survécu à la v4": "",
        "Pour la remplacer, un menu contextuel est disponible sur les onglets pour les scénarios, objets, interactions, plugins": "",
        "Mises à jour": "",
        "Une fois le github du plugin updaté, aller sur le market, mes créations, et faire un 'Test' sur la branche": "",
        "Ce qui évite d'attendre le passage du robot, et met l'update à disposition immédiatement": "",
        "Les images affichées dans les pages de plugins ne doivent pas être chargées depuis le net, mais doivent être parmi les fichiers locaux du plugin": "",
        "Sur les pages de scénario, plugins etc, le bouton 'Supprimer' est passé à droite": "",
        "C'est le plus dangereux donc le plus loin": "",
        "Nettoyeur de fichier": "",
        "La v4 et la nouvelle v3 ont un nettoyage automatique des fichiers non présents sur votre mise à jour de plugin automatique": "",
        "Le core efface automatiquement les fichiers de plus de 7 jours qui n'ont pas eu de mise à jour": "",
        "Il efface les fichiers qui sont plus vieux de 7 jours selon l'update de votre plugin": "",
        "Il touche uniquement les dossiers > `3rdparty`, `3rparty`, `desktop`, `mobile`, `core`, `docs`, `install`, `script`, `vendor`, `plugin_info`": "",
        "`ressource(s)` et `data` ne sont pas touchés, mais nous vous invitons à utiliser `data` pour tout custom": "",
        "Les fichiers dont le nom commence par `custom` ne sont également pas touchés": "",
        "Si vous souhaitez faire une modification avant le nettoyage vous pouvez utiliser `pre_install": "",
        "php` (dans plugin_info": "",
        "GitHub liaison market": "",
        "Changement de nom github pour les accès à vos repos privés": "",
        "Il faut maintenant utiliser jeedom-market au lieu de celui de zoic": "",
        "La documentation": "",
        "Le site de documentation a également changé d'aspect": "",
        "Désormais des liens renvoient directement vers vos documentations": "",
        "La traduction": "",
        "Nous sommes en cours de développement d'un nouvel outil de traduction": "",
        "Nous le testons actuellement en interne et nous reviendrons vers vous prochainement afin de vous proposer d'intégrer vos plugins dedans": "",
        " Deprecated.": " .",
        " Deprecated?": " ?",
        "Deprecated ": " ",
        " Deprecated]": " ]",
        "[Deprecated]": "[]",
        "*Deprecated*": "**",
        " Deprecated*": " *",
        " migration.": " .",
        " migration?": " ?",
        "migration ": " ",
        " migration]": " ]",
        "[migration]": "[]",
        "*migration*": "**",
        " migration*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " `\"compatibility.": " .",
        " `\"compatibility?": " ?",
        "`\"compatibility ": " ",
        " `\"compatibility]": " ]",
        "[`\"compatibility]": "[]",
        "*`\"compatibility*": "**",
        " `\"compatibility*": " *",
        " else.": " .",
        " else?": " ?",
        "else ": " ",
        " else]": " ]",
        "[else]": "[]",
        "*else*": "**",
        " else*": " *",
        " vert.": " .",
        " vert?": " ?",
        "vert ": " ",
        " vert]": " ]",
        "[vert]": "[]",
        "*vert*": "**",
        " vert*": " *",
        " `success`.": " .",
        " `success`?": " ?",
        "`success` ": " ",
        " `success`]": " ]",
        "[`success`]": "[]",
        "*`success`*": "**",
        " `success`*": " *",
        " bleu.": " .",
        " bleu?": " ?",
        "bleu ": " ",
        " bleu]": " ]",
        "[bleu]": "[]",
        "*bleu*": "**",
        " bleu*": " *",
        " `info`.": " .",
        " `info`?": " ?",
        "`info` ": " ",
        " `info`]": " ]",
        "[`info`]": "[]",
        "*`info`*": "**",
        " `info`*": " *",
        " orange.": " .",
        " orange?": " ?",
        "orange ": " ",
        " orange]": " ]",
        "[orange]": "[]",
        "*orange*": "**",
        " orange*": " *",
        " `warning`.": " .",
        " `warning`?": " ?",
        "`warning` ": " ",
        " `warning`]": " ]",
        "[`warning`]": "[]",
        "*`warning`*": "**",
        " `warning`*": " *",
        " rouge.": " .",
        " rouge?": " ?",
        "rouge ": " ",
        " rouge]": " ]",
        "[rouge]": "[]",
        "*rouge*": "**",
        " rouge*": " *",
        " `danger`.": " .",
        " `danger`?": " ?",
        "`danger` ": " ",
        " `danger`]": " ]",
        "[`danger`]": "[]",
        "*`danger`*": "**",
        " `danger`*": " *",
        " btn.": " .",
        " btn?": " ?",
        "btn ": " ",
        " btn]": " ]",
        "[btn]": "[]",
        "*btn*": "**",
        " btn*": " *",
        " btn-xs.": " .",
        " btn-xs?": " ?",
        "btn-xs ": " ",
        " btn-xs]": " ]",
        "[btn-xs]": "[]",
        "*btn-xs*": "**",
        " btn-xs*": " *",
        " php.": " .",
        " php?": " ?",
        "php ": " ",
        " php]": " ]",
        "[php]": "[]",
        "*php*": "**",
        " php*": " *",
        " all.": " .",
        " all?": " ?",
        "all ": " ",
        " all]": " ]",
        "[all]": "[]",
        "*all*": "**",
        " all*": " *",
        " Remarque.": " .",
        " Remarque?": " ?",
        "Remarque ": " ",
        " Remarque]": " ]",
        "[Remarque]": "[]",
        "*Remarque*": "**",
        " Remarque*": " *",
        " Rappel.": " .",
        " Rappel?": " ?",
        "Rappel ": " ",
        " Rappel]": " ]",
        "[Rappel]": "[]",
        "*Rappel*": "**",
        " Rappel*": " *",
        " Attention.": " .",
        " Attention?": " ?",
        "Attention ": " ",
        " Attention]": " ]",
        "[Attention]": "[]",
        "*Attention*": "**",
        " Attention*": " *",
        " Voir.": " .",
        " Voir?": " ?",
        "Voir ": " ",
        " Voir]": " ]",
        "[Voir]": "[]",
        "*Voir*": "**",
        " Voir*": " *"
    },
    "dev\/core4.1.md": {
        "Développeurs de plugin": "",
        "Core v4": "",
        "Les fonctions `network->getInterfaceIp()` `network->getInterfaceMac()` et `network->getInterfaces()` ont été remplacées par `network->getInterfacesInfo()`": "",
        "La fonction `scenario->getHumanName()` de la class php scenario ne renvoit plus `[object][group][name]` mais `[group][object][name]`": "",
        "La fonction `scenario->byString()` doit maintenant être appellée avec la structure `[group][object][name]`": "",
        "La fonction `ajax": "",
        "init()` accepte depuis la v4 un tableau \"d'action\" en paramètre et depuis la v4": "",
        "1 vérifie si l'action reçue dans le querystring (avec une requête GET) est listée dans ce tableau, si ce n'est pas le cas la requête est bloquée": "",
        "Attention, en V3 l'argument optionnel était un boolean; donc il est possible de faire un code compatible v4": "",
        "0 et supérieur mais pas avec la v3": "",
        "\/* Fonction permettant l'envoi de l'entête 'Content-Type": "",
        "application\/json": "",
        "En V3": "",
        "indiquer l'argument 'true' pour contrôler le token d'accès Jeedom": "",
        "En V4": "",
        "autoriser l'exécution d'une méthode 'action' en GET en indiquant le(s) nom(s) de(s) action(s) dans un tableau en argument": "",
        "\/": "",
        "Cette modification est compatible Core v4": "",
        "0 et v3.x": "",
        " Obsolete.": " .",
        " Obsolete?": " ?",
        "Obsolete ": " ",
        " Obsolete]": " ]",
        "[Obsolete]": "[]",
        "*Obsolete*": "**",
        " Obsolete*": " *",
        " Changements.": " .",
        " Changements?": " ?",
        "Changements ": " ",
        " Changements]": " ]",
        "[Changements]": "[]",
        "*Changements*": "**",
        " Changements*": " *",
        " php.": " .",
        " php?": " ?",
        "php ": " ",
        " php]": " ]",
        "[php]": "[]",
        "*php*": "**",
        " php*": " *",
        " ajax.": " .",
        " ajax?": " ?",
        "ajax ": " ",
        " ajax]": " ]",
        "[ajax]": "[]",
        "*ajax*": "**",
        " ajax*": " *",
        " init();.": " .",
        " init();?": " ?",
        "init(); ": " ",
        " init();]": " ]",
        "[init();]": "[]",
        "*init();*": "**",
        " init();*": " *"
    },
    "dev\/core4.2.md": {
        "if (getCookie('jeedom_displayAsTable') == 'true": "",
        "jeedom.theme": "",
        "Développeurs de plugin": "",
        "Core v4": "",
        "Méthode `initCheckBox()` (utils.js": "",
        "Méthode de class `cmd`": "",
        "Ces modifications sont toujours supportées en v4": "",
        "2 et passeront en": "",
        "dans une prochaine version": "",
        "La méthode `eqLogic": "",
        "byTypeAndSearhConfiguration()` a été renommée correctement": "",
        "La méthode js `jeedom.eqLogic": "",
        "builSelectCmd` a été renommée correctement": "",
        "`jeedom.eqLogic.buildSelectCmd`": "",
        "Ces deux méthodes ont églament été intégrées en v4": "",
        "1 pour accélérer leur adoption": "",
        "Suppression de la lib jwerty pour du vanillaJS (gestion des raccourcis clavier": "",
        "L'usage de `showAlert` change": "",
        "`$('#div_alert": "",
        "showAlert({` devient `$.fn.showAlert({`": "",
        "Pas de changement pour l'appel depuis une modale": "",
        "Non supporté sur Core pré 4.2": "",
        "Méthode php `displayExeption`": "",
        "`displayException` (utils.inc": "",
        "Méthode php `convertDayEnToFr`": "",
        "`convertDayFromEn` (utils.inc": "",
        "Modifications optionnelles": "",
        "Graphique de fond des tuiles": "",
        "La v4": "",
        "2 permet de définir, sur un eqLogic, une commande info dont l'historique sera affiché en fond de tuile": "",
        "Pour cela votre plugin doit le permettre dans plugins\/myplugin\/core\/class\/myplugin.class.php": "",
        "class myplugin extends eqLogic": "",
        "public static $_widgetPossibility = array('custom' => true);": "",
        "```": "",
        "Si votre plugin possède un template spécifique pour ses équipements, la version desktop de celui-ci doit être mise à jour avec `": "",
        "` pour l'affichage": "",
        "Commandes orphelines": "",
        "Analyse → Equipements": "",
        "En v4": "",
        "2, sur la page": "",
        "onglet Commandes orphelines, la fonction eqLogic `deadCmdGeneric()` renvoit maintenant un lien vers le scénario ou l'équipement concerné": "",
        "Pour référence, la nouvelle fonction du Core": "",
        "~~~ php": "",
        "public static function deadCmdGeneric($_plugin_id": "",
        "foreach (eqLogic": "",
        "byType($_plugin_id) as $eqLogic": "",
        "preg_match_all(\"\/": "",
        "\/\", $eqLogic_json, $matches);": "",
        "foreach ($matches[1] as $cmd_id": "",
        "if (is_numeric($cmd_id": "",
        "byId(str_replace('#', '', $cmd_id": "",
        "detail' => '<a href=\"\/index.php": "",
        "v=d&m='.$eqLogic->getEqType_name().'&p='.$eqLogic->getEqType_name().'&id='.$eqLogic->getId().'\">'.$eqLogic->getHumanName().'<\/a": "",
        "help' => __('Action', __FILE__": "",
        ";": "",
        "return $return;": "",
        "~~~": "",
        "Vous pouvez donc intégrer le même type de retour dans vos plugins, fonction `deadCmd()`": "",
        "Support de l'affichage tableau dans un plugin": "",
        "Scénarios": "",
        "Depuis la version 4": "",
        "2 du Core, un affichage en mode tableau est proposé sur les pages": "",
        "Cette fonction repose entièrement sur du CSS et ne nécessite pas de modification des éléments du DOM, à part l'ajout du bouton à droite de la recherche pour basculer entre les mode tableau et normal": "",
        "Sur la plupart des plugins, le Core pourra gérer cette fonctionnalité": "",
        "Toutefois, elle n'a pas été intégrée par défaut car plusieurs plugins n'utilisent pas des": "",
        "standard, et le Core ne peux alors pas gérer l'affichage, dépendant du plugin": "",
        "Ceci doit donc être testé et intégré pour chaque plugin": "",
        "Plusieurs cas possible": "",
        "Vous n'intégrez pas le bouton": "",
        "Votre plugin ne proposera pas ce mode": "",
        "Vous intégrez le bouton, et l'affichage est bien géré": "",
        "Rien de plus à faire": "",
        "Vous intégrez le bouton, mais l'affichage n'est pas bien géré": "",
        "Inspirez vous du CSS du Core 4": "",
        "2 pour faire votre propre CSS": "",
        "Dans tout les cas, le bouton de bascule du mode tableau est intégré avec la class CSS `hidden` et est donc masqué": "",
        "Il ne sera donc pas visible sur les Core pré-4": "",
        "2 ne possédant pas cette option": "",
        "Ajouter le bouton à droite du champ recherche": "",
        "Ajoutez simplement ce bouton à droite du champ de recherche sur votre page `monplugin\/desktop\/php\/monplugin": "",
        "`<a class=\"btn roundedRight hidden\" id=\"bt_pluginDisplayAsTable\" data-coreSupport=\"1\" data-state=\"0\"><i class=\"fas fa-grip-lines\"><\/i><\/a>`": "",
        "~~~ html": "",
        "Testez l'affichage sur un Core v4.2": "",
        "Si tous va bien, c'est terminé": "",
        "Si affichage non standard des eqlogics": "",
        "Paramètre": "",
        "à 0": "",
        "`<a class=\"btn roundedRight hidden\" id=\"bt_pluginDisplayAsTable\" data-coreSupport=\"0\" data-state=\"0\"><i class=\"fas fa-grip-lines\"><\/i><\/a>`": "",
        "Gérez votre propre class css, autre que \".displayAsTable": "",
        "Placez le fichier css dans `monplugin\/desktop\/css\/monplugin": "",
        "css` puis importez le depuis le desktop\/php comme cela": "",
        "`include_file('desktop', 'monplugin', 'css', 'monplugin');`": "",
        "Gérez l'event du bouton": "",
        "~~~ js": "",
        "if ($(this": "",
        "data('state') == \"0": "",
        "setCookie('jeedom_displayAsTable', 'true', 2": "",
        "setCookie('jeedom_displayAsTable', 'false', 2": "",
        "Pour référence, le js du plugin": "",
        "\/\/displayAsTable if plugin support it": "",
        "if ($('#bt_pluginDisplayAsTable": "",
        "theme_displayAsTable == 1": "",
        "if ($('#bt_pluginDisplayAsTable[data-coreSupport=\"1": "",
        "\/\/core event": "",
        "Vous pouvez également vous inspirer des CSS du Core": "",
        "Fichier `desktop\/css\/desktop.main": "",
        "css` section `\/": "",
        "\/`": "",
        "Afficher d'autres éléments en mode tableau": "",
        "Si vous souhaitez qu'un élément de la": "",
        "apparaisse sur la droite, ajoutez la class CSS `displayTableRight`": "",
        "Si vous devez y placer plusieurs éléments, placez les tous dans un seul `<span class=\"displayTableRight\"> ... <\/span>`": "",
        "Le mode tableau affichant chaque élément sur une ligne, il y a la place à droite pour ajouter des informations, voir des boutons": "",
        "Vous pouvez ainsi avoir sur chaque": "",
        "des éléments qui ne seront pas affichés en mode normal, et à droite en mode tableau": "",
        "foreach ($eqLogics as $eqLogic": "",
        "echo $div;": "",
        "Ici (plugin": "",
        "les paramètres de cron et log seront masqués en mode normal mais visible sur la droite en mode tableau": "",
        "Vous pouvez aussi vous inspirez des pages du Core v4": "",
        "2, notamment celle des scénarios qui affiche le bouton pour ouvrir les logs": "",
        "N'oubliez pas la class `hidden` (non présente sur les pages du Core) pour pas que cet élément soit affiché en mode normal sur les Core pré-4.2": "",
        "Affichage de l'aide d'un Widget": "",
        "Depuis la v4": "",
        "2, les paramètres optionnels disponibles sur les Widgets Core sont affichés affichés pour chaque widget, que ce soit dans la configuration de la commande ou depuis le mode Edition du Dashboard": "",
        "Widget Dashboard": "",
        "Dans le code du": "",
        "un tag `template` est inséré entre la dernière `div` interne et le tag `script`": "",
        "Le Core supprime ce tag à l'affichage du Widget pour ne pas alourdir la page": "",
        "Toutefois, sur les Core pré-4": "",
        "2, le tag `template` n'est pas affiché par les navigateurs": "",
        "Inversement, ce tag `template` est récupéré par le Core pour afficher l'aide dans les fenêtres de configuration": "",
        "Si un tag `template` est présent et non vide, le Core affiche son contenu": "",
        "`Aucun paramètre optionnel disponible`": "",
        "Si un tag `template` est présent, mais vide, le Core affiche": "",
        "`Aucune description trouvée pour ce Widget`": "",
        "Si aucun tag `template` n'est présent, le Core affiche": "",
        "Widgets curseur": "",
        "Tous les Widgets de type curseur utilisent depuis la v4": "",
        "2 une nouvelle lib": "",
        "Plus souples dans son utilisation et son initilisation, elle nous permet aussi d'utiliser un code identique en desktop et mobile": "",
        "Elle est également compatible": "",
        "sur les smartphones": "",
        "Si vos plugins \/ widgets tiers utilisent des curseurs, il est préférable de migrer vers cette nouvelle lib": "",
        "Les Core pré-4": "",
        "2 n'ont pas la lib": "",
        "Vous pouvez tester l'existence de la lib comme cela": "",
        "if (typeof noUiSlider": "",
        "console.log('noUiSlider code here": "",
        "console.log('old code here": "",
        "Traduction des Widgets tiers": "",
        "Si vous réalisez et partagez des Widgets tiers (code), le Core v4": "",
        "2 supporte maintenant leur internationalisation": "",
        "Pour cela, chaque widget doit être accompagné de son fichier json contenant ses traductions": "",
        "path du widget": "",
        "`data\\customTemplates\\dashboard\\cmd.info.string.myCustomWidget.html`": "",
        "path de la traduction": "",
        "`data\\customTemplates\\i18n\\cmd.info.string.myCustomWidget.json`": "",
        "La version mobile du Widget prendra la traduction au même endroit": "",
        "Je suis un widget tiers": "",
        "en_US": "",
        "I am a custom widget": "",
        "Mon paramètre tiers": "",
        "My custom parameter description": "",
        "es_ES": "",
        "Soy un widget de terceros": "",
        "Mi configuración de terceros": "",
        "de_DE": "",
        "Ich bin ein Widget eines Drittanbieters": "",
        "Meine Einstellung von Drittanbietern": "",
        "Les textes `Date de valeur`, `Date de collecte` et tous ceux se trouvant dans les widgets Core n'ont pas besoin d'être dans le json": "",
        "Si vous n'avez pas d'autres textes dans votre widget, le json n'est donc pas nécessaire, et ces chaînes seront traduites": "",
        "Intégration dans le Core de Types Génériques propres à un plugin": "",
        "Le Core v4": "",
        "2 possède une nouvelle page permettant de paramétrer les Types Génériques plus facilement": "",
        "Il reprend bien sûr les Types Génériques définis par le Core, mais certains plugins définissent leurs propres Types Génériques": "",
        "Afin que ces plugins soient supportés par cette nouvelle page du Core, voici comment les intégrer": "",
        "A l'ouverture de cette page, le Core vérifie, pour chaque plugin, si celui-ci possède une méthode `pluginGenericTypes()`": "",
        "Si c'est le cas, cette méthode est alors appellée, dans l'attente des Types Génériques du plugin afin de les intégrer": "",
        "Ceux-ci doivent respecter la définition des Types Génériques du Core, notamment si des catégories existent déjà (Prise, Lumière, etc": "",
        "Exemple, dans le fichier `plugins\/monplugin\/core\/php\/monplugin.class.php`": "",
        "class monPlugin extends eqLogic": "",
        "Methode static": "",
        "\/": "",
        "public static function pluginGenericTypes": "",
        "MONPLUGIN_TOGGLE' => array( \/\/capitalise without space": "",
        "name' => __('MonPlugin Toggle',__FILE__": "",
        "familyid' => 'MonPlugin', \/\/No space here": "",
        "family' => __('Plugin MonPlugin',__FILE__), \/\/Start with 'Plugin": "",
        "type' => 'Action": "",
        "subtype' => array('other": "",
        "MONPLUGIN_LIGHT_BEAM' => array": "",
        "name' => __('Rayons Lumineux (MonPlugin)',__FILE__": "",
        "familyid' => 'LIGHT', \/\/Existing type if any": "",
        "family' => __('Lumière',__FILE__": "",
        "type' => 'Info": "",
        "subtype' => array('binary','numeric": "",
        "return $generics;": "",
        "Ici, le plugin `monPlugin` va 'injecter' deux Types Génériques": "",
        "Un Type Générique MONPLUGIN_TOGGLE, de type `MonPlugin`, catégorie n'existant pas dans le Core": "",
        "Un Type Générique MONPLUGIN_LIGHT_BEAM, dans la catégorie existante `Lumière`": "",
        "fichier de config": "",
        "Référence": "",
        "Les Types Génériques du Core sont définis dans le": "",
        "array $JEEDOM_INTERNAL_CONFIG, generic_type": "",
        " Obsolete.": " .",
        " Obsolete?": " ?",
        "Obsolete ": " ",
        " Obsolete]": " ]",
        "[Obsolete]": "[]",
        "*Obsolete*": "**",
        " Obsolete*": " *",
        " `setEventOnly()`.": " .",
        " `setEventOnly()`?": " ?",
        "`setEventOnly()` ": " ",
        " `setEventOnly()`]": " ]",
        "[`setEventOnly()`]": "[]",
        "*`setEventOnly()`*": "**",
        " `setEventOnly()`*": " *",
        " Deprecated.": " .",
        " Deprecated?": " ?",
        "Deprecated ": " ",
        " Deprecated]": " ]",
        "[Deprecated]": "[]",
        "*Deprecated*": "**",
        " Deprecated*": " *",
        " `eqLogic.": " .",
        " `eqLogic?": " ?",
        "`eqLogic ": " ",
        " `eqLogic]": " ]",
        "[`eqLogic]": "[]",
        "*`eqLogic*": "**",
        " `eqLogic*": " *",
        " byTypeAndSearchConfiguration()`.": " .",
        " byTypeAndSearchConfiguration()`?": " ?",
        "byTypeAndSearchConfiguration()` ": " ",
        " byTypeAndSearchConfiguration()`]": " ]",
        "[byTypeAndSearchConfiguration()`]": "[]",
        "*byTypeAndSearchConfiguration()`*": "**",
        " byTypeAndSearchConfiguration()`*": " *",
        " ```php.": " .",
        " ```php?": " ?",
        "```php ": " ",
        " ```php]": " ]",
        "[```php]": "[]",
        "*```php*": "**",
        " ```php*": " *",
        " ```html.": " .",
        " ```html?": " ?",
        "```html ": " ",
        " ```html]": " ]",
        "[```html]": "[]",
        "*```html*": "**",
        " ```html*": " *",
        " if.": " .",
        " if?": " ?",
        "if ": " ",
        " if]": " ]",
        "[if]": "[]",
        "*if*": "**",
        " if*": " *",
        " cmd.": " .",
        " cmd?": " ?",
        "cmd ": " ",
        " cmd]": " ]",
        "[cmd]": "[]",
        "*cmd*": "**",
        " cmd*": " *",
        " who.": " .",
        " who?": " ?",
        "who ": " ",
        " who]": " ]",
        "[who]": "[]",
        "*who*": "**",
        " who*": " *",
        " Objets.": " .",
        " Objets?": " ?",
        "Objets ": " ",
        " Objets]": " ]",
        "[Objets]": "[]",
        "*Objets*": "**",
        " Objets*": " *",
        " Interactions.": " .",
        " Interactions?": " ?",
        "Interactions ": " ",
        " Interactions]": " ]",
        "[Interactions]": "[]",
        "*Interactions*": "**",
        " Interactions*": " *",
        " Widgets.": " .",
        " Widgets?": " ?",
        "Widgets ": " ",
        " Widgets]": " ]",
        "[Widgets]": "[]",
        "*Widgets*": "**",
        " Widgets*": " *",
        " Plugins.": " .",
        " Plugins?": " ?",
        "Plugins ": " ",
        " Plugins]": " ]",
        "[Plugins]": "[]",
        "*Plugins*": "**",
        " Plugins*": " *",
        " et.": " .",
        " et?": " ?",
        "et ": " ",
        " et]": " ]",
        "[et]": "[]",
        "*et*": "**",
        " et*": " *",
        " displayCard.": " .",
        " displayCard?": " ?",
        "displayCard ": " ",
        " displayCard]": " ]",
        "[displayCard]": "[]",
        "*displayCard*": "**",
        " displayCard*": " *",
        " php`.": " .",
        " php`?": " ?",
        "php` ": " ",
        " php`]": " ]",
        "[php`]": "[]",
        "*php`*": "**",
        " php`*": " *",
        " data-coreSupport.": " .",
        " data-coreSupport?": " ?",
        "data-coreSupport ": " ",
        " data-coreSupport]": " ]",
        "[data-coreSupport]": "[]",
        "*data-coreSupport*": "**",
        " data-coreSupport*": " *",
        " else.": " .",
        " else?": " ?",
        "else ": " ",
        " else]": " ]",
        "[else]": "[]",
        "*else*": "**",
        " else*": " *",
        " template.": " .",
        " template?": " ?",
        "template ": " ",
        " template]": " ]",
        "[template]": "[]",
        "*template*": "**",
        " template*": " *",
        " length.": " .",
        " length?": " ?",
        "length ": " ",
        " length]": " ]",
        "[length]": "[]",
        "*length*": "**",
        " length*": " *",
        " __________________displayAsTable.": " .",
        " __________________displayAsTable?": " ?",
        "__________________displayAsTable ": " ",
        " __________________displayAsTable]": " ]",
        "[__________________displayAsTable]": "[]",
        "*__________________displayAsTable*": "**",
        " __________________displayAsTable*": " *",
        " jeeLog.": " .",
        " jeeLog?": " ?",
        "jeeLog ": " ",
        " jeeLog]": " ]",
        "[jeeLog]": "[]",
        "*jeeLog*": "**",
        " jeeLog*": " *",
        " noUiSlider.": " .",
        " noUiSlider?": " ?",
        "noUiSlider ": " ",
        " noUiSlider]": " ]",
        "[noUiSlider]": "[]",
        "*noUiSlider*": "**",
        " noUiSlider*": " *",
        " Touch.": " .",
        " Touch?": " ?",
        "Touch ": " ",
        " Touch]": " ]",
        "[Touch]": "[]",
        "*Touch*": "**",
        " Touch*": " *",
        " nouislider.": " .",
        " nouislider?": " ?",
        "nouislider ": " ",
        " nouislider]": " ]",
        "[nouislider]": "[]",
        "*nouislider*": "**",
        " nouislider*": " *",
        " Attention.": " .",
        " Attention?": " ?",
        "Attention ": " ",
        " Attention]": " ]",
        "[Attention]": "[]",
        "*Attention*": "**",
        " Attention*": " *",
        " ```js.": " .",
        " ```js?": " ?",
        "```js ": " ",
        " ```js]": " ]",
        "[```js]": "[]",
        "*```js*": "**",
        " ```js*": " *",
        " undefined.": " .",
        " undefined?": " ?",
        "undefined ": " ",
        " undefined]": " ]",
        "[undefined]": "[]",
        "*undefined*": "**",
        " undefined*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " ```json.": " .",
        " ```json?": " ?",
        "```json ": " ",
        " ```json]": " ]",
        "[```json]": "[]",
        "*```json*": "**",
        " ```json*": " *"
    },
    "dev\/core4.3.md": {
        "Développeurs de plugin": "",
        "Core v4": "",
        "Presque toutes les variables et fonctions des pages du Core ont été isolées dans un namespace": "",
        "ça permet de ne pas recréer toutes les fonctions si on revient sur la page, d'isoler les variables et fonctions par page donc pas de collision possible, çà rend le code beaucoup plus lisible puisqu'on sait quelle fonction ou variable vient et va où, et çà aide énormément le debuggage (un console du namespace et on voit tout": "",
        "Les fonctions js de l'UI sont donc maintenant dans le namespace jeeFrontEnd": "",
        "\\core\\js\\jeedom.class.js": "",
        "Global object where each Core page register its own functions and variable in its sub-object name": "",
        "jeedom_firstUse": "",
        "false, snap": "",
        "false, grid": "",
        "false, gridSize": "",
        "false, highlight": "",
        "\/\/loadPage history": "",
        "PREVIOUS_PAGE": "",
        "PREVIOUS_LOCATION": "",
        "NO_POPSTAT": "",
        "\/\/@index.php": "",
        "```": "",
        "La fonction `displayPlan()` devient `jeeFrontEnd.plan.displayPlan()`": "",
        "Dans la même logique, les variables passées du php au js sont maintenant dans namespace jeephp2js": "",
        "La variable js `planHeader_id` devient `jeephp2js.planHeader_id`": "",
        "Modifications optionnelles": "",
        "Code source et traductions": "",
        "Il est maintenant possible de développer un plugin avec le code source en Anglais": "",
        "Si vous développez en Français dans le code source": "",
        "desktop\/php\/monplugin.php": "",
        "En Anglais": "",
        "Sans fichier i18n, le plugin sera affiché en Anglais sur un Core configuré en Français": "",
        "Attention, sur un Core pré 4": "",
        "3, l'affichage se fera en Anglais quelque soit la langue du Core": "",
        "La fonction addCmdToTable() n'est plus obligatoire": "",
        "Si elle n'est pas présente, celle du Core sera utilisée": "",
        "Il faut juste créer une table html `<table id=\"table_cmd\" class=\"table table-bordered table-condensed\"><\/table>`": "",
        "Sur les commandes info, le bouton": "",
        "n'est plus affiché, c'est la valeur qui est affichée, et updatée en temps réel": "",
        "Pour ajouter cette info dans une table de commande": "",
        "`<span class=\"cmdAttr\" data-l1key=\"htmlstate\"><\/span>`": "",
        "La déclaration de la fonction d'update évolue": "",
        "jeedom.cmd.update[": "",
        "function(_options": "",
        "Date de collecte": "",
        "+_options.collectDate": "",
        "jeedom.cmd.refreshValue([{cmd_id": "",
        "display_value": "",
        "jeedom.cmd.addUpdateFunction": "",
        ";": "",
        "Notez le nouveau paramètre `unit`, qui permet au Core de transformer, par exemple, 3500W en 3.5kW": "",
        "Source de message (4.3.7": "",
        "En cas d'action": "",
        "le Core indique maintenant la source spécifiée plutôt que 'scenario": "",
        "Exemple pour le plugin Mode": "",
        "createAndExec('action', $action['cmd'], $options);": "",
        " Obsolete.": " .",
        " Obsolete?": " ?",
        "Obsolete ": " ",
        " Obsolete]": " ]",
        "[Obsolete]": "[]",
        "*Obsolete*": "**",
        " Obsolete*": " *",
        " Deprecated.": " .",
        " Deprecated?": " ?",
        "Deprecated ": " ",
        " Deprecated]": " ]",
        "[Deprecated]": "[]",
        "*Deprecated*": "**",
        " Deprecated*": " *",
        " ```js.": " .",
        " ```js?": " ?",
        "```js ": " ",
        " ```js]": " ]",
        "[```js]": "[]",
        "*```js*": "**",
        " ```js*": " *",
        " jeeFrontEnd.": " .",
        " jeeFrontEnd?": " ?",
        "jeeFrontEnd ": " ",
        " jeeFrontEnd]": " ]",
        "[jeeFrontEnd]": "[]",
        "*jeeFrontEnd*": "**",
        " jeeFrontEnd*": " *",
        " __description.": " .",
        " __description?": " ?",
        "__description ": " ",
        " __description]": " ]",
        "[__description]": "[]",
        "*__description*": "**",
        " __description*": " *",
        " language.": " .",
        " language?": " ?",
        "language ": " ",
        " language]": " ]",
        "[language]": "[]",
        "*language*": "**",
        " language*": " *",
        " userProfils.": " .",
        " userProfils?": " ?",
        "userProfils ": " ",
        " userProfils]": " ]",
        "[userProfils]": "[]",
        "*userProfils*": "**",
        " userProfils*": " *",
        " planEditOption.": " .",
        " planEditOption?": " ?",
        "planEditOption ": " ",
        " planEditOption]": " ]",
        "[planEditOption]": "[]",
        "*planEditOption*": "**",
        " planEditOption*": " *",
        " state.": " .",
        " state?": " ?",
        "state ": " ",
        " state]": " ]",
        "[state]": "[]",
        "*state*": "**",
        " state*": " *",
        " true.": " .",
        " true?": " ?",
        "true ": " ",
        " true]": " ]",
        "[true]": "[]",
        "*true*": "**",
        " true*": " *",
        " null.": " .",
        " null?": " ?",
        "null ": " ",
        " null]": " ]",
        "[null]": "[]",
        "*null*": "**",
        " null*": " *",
        " false.": " .",
        " false?": " ?",
        "false ": " ",
        " false]": " ]",
        "[false]": "[]",
        "*false*": "**",
        " false*": " *",
        " modifyWithoutSave.": " .",
        " modifyWithoutSave?": " ?",
        "modifyWithoutSave ": " ",
        " modifyWithoutSave]": " ]",
        "[modifyWithoutSave]": "[]",
        "*modifyWithoutSave*": "**",
        " modifyWithoutSave*": " *",
        " serverDatetime.": " .",
        " serverDatetime?": " ?",
        "serverDatetime ": " ",
        " serverDatetime]": " ]",
        "[serverDatetime]": "[]",
        "*serverDatetime*": "**",
        " serverDatetime*": " *",
        " clientServerDiffDatetime.": " .",
        " clientServerDiffDatetime?": " ?",
        "clientServerDiffDatetime ": " ",
        " clientServerDiffDatetime]": " ]",
        "[clientServerDiffDatetime]": "[]",
        "*clientServerDiffDatetime*": "**",
        " clientServerDiffDatetime*": " *",
        " serverTZoffsetMin.": " .",
        " serverTZoffsetMin?": " ?",
        "serverTZoffsetMin ": " ",
        " serverTZoffsetMin]": " ]",
        "[serverTZoffsetMin]": "[]",
        "*serverTZoffsetMin*": "**",
        " serverTZoffsetMin*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " html.": " .",
        " html?": " ?",
        "html ": " ",
        " html]": " ]",
        "[html]": "[]",
        "*html*": "**",
        " html*": " *",
        " addCmdToTable.": " .",
        " addCmdToTable?": " ?",
        "addCmdToTable ": " ",
        " addCmdToTable]": " ]",
        "[addCmdToTable]": "[]",
        "*addCmdToTable*": "**",
        " addCmdToTable*": " *",
        " Tester.": " .",
        " Tester?": " ?",
        "Tester ": " ",
        " Tester]": " ]",
        "[Tester]": "[]",
        "*Tester*": "**",
        " Tester*": " *",
        " Widgets.": " .",
        " Widgets?": " ?",
        "Widgets ": " ",
        " Widgets]": " ]",
        "[Widgets]": "[]",
        "*Widgets*": "**",
        " Widgets*": " *",
        " valueDate.": " .",
        " valueDate?": " ?",
        "valueDate ": " ",
        " valueDate]": " ]",
        "[valueDate]": "[]",
        "*valueDate*": "**",
        " valueDate*": " *",
        " collectDate.": " .",
        " collectDate?": " ?",
        "collectDate ": " ",
        " collectDate]": " ]",
        "[collectDate]": "[]",
        "*collectDate*": "**",
        " collectDate*": " *",
        " alertLevel.": " .",
        " alertLevel?": " ?",
        "alertLevel ": " ",
        " alertLevel]": " ]",
        "[alertLevel]": "[]",
        "*alertLevel*": "**",
        " alertLevel*": " *",
        " Devient.": " .",
        " Devient?": " ?",
        "Devient ": " ",
        " Devient]": " ]",
        "[Devient]": "[]",
        "*Devient*": "**",
        " Devient*": " *",
        " unit.": " .",
        " unit?": " ?",
        "unit ": " ",
        " unit]": " ]",
        "[unit]": "[]",
        "*unit*": "**",
        " unit*": " *",
        " message.": " .",
        " message?": " ?",
        "message ": " ",
        " message]": " ]",
        "[message]": "[]",
        "*message*": "**",
        " message*": " *",
        " php.": " .",
        " php?": " ?",
        "php ": " ",
        " php]": " ]",
        "[php]": "[]",
        "*php*": "**",
        " php*": " *",
        " scenarioExpression.": " .",
        " scenarioExpression?": " ?",
        "scenarioExpression ": " ",
        " scenarioExpression]": " ]",
        "[scenarioExpression]": "[]",
        "*scenarioExpression*": "**",
        " scenarioExpression*": " *"
    },
    "dev\/core4.4.md": {
        "Développeurs de plugin": "",
        "Core v4": "",
        "Un jour, jQuery": "",
        "jQuery est un framework toujours très utilisé en interface web, et Jeedom s'appuie historiquement énormément dessus": "",
        "Malgré tout, le html5 et les navigateurs récents permettent de plus en plus de s'en passer": "",
        "L'intérêt pour Jeedom est avant tout la performance, et il n'est pas encore question de supprimer jQuery et ses plugins (jQuery UI, contextmenu, les modales, autocomplete, tablesorter, etc": "",
        "Mais il faut y penser, et commencer un jour": "",
        "Le Core 4": "",
        "4 intègre donc les fonctions de bases que sont setValues() et getValues(), qui sont maintenant également prototypées sur les": "",
        "fn historiquement": "",
        "Quelques fonctions ont également été implémentées comme last(), triggerEvent(), isHidden(), empty(), addClass(),  removeClass(), toggleClass(), hasClass": "",
        "Le but n'est pas de refaire un jQuery bien sûr, mais proposer des raccourcis fonctionnels quand c'est nécessaire": "",
        "Pour une transition plus facile et une meilleure maintenance, les nouvelles fonctions": "",
        "sur le DOM sont maintenant": "",
        "De plus, tous les appels": "",
        "sync ou async, passent par des fonctions pur js développées en interne pour le Core": "",
        "sont donc utilisés par toutes les class js et par la fonction jeedomUtils.loadPage": "",
        "Cela permet de maîtriser tout ce qu'il se passe sans couche d'abstraction, et a entre autres, permis de filtrer tous les scripts js et stylesheets css venant de 3rdparty (core et plugins) pour les charger dans le document": "",
        "head et ne pas les recharger ensuite": "",
        "Synthèse": "",
        "La gestion des": "",
        "passera également progressivement en pur js": "",
        "Les pages": "",
        "sont déjà en full js avec délégation des events": "",
        "C'est un chantier énorme, autant dans la réécriture de l'existant que dans la création de libs interne pour répondre aux besoins du front-end sans jQuery": "",
        "De plus, il faudra conserver jQuery et ses plugins\/libs encore quelques temps pour les plugins": "",
        "Mais la route est prise": "",
        "Quelques exemples": "",
        "~~~ js": "",
        "\/\/Pure js": "",
        "document.querySelector('#table_objectSummary tbody": "",
        "insertAdjacentHTML('beforeend', tr": "",
        "document.querySelectorAll('#table_objectSummary tbody tr').last": "",
        "setJeeValues(_summary, '.objectSummaryAttr": "",
        "var eqId = $('.eqLogicAttr[data-l1key=id]').value": "",
        "var config = $('#config').getValues('.configKey')[0": "",
        "var expression = $(this).closest('.actionOnMessage').getValues('.expressionAttr": "",
        "var eqId = document.querySelector('.eqLogicAttr[data-l1key=\"id\"]').jeeValue": "",
        "var config = document.getElementById('config').getJeeValues('.configKey')[0": "",
        "var expression = this.closest('.actionOnMessage').getJeeValues('.expressionAttr": "",
        "function(_data": "",
        "var tr = '<tr": "",
        "tr += '<td": "",
        "tr += '<\/td": "",
        "tr += '<\/tr": "",
        "let newRow = $(tr": "",
        "newRow.setValues(data, '.mytrDataAttr": "",
        "\/\/return newRow": "",
        "let newRow = document.createElement('tr": "",
        "newRow.innerHTML = tr": "",
        "newRow.setJeeValues(_data, '.mytrDataAttr": "",
        "document.getElementById('table_stuff').querySelector('tbody').appendChild(newRow": "",
        "console.log('Dom ready": "",
        "\/\/Core js": "",
        "domUtils(function": "",
        "~~~": "",
        "Le fichier plugin-template": "",
        "js et la plupart des pages du Core utilisent maintenant ces fonctions": "",
        "Vous pouvez bien sûr les utiliser dans les plugins, mais ceux-ci devront alors être installé sur un Core 4": "",
        "4 minimum": "",
        "fonctions DOM propres au Core": "",
        "Doc Core js": "",
        "Fonction php": "",
        "`displayExeption()` -> `displayException()`": "",
        "`convertDayEnToFr()` -> `convertDayFromEn()`": "",
        "Fonctions js (disponibles depuis Core4.3": "",
        "`displayPlan()` -> `jeeFrontEnd.plan.displayPlan()`": "",
        "jQuery Toastr \/ Tooltipster": "",
        "La lib": "",
        "a été supprimée du Core": "",
        "Elle était utilisée au travers des fonctions jeedomUtils": "",
        "showAlert() et hideAlert() et a été remplacée par la fonction interne du Core jeeDialog.toast": "",
        "La lib Tooltipster, dépendante de jQuery, a également été remplacée par la lib Tippy js": "",
        "L'utilisation de jeedomUtils": "",
        "initTooltips() par les plugins ne change pas": "",
        "jQuery datetimepicker": "",
        "datePickerInit() et dateTimePickerInit() et a été remplacée par la lib": "",
        "Les fonctions du Core gèrent le thème": "",
        "et la langue de la lib en fonction de la langue du Core": "",
        "Pour rappel": "",
        "~~~ html": "",
        "jeedomUtils.datePickerInit() \/\/Init all input.in_datepicker": "",
        "jeedomUtils.dateTimePickerInit() \/\/Init all input.in_timepicker": "",
        "jeedomUtils.datePickerInit('Y-m-d H": "",
        "00', '#myCustomDatetime') \/\/Will init myCustomDatetime input with custom format": "",
        "Ces fonctions renvoient un message d'erreur, mais fonctionnent encore": "",
        "Fonctions php": "",
        "byTypeAndSearhConfiguration()` -> `eqLogic": "",
        "Fonctions js (disponibles depuis Core4.2": "",
        "`jeedom.eqLogic.builSelectCmd` -> `jeedom.eqLogic.buildSelectCmd`": "",
        "`checkPageModified` -> `jeedomUtils.checkPageModified`": "",
        "`loadPage` -> `jeedomUtils.loadPage`": "",
        "`initPage` -> `jeedomUtils.initPage`": "",
        "`initTooltips` -> `jeedomUtils.initTooltips`": "",
        "`initTableSorter` -> `jeedomUtils.initTableSorter`": "",
        "`initHelp` -> `jeedomUtils.initHelp`": "",
        "`datePickerInit` -> `jeedomUtils.datePickerInit`": "",
        "`normTextLower` -> `jeedomUtils.normTextLower`": "",
        "`sleep` -> `jeedomUtils.sleep`": "",
        "`uniqId` -> `jeedomUtils.uniqId`": "",
        "`taAutosize` -> `jeedomUtils.taAutosize`": "",
        "`hexToRgb` -> `jeedomUtils.hexToRgb`": "",
        "`componentToHex` -> `jeedomUtils.componentToHex`": "",
        "`rgbToHex` -> `jeedomUtils.rgbToHex`": "",
        "`addOrUpdateUrl` -> `jeedomUtils.addOrUpdateUrl`": "",
        "`positionEqLogic` -> `jeedomUtils.positionEqLogic`": "",
        "`chooseIcon` -> `jeedomUtils.chooseIcon`": "",
        "`getOpenedModal` -> `jeedomUtils.getOpenedModal`": "",
        "Variables js (disponibles depuis Core4.3": "",
        "`jeedom_langage` -> `jeeFrontEnd.language`": "",
        "`userProfils` -> `jeeFrontEnd.userProfils`": "",
        "Ces modifications peuvent entraîner la nécessité de monter la version Jeedom minimale requise de nombreux plugins": "",
        "C'est pourquoi les": "",
        "n'apparaissent pas sur un Core en branche master, mais permettent aux développeurs de voir ce qu'ils peuvent corriger": "",
        "jQuery Autocomplete": "",
        "input.jeeComplete": "",
        "La lib Autocomplete, dépendante de jQuery, sera supprimée dans une future version du Core": "",
        "Elle est remplacée par la fonction interne du Core": "",
        "Celle-ci supporte la plupart des options précédentes (source sur ajax etc), mais corrige plusieurs défauts, apporte de nouveaux comportements (flèche haut et bas pour sélectionner une proposition, etc) et permet d'utiliser un seul container pour plusieurs inputs, réduisant énormément l'impact sur le DOM, notamment sur les scénarios": "",
        "document.querySelector('input.auto').jeeComplete": "",
        "jQuery bootbox": "",
        "La lib bootbox, dépendante de jQuery, sera supprimée dans une future version du Core": "",
        "jeeDialog() remplace ces fonctions, avec jeeDialog": "",
        "alert(), jeeDialog": "",
        "confirm(), jeeDialog.prompt": "",
        "if (condition": "",
        "jeeDialog.alert('This is wrong dude": "",
        "jeeDialog.prompt('Enter new name": "",
        "function(result": "",
        "if (result": "",
        "\/\/Do stuff": "",
        "jeeDialog.confirm('Do you really want to delete this": "",
        "\/\/Do other stuff": "",
        "jQuery UI": "",
        "La lib jQuery UI sera supprimée dans une future version du Core. jeeDialog": "",
        "dialog() remplace l'utilisation des modales": "",
        "\/\/jQuery UI": "",
        "Administration système": "",
        "load('index.php": "",
        "v=d&modal=system.action').dialog('open": "",
        "\/\/Core jeeDialog": "",
        "jeeDialog.dialog": "",
        "index.php": "",
        "v=d&modal=system.action": "",
        "jQuery UI Sortable": "",
        "La lib jQuery Sortable sera supprimée dans une future version du Core": "",
        "La Lib SortableJS a été intégré au Core": "",
        "jQuery caret": "",
        "jquery.at.caret": "",
        "Le plugin jQuery": "",
        "passe en deprecated": "",
        "Utiliser `myElement.insertAtCursor(myString)`": "",
        "jQuery contextMenu": "",
        "La lib contextMenu, dépendante de jQuery, sera supprimée dans une future version du Core": "",
        "jeeCtxMenu() remplace ces fonctions": "",
        "var myCtxMenu = new jeeCtxMenu": "",
        "nav-tabs li', \/\/Required": "",
        "div#div_pageContainer": "",
        "\/\/Added to menu container": "",
        "Mon item": "",
        "fas fa-cogs": "",
        "\/\/Added to item container": "",
        "function(key, opt) { \/\/Item callback": "",
        "function(key, opt) { \/\/Default callback if not set on item": "",
        "\/": "",
        "function(opt": "",
        "function(trigger": "",
        "var contextmenuitems": "",
        "function(key, options, event": "",
        "\/\/Set items": "",
        "function(opt, x, y": "",
        "jQuery FileUpload": "",
        "La lib jQuery fileupload sera supprimée dans une future version du Core": "",
        "jeeFileUploader() remplace l'utilisation de ces fonctions": "",
        "core\/ajax\/plan.ajax.php": "",
        "action=uploadImage&id=' + id": "",
        "function(event, data": "",
        "\/\/Core jeeFileUploader": "",
        "new jeeFileUploader": "",
        "document.getElementById('bt_uploadImg": "",
        "let currentPath = document.getElementById('bt_uploadImg').getAttribute('data-path": "",
        "data.url = 'core\/ajax\/jeedom.ajax.php": "",
        "action=uploadImageIcon&filepath=' + currentPath": "",
        "data.submit": "",
        "Core js (dev": "",
        "Vous pouvez tester vos plugins sur le Core sans Jquery ni Bootstrap": "",
        "Pour cela, Réglages > Système > Configuration, onglet équipements": "",
        "Modifications optionnelles": "",
        "Gestion de checkboxs multiples": "",
        "Une fonction a été introduite dans le Core pour proposer un menu contextuel sur les checkbox": "",
        "Sélectionner toutes, aucune, Sélection inversée": "",
        "Pour l'utiliser, il faut ajouter la class css": "",
        "sur les checkboxs concernées, et appeller la fonction": "",
        "data-l1key": "",
        "data-l2key": "",
        "Les checkboxs seront alors groupées par même": "",
        "si ils existent": "",
        "data-context=\"group1": "",
        "Vous pouvez également faire des groupes de checkboxs avec l'attribut": "",
        "Enfin, vous pouvez définir une fonction callback de la sorte": "",
        "var checkContextMenuCallback = function(_el": "",
        "\/\/_el is an html element": "",
        "_el.triggerEvent('change": "",
        "jeedomUtils.setCheckContextMenu(checkContextMenuCallback": "",
        " NodeList.": " .",
        " NodeList?": " ?",
        "NodeList ": " ",
        " NodeList]": " ]",
        "[NodeList]": "[]",
        "*NodeList*": "**",
        " NodeList*": " *",
        " Element.": " .",
        " Element?": " ?",
        "Element ": " ",
        " Element]": " ]",
        "[Element]": "[]",
        "*Element*": "**",
        " Element*": " *",
        " et.": " .",
        " et?": " ?",
        "et ": " ",
        " et]": " ]",
        "[et]": "[]",
        "*et*": "**",
        " et*": " *",
        " getValues.": " .",
        " getValues?": " ?",
        "getValues ": " ",
        " getValues]": " ]",
        "[getValues]": "[]",
        "*getValues*": "**",
        " getValues*": " *",
        " setValues.": " .",
        " setValues?": " ?",
        "setValues ": " ",
        " setValues]": " ]",
        "[setValues]": "[]",
        "*setValues*": "**",
        " setValues*": " *",
        " setJeeValues.": " .",
        " setJeeValues?": " ?",
        "setJeeValues ": " ",
        " setJeeValues]": " ]",
        "[setJeeValues]": "[]",
        "*setJeeValues*": "**",
        " setJeeValues*": " *",
        " getJeeValues.": " .",
        " getJeeValues?": " ?",
        "getJeeValues ": " ",
        " getJeeValues]": " ]",
        "[getJeeValues]": "[]",
        "*getJeeValues*": "**",
        " getJeeValues*": " *",
        " Ajax.": " .",
        " Ajax?": " ?",
        "Ajax ": " ",
        " Ajax]": " ]",
        "[Ajax]": "[]",
        "*Ajax*": "**",
        " Ajax*": " *",
        " load.": " .",
        " load?": " ?",
        "load ": " ",
        " load]": " ]",
        "[load]": "[]",
        "*load*": "**",
        " load*": " *",
        " html.": " .",
        " html?": " ?",
        "html ": " ",
        " html]": " ]",
        "[html]": "[]",
        "*html*": "**",
        " html*": " *",
        " Dashboard.": " .",
        " Dashboard?": " ?",
        "Dashboard ": " ",
        " Dashboard]": " ]",
        "[Dashboard]": "[]",
        "*Dashboard*": "**",
        " Dashboard*": " *",
        " Design.": " .",
        " Design?": " ?",
        "Design ": " ",
        " Design]": " ]",
        "[Design]": "[]",
        "*Design*": "**",
        " Design*": " *",
        " Scenario.": " .",
        " Scenario?": " ?",
        "Scenario ": " ",
        " Scenario]": " ]",
        "[Scenario]": "[]",
        "*Scenario*": "**",
        " Scenario*": " *",
        " events.": " .",
        " events?": " ?",
        "events ": " ",
        " events]": " ]",
        "[events]": "[]",
        "*events*": "**",
        " events*": " *",
        " \/\/jQuery.": " .",
        " \/\/jQuery?": " ?",
        "\/\/jQuery ": " ",
        " \/\/jQuery]": " ]",
        "[\/\/jQuery]": "[]",
        "*\/\/jQuery*": "**",
        " \/\/jQuery*": " *",
        " addMyTr.": " .",
        " addMyTr?": " ?",
        "addMyTr ": " ",
        " addMyTr]": " ]",
        "[addMyTr]": "[]",
        "*addMyTr*": "**",
        " addMyTr*": " *",
        " domUtils.": " .",
        " domUtils?": " ?",
        "domUtils ": " ",
        " domUtils]": " ]",
        "[domUtils]": "[]",
        "*domUtils*": "**",
        " domUtils*": " *",
        " domUI.": " .",
        " domUI?": " ?",
        "domUI ": " ",
        " domUI]": " ]",
        "[domUI]": "[]",
        "*domUI*": "**",
        " domUI*": " *",
        " Obsolete.": " .",
        " Obsolete?": " ?",
        "Obsolete ": " ",
        " Obsolete]": " ]",
        "[Obsolete]": "[]",
        "*Obsolete*": "**",
        " Obsolete*": " *",
        " toastr.": " .",
        " toastr?": " ?",
        "toastr ": " ",
        " toastr]": " ]",
        "[toastr]": "[]",
        "*toastr*": "**",
        " toastr*": " *",
        " flatpickr.": " .",
        " flatpickr?": " ?",
        "flatpickr ": " ",
        " flatpickr]": " ]",
        "[flatpickr]": "[]",
        "*flatpickr*": "**",
        " flatpickr*": " *",
        " datetimepicker.": " .",
        " datetimepicker?": " ?",
        "datetimepicker ": " ",
        " datetimepicker]": " ]",
        "[datetimepicker]": "[]",
        "*datetimepicker*": "**",
        " datetimepicker*": " *",
        " i.": " .",
        " i?": " ?",
        "i ": " ",
        " i]": " ]",
        "[i]": "[]",
        "*i*": "**",
        " i*": " *",
        " Deprecated.": " .",
        " Deprecated?": " ?",
        "Deprecated ": " ",
        " Deprecated]": " ]",
        "[Deprecated]": "[]",
        "*Deprecated*": "**",
        " Deprecated*": " *",
        " `eqLogic.": " .",
        " `eqLogic?": " ?",
        "`eqLogic ": " ",
        " `eqLogic]": " ]",
        "[`eqLogic]": "[]",
        "*`eqLogic*": "**",
        " `eqLogic*": " *",
        " byTypeAndSearchConfiguration()`.": " .",
        " byTypeAndSearchConfiguration()`?": " ?",
        "byTypeAndSearchConfiguration()` ": " ",
        " byTypeAndSearchConfiguration()`]": " ]",
        "[byTypeAndSearchConfiguration()`]": "[]",
        "*byTypeAndSearchConfiguration()`*": "**",
        " byTypeAndSearchConfiguration()`*": " *",
        " Remarque.": " .",
        " Remarque?": " ?",
        "Remarque ": " ",
        " Remarque]": " ]",
        "[Remarque]": "[]",
        "*Remarque*": "**",
        " Remarque*": " *",
        " deprecated.": " .",
        " deprecated?": " ?",
        "deprecated ": " ",
        " deprecated]": " ]",
        "[deprecated]": "[]",
        "*deprecated*": "**",
        " deprecated*": " *",
        " minLength.": " .",
        " minLength?": " ?",
        "minLength ": " ",
        " minLength]": " ]",
        "[minLength]": "[]",
        "*minLength*": "**",
        " minLength*": " *",
        " source.": " .",
        " source?": " ?",
        "source ": " ",
        " source]": " ]",
        "[source]": "[]",
        "*source*": "**",
        " source*": " *",
        " dataArray.": " .",
        " dataArray?": " ?",
        "dataArray ": " ",
        " dataArray]": " ]",
        "[dataArray]": "[]",
        "*dataArray*": "**",
        " dataArray*": " *",
        " return.": " .",
        " return?": " ?",
        "return ": " ",
        " return]": " ]",
        "[return]": "[]",
        "*return*": "**",
        " return*": " *",
        " null.": " .",
        " null?": " ?",
        "null ": " ",
        " null]": " ]",
        "[null]": "[]",
        "*null*": "**",
        " null*": " *",
        " else.": " .",
        " else?": " ?",
        "else ": " ",
        " else]": " ]",
        "[else]": "[]",
        "*else*": "**",
        " else*": " *",
        " ui-dialog.": " .",
        " ui-dialog?": " ?",
        "ui-dialog ": " ",
        " ui-dialog]": " ]",
        "[ui-dialog]": "[]",
        "*ui-dialog*": "**",
        " ui-dialog*": " *",
        " title.": " .",
        " title?": " ?",
        "title ": " ",
        " title]": " ]",
        "[title]": "[]",
        "*title*": "**",
        " title*": " *",
        " contentUrl.": " .",
        " contentUrl?": " ?",
        "contentUrl ": " ",
        " contentUrl]": " ]",
        "[contentUrl]": "[]",
        "*contentUrl*": "**",
        " contentUrl*": " *",
        " SortableJS.": " .",
        " SortableJS?": " ?",
        "SortableJS ": " ",
        " SortableJS]": " ]",
        "[SortableJS]": "[]",
        "*SortableJS*": "**",
        " SortableJS*": " *",
        " selector.": " .",
        " selector?": " ?",
        "selector ": " ",
        " selector]": " ]",
        "[selector]": "[]",
        "*selector*": "**",
        " selector*": " *",
        " nav.": " .",
        " nav?": " ?",
        "nav ": " ",
        " nav]": " ]",
        "[nav]": "[]",
        "*nav*": "**",
        " nav*": " *",
        " appendTo.": " .",
        " appendTo?": " ?",
        "appendTo ": " ",
        " appendTo]": " ]",
        "[appendTo]": "[]",
        "*appendTo*": "**",
        " appendTo*": " *",
        " className.": " .",
        " className?": " ?",
        "className ": " ",
        " className]": " ]",
        "[className]": "[]",
        "*className*": "**",
        " className*": " *",
        " items.": " .",
        " items?": " ?",
        "items ": " ",
        " items]": " ]",
        "[items]": "[]",
        "*items*": "**",
        " items*": " *",
        " uniqueNameID.": " .",
        " uniqueNameID?": " ?",
        "uniqueNameID ": " ",
        " uniqueNameID]": " ]",
        "[uniqueNameID]": "[]",
        "*uniqueNameID*": "**",
        " uniqueNameID*": " *",
        " name.": " .",
        " name?": " ?",
        "name ": " ",
        " name]": " ]",
        "[name]": "[]",
        "*name*": "**",
        " name*": " *",
        " isHtmlName.": " .",
        " isHtmlName?": " ?",
        "isHtmlName ": " ",
        " isHtmlName]": " ]",
        "[isHtmlName]": "[]",
        "*isHtmlName*": "**",
        " isHtmlName*": " *",
        " false.": " .",
        " false?": " ?",
        "false ": " ",
        " false]": " ]",
        "[false]": "[]",
        "*false*": "**",
        " false*": " *",
        " icon.": " .",
        " icon?": " ?",
        "icon ": " ",
        " icon]": " ]",
        "[icon]": "[]",
        "*icon*": "**",
        " icon*": " *",
        " callback.": " .",
        " callback?": " ?",
        "callback ": " ",
        " callback]": " ]",
        "[callback]": "[]",
        "*callback*": "**",
        " callback*": " *",
        " sep1.": " .",
        " sep1?": " ?",
        "sep1 ": " ",
        " sep1]": " ]",
        "[sep1]": "[]",
        "*sep1*": "**",
        " sep1*": " *",
        " \/\/isDisable.": " .",
        " \/\/isDisable?": " ?",
        "\/\/isDisable ": " ",
        " \/\/isDisable]": " ]",
        "[\/\/isDisable]": "[]",
        "*\/\/isDisable*": "**",
        " \/\/isDisable*": " *",
        " show.": " .",
        " show?": " ?",
        "show ": " ",
        " show]": " ]",
        "[show]": "[]",
        "*show*": "**",
        " show*": " *",
        " hide.": " .",
        " hide?": " ?",
        "hide ": " ",
        " hide]": " ]",
        "[hide]": "[]",
        "*hide*": "**",
        " hide*": " *",
        " build.": " .",
        " build?": " ?",
        "build ": " ",
        " build]": " ]",
        "[build]": "[]",
        "*build*": "**",
        " build*": " *",
        " contextmenuitems.": " .",
        " contextmenuitems?": " ?",
        "contextmenuitems ": " ",
        " contextmenuitems]": " ]",
        "[contextmenuitems]": "[]",
        "*contextmenuitems*": "**",
        " contextmenuitems*": " *",
        " position.": " .",
        " position?": " ?",
        "position ": " ",
        " position]": " ]",
        "[position]": "[]",
        "*position*": "**",
        " position*": " *",
        " url.": " .",
        " url?": " ?",
        "url ": " ",
        " url]": " ]",
        "[url]": "[]",
        "*url*": "**",
        " url*": " *",
        " dataType.": " .",
        " dataType?": " ?",
        "dataType ": " ",
        " dataType]": " ]",
        "[dataType]": "[]",
        "*dataType*": "**",
        " dataType*": " *",
        " json.": " .",
        " json?": " ?",
        "json ": " ",
        " json]": " ]",
        "[json]": "[]",
        "*json*": "**",
        " json*": " *",
        " done.": " .",
        " done?": " ?",
        "done ": " ",
        " done]": " ]",
        "[done]": "[]",
        "*done*": "**",
        " done*": " *",
        " fileInput.": " .",
        " fileInput?": " ?",
        "fileInput ": " ",
        " fileInput]": " ]",
        "[fileInput]": "[]",
        "*fileInput*": "**",
        " fileInput*": " *",
        " add.": " .",
        " add?": " ?",
        "add ": " ",
        " add]": " ]",
        "[add]": "[]",
        "*add*": "**",
        " add*": " *",
        " Voir.": " .",
        " Voir?": " ?",
        "Voir ": " ",
        " Voir]": " ]",
        "[Voir]": "[]",
        "*Voir*": "**",
        " Voir*": " *",
        " Tip.": " .",
        " Tip?": " ?",
        "Tip ": " ",
        " Tip]": " ]",
        "[Tip]": "[]",
        "*Tip*": "**",
        " Tip*": " *",
        " checkContext.": " .",
        " checkContext?": " ?",
        "checkContext ": " ",
        " checkContext]": " ]",
        "[checkContext]": "[]",
        "*checkContext*": "**",
        " checkContext*": " *",
        " js.": " .",
        " js?": " ?",
        "js ": " ",
        " js]": " ]",
        "[js]": "[]",
        "*js*": "**",
        " js*": " *"
    },
    "dev\/daemon_plugin.md": {
        "`pip3 list": "",
        "grep -Ewc \"aiohttp\"'`": "",
        "Ec \"python3\\-requests": "",
        "python3\\-voluptuous": "",
        "python3\\-bs4\"'`": "",
        "pip3 list": "",
        "grep -Ewc \"aiohttp\"') < 1) { \/\/ adaptez la liste des paquets et le total": "",
        "python3\\-bs4\"') < 3) { \/\/ adaptez la liste des paquets et le total": "",
        "Les démons & dépendances": "",
        "Dans le": "",
        "et la": "",
        "vous avez appris comment coder votre premier plugin avec des actions relativement simples déclenchées par l'utilisateur via une commande action ou par une tâche planifiée par le core (les crons": "",
        "Le plugin est alors capable de ponctuellement aller chercher de l'information (par exemple via requête http) ou de faire toute sortes d'opérations pour autant que cela puisse être codé en PHP": "",
        "Il va arriver que vous ayez besoin de plus que cela, quelques exemples sans être exhaustif": "",
        "utiliser des resources systèmes, par exemple clé usb ou autres matériels (bluetooth": "",
        "maintenir une connexion avec un système distant (en réseau local ou sur internet mais pas jeedom": "",
        "garder des processus actifs en arrière plan ce qui n'est pas le cas du code PHP qui ne \"vit\" que pendant l'exécution de la requête http": "",
        "faire un traitement en temps réel": "",
        "Pour cela, la plupart du temps on utilise un \"démon": "",
        "Pas de panique, tout est déjà prévu dans le core de jeedom pour nous aider à mettre ce démon en place et on va détailler cela ici": "",
        "Structure des fichiers d'un démon": "",
        "Le code et\/ou l'exécutable de votre démon doit évidement se trouver dans l'arborescence de votre plugin et doit donc être inclus et livré avec l'archive lors de l'installation d'un plugin": "",
        "Il n'y a pas de règle stricte sur l'emplacement exact de votre démon, cependant la convention veut que l'on place celui-ci dans le sous-répertoire `": "",
        "\/resources\/` du plugin": "",
        "plateformes supportées par Jeedom": "",
        "Dans le plugin template vous trouverez les bases pour implémenter un démon en python et c'est l'exemple que l'on va utiliser dans cette documentation cependant vous êtes libre de développer votre démon dans le langage de votre choix à condition qu'il puisse être exécuté sur les": "",
        "La plupart des démons des plugins Jeedom sont en python ou nodeJs mais il en existe aussi en": "",
        "netCore et certainement d'autres technos": "",
        "Vous trouverez également quelques méthodes utiles pour un démon en nodeJs qui seront peut-être détaillées dans une prochaine version de cette documentation": "",
        "Pour l'instant je vous invite à consulter le community dev pour vous aligner avec les autres développeurs sur tout ce qui concerne NodeJs, principalement sur la version à utiliser": "",
        "Structure du répertoire du template": "",
        "le démon python": "",
        "Dans le plugin template, le répertoire du démon a été nommé `demond`, et le démon en lui même se nomme `demond.py`": "",
        "Ces noms sont arbitraires, libre à vous de les changer": "",
        "La convention est de prendre l'ID du plugin suivi de la lettre ´d´": "",
        "Ce qui donne par exemple pour le plugin `blea` le répertoire `": "",
        "\/resources\/blead\/` qui contient entre autre le fichier `blead": "",
        "py`, ce fichier étant le point de départ du démon": "",
        "N'hésitez pas à vous inspirer des plugins officiels avec démon pour comprendre les détails, tel que blea, openzwave ou sms": "",
        "le package jeedom pour un démon python": "",
        "Jeedom fournit avec le plugin template un package python offrant les classes et méthodes de bases utiles pour la gestion du démon et de la communication entre le démon et le code php de votre plugin": "",
        "Ces classes se trouvent dans le répertoire `.\/resources\/demond\/jeedom\/jeedom": "",
        "py` (visible dans la capture ci-dessus": "",
        "Pour démarrer vous n'avez pas besoin de connaître les détails d'implémentations de ces classes et méthodes donc ici vous aurez juste un résumé de ce qu'elles permettent": "",
        "class jeedom_utils": "",
        "Cette classe est un ensemble de méthodes statiques utiles telle que `convert_log_level` pour convertir le loglevel reçu de jeedom en un log level de la class python `logging` ou `find_tty_usb` pour retourner une liste de device sur le système": "",
        "On ne va pas toutes les détailler ici, le nom de chacune des méthodes est assez explicite, vous les découvrirez en vous plongeant dans le code": "",
        "class jeedom_serial": "",
        "Cette class encapsule la lecture et l'écriture sur un device": "",
        "De nouveau on ne va pas détailler la classe, les méthodes parlent d'elles-mêmes, sachez juste que ca existe si vous en avez besoin": "",
        "Si votre démon n'a pas besoin de faire ce type d'action, il faudra penser à ne pas utiliser ni importer cette classe car le package python `serial` n'est pas installé par défaut et dans ce cas votre démon ne démarrera pas (problème vu plusieurs fois sur community": "",
        "On y reviendra dans la gestion des dépendances": "",
        "class jeedom_socket() & jeedom_socket_handler": "",
        "Vous n'utiliserez pas la classe `jeedom_socket_handler()` directement, elle ne sert qu'à `jeedom_socket()`": "",
        "Le but de `jeedom_socket()` est d'assurer une communication descendante (de votre code php vers le démon": "",
        "Lorsque votre plugin devra envoyer une instruction à votre démon il pourra le faire via ce socket, vous verrez un exemple plus tard dans cette documentation": "",
        "Donc la class ouvre un socket tcp et écoute": "",
        "Quand un message est reçu il est mis dans une queue qui sera lue par après par votre démon, on y reviendra": "",
        "A nouveau, vous n'êtes pas obligé d'utiliser ce mécanisme, vous êtes libre de créer autre chose (server http par exemple) mais c'est ce qui est fournit de base par Jeedom, c'est léger et ca fonctionne très bien": "",
        "class jeedom_com": "",
        "Celle-ci assure la communication montante, du démon vers votre code php": "",
        "Vous utiliserez essentiellement `send_change_immediate()` au début qui permet donc d'envoyer un payload json à jeedom via une requête http": "",
        "C'est très simple et efficace, on verra un exemple plus tard": "",
        "Squelette du démon python": "",
        "A présent que l'on connaît l'environnement, on peut regarder la partie qui nous intéresse le plus": "",
        "le démon et ce qu'on va devoir coder": "",
        "On va donc regarder en détails le squelette d'un démon tel que proposé par Jeedom, ouvrez le fichier `demond": "",
        "py` et on va commencer par les dernières lignes qui sont en fait le début du programme": "",
        "_log_level = \"error": "",
        "_socket_port = 55009 # à modifier": "",
        "_socket_host = 'localhost": "",
        "_device = 'auto": "",
        "_pidfile = '\/tmp\/demond.pid": "",
        "for arg in sys.argv": "",
        "if arg.startswith(\"--loglevel": "",
        "temp, _log_level = arg.split": "",
        "elif arg.startswith(\"--socketport": "",
        "temp, _socket_port = arg.split": "",
        "elif arg.startswith(\"--sockethost": "",
        "temp, _socket_host = arg.split": "",
        "elif arg.startswith(\"--pidfile": "",
        "temp, _pidfile = arg.split": "",
        "elif arg.startswith(\"--apikey": "",
        "temp, _apikey = arg.split": "",
        "elif arg.startswith(\"--device": "",
        "temp, _device = arg.split": "",
        "_socket_port = int(_socket_port": "",
        "jeedom_utils.set_log_level(_log_level": "",
        "logging.info('Start demond": "",
        "logging.info('Log level": "",
        "+str(_log_level": "",
        "logging.info('Socket port": "",
        "+str(_socket_port": "",
        "logging.info('Socket host": "",
        "+str(_socket_host": "",
        "logging.info('PID file": "",
        "+str(_pidfile": "",
        "logging.info('Apikey": "",
        "+str(_apikey": "",
        "logging.info('Device": "",
        "+str(_device": "",
        "signal.signal(signal.SIGINT, handler": "",
        "signal.signal(signal.SIGTERM, handler": "",
        "jeedom_utils.write_pid(str(_pidfile": "",
        "jeedom_com = jeedom_com(apikey = _apikey,url = _callback,cycle=_cycle": "",
        "if not jeedom_com.test": "",
        "logging.error('Network communication issues": "",
        "Please fixe your Jeedom network configuration": "",
        "jeedom_socket = jeedom_socket(port=_socket_port,address=_socket_host": "",
        "except Exception as e": "",
        "logging.error('Fatal error": "",
        "+str(e": "",
        "```": "",
        "Quelques initialisations de variable": "",
        "_log_level = \"error\" # le log level par défaut, au format texte tel qu'il est envoyé par Jeedom": "",
        "_socket_port = 55009 # le port que votre démon utilisera par défaut pour ouvrir le socket d'écoute de Jeedom, à modifier": "",
        "_socket_host = 'localhost' # l'interface sur laquelle ouvrir le socket, à priori ne pas changer": "",
        "_device = 'auto' # ne sert à rien si vous n'utilisez pas un device matériel": "",
        "_pidfile = '\/tmp\/demond": "",
        "pid' # emplacement par défaut du pidfile, ce fichier est utiliser par Jeedom pour savoir si votre démon est démarrer ou pas; nom du démon à modifier comme expliqué ci-dessus;": "",
        "_apikey = '' # apikey pour authentifier la communication entre Jeedom et votre démon": "",
        "l'url de callback pour envoyer les notifications à Jeedom (et à votre code php": "",
        "Il faut bien faire attention en choisissant le port que vous allez utiliser pour votre socket, c'est un point d'amélioration possible sous jeedom, car il n'y a pas de mécanisme en place pour éviter les collisions": "",
        "donc si un autre plugin utilise le même port que vous cela va évidement poser un problème": "",
        "Pour l'instant la seule méthode pour faire son choix est de chercher parmi les plugins existant les ports déjà utilisés et de s'aligner entre dev sur community (il y a déjà des sujets ouverts à ce propos": "",
        "Par ailleurs il est important de laisser ceci configurable par l'utilisateur dans la configuration de votre plugin pour que le numéro de port puisse être modifié si un tel conflit devait se produire": "",
        "Ensuite on récupère les arguments reçus en ligne de commande, cette ligne de commande sera générée par votre code php, on y reviendra": "",
        "A vous de supprimer ce qui n'est pas utile (comme l'argument device) ou d'en rajouter d'autres tel qu'un user\/pswd si votre démon doit se connecter sur un système distant": "",
        "Ensuite il y a quelques lignes de log et ces deux lignes, classique en python, qui enregistrent simplement la méthode à appeler dans le cas où ces deux signaux d'interruptions sont reçus, ce qui permettra de stopper le démon": "",
        "et la méthode `handler` qui est définie un peu plus haut dans le démon": "",
        "def handler(signum=None, frame=None": "",
        "logging.debug(\"Signal %i caught, exiting...\" % int(signum": "",
        "qui ne fait que rajouter un log et appeler la méthode `shutdown()` définie juste en dessous": "",
        "def shutdown": "",
        "logging.debug(\"Shutdown": "",
        "logging.debug(\"Removing PID file \" + str(_pidfile": "",
        "os.remove(_pidfile": "",
        "jeedom_socket.close": "",
        "jeedom_serial.close": "",
        "logging.debug(\"Exit 0": "",
        "sys.stdout.flush": "",
        "os._exit(0": "",
        "C'est dans cette méthode que vous devez écrire le code à exécuter en cas de shutdown du démon, par exemple faire un logout du système distant et fermer proprement les connexions ouvertes": "",
        "vous devez adapter cette méthode et supprimer le code qui n'est pas nécessaire dans votre cas, notamment le try\/except sur `jeedom_serial": "",
        "close()` si vous n'utilisez pas cette classe": "",
        "Si on retourne sur le démarrage du démon, voici la suite commentée": "",
        "jeedom_utils.write_pid(str(_pidfile)) # écrit le pidfile que le core de jeedom va surveiller pour déterminer si le démon est démarré": "",
        "jeedom_com = jeedom_com(apikey = _apikey,url = _callback,cycle=_cycle) # création de l'objet jeedom_com": "",
        "if not jeedom_com": "",
        "premier test pour vérifier que l'url de callback est correcte": "",
        "jeedom_socket = jeedom_socket(port=_socket_port,address=_socket_host) # on déclare le socket pour recevoir les ordres de jeedom": "",
        "listen() # et on écoute": "",
        "La méthode `listen()` définie au début du fichier": "",
        "def listen": "",
        "jeedom_socket.open": "",
        "while 1": "",
        "time.sleep(0.5": "",
        "read_socket": "",
        "except KeyboardInterrupt": "",
        "Rien à modifier ici, on peut voir que le socket est ouvert et ensuite une boucle infinie pour lire toutes les demi-secondes le socket": "",
        "La méthode `read_socket()`": "",
        "def read_socket": "",
        "global JEEDOM_SOCKET_MESSAGE": "",
        "if not JEEDOM_SOCKET_MESSAGE.empty": "",
        "logging.debug(\"Message received in socket JEEDOM_SOCKET_MESSAGE": "",
        "message = json.loads(jeedom_utils.stripped(JEEDOM_SOCKET_MESSAGE.get": "",
        "if message['apikey": "",
        "logging.error(\"Invalid apikey from socket": "",
        "+ str(message": "",
        "print 'read": "",
        "except Exception, e": "",
        "logging.error('Send command to demon error": "",
        "La variable `JEEDOM_SOCKET_MESSAGE` est une `queue()` python alimentée par la class `jeedom_socket()` comme vu précédemment": "",
        "Si la queue n'est pas vide, on charge le json et on vérifie que la clé api reçue avec le message correspond à celle reçue lors du démarrage du démon (`_apikey`) ensuite on peut lire le message et faire nos actions dans le try\/except": "",
        "Donc à la place du `print 'read'` à vous de lire les éléments relevants du message que votre plugin aura envoyé et de déclencher les actions ou d'appeler vos classes ou méthodes propres à votre plugin": "",
        "A partir d'ici vous avez un démon qui peut être exécuté même s'il ne fait encore rien (ça c'est votre travail": "",
        "Adaptation du code php du plugin": "",
        "Avoir un démon et comprendre sa structure c'est très bien mais il manque quelques éléments clés pour que justement votre plugin (code php) puisse contrôler ce démon et pour que le core soit également informé qu'il existe": "",
        "plugin_info\/info.json": "",
        "Dans le fichier info": "",
        "json de votre plugin, il faut rajouter la propriété `hasOwnDeamon` et attribuer la valeur `true`, exemple": "",
        "Nous verrons plus tard l'utilisation de `hasDependency` et `maxDependancyInstallTime`": "",
        "Gestion du démon dans votre class eqLogic": "",
        "Dans la class eqLogic de votre plugin il y a quelques méthodes à implémenter pour la bonne gestion du démon": "",
        "Fonction deamon_info": "",
        "La fonction `deamon_info()` sera appelée par le core lors de l'affichage du cadre suivant dans la page de configuration de votre plugin, elle doit obligatoirement exister": "",
        "Typiquement elle ressemblera à ceci, l'array renvoyé et les clés utilisées dans cet array sont évidement importants": "",
        "Vous pouvez copier\/coller le code ci-dessous tel quel et adapter le code à la fin de la fonction pour vérifier la configuration nécessaire à votre plugin": "",
        "public static function deamon_info": "",
        "if (file_exists($pid_file": "",
        "if (@posix_getsid(trim(file_get_contents($pid_file": "",
        "shell_exec(system": "",
        "rm -rf": "",
        "2>&1 > \/dev\/null');": "",
        "if ($user": "",
        "elseif ($pswd": "",
        "elseif ($clientId": "",
        "return $return;": "",
        "Il n'y a pas de faute de frappe dans l'exemple, la méthode se nomme bien `deamon_info()` et pas `daemon_info`, l'erreur est dans le core": "",
        "La clé `state` correspond évidement au statut affiché à l'écran, on peut lire ci-dessus que l'on teste la présence de notre \"pid_file\" pour savoir si le démon tourne ou pas": "",
        "La clé `launchable` correspond à la colonne \"Configuration\" dans le cadre et on peut donc vérifier si la configuration est complète et correcte pour pouvoir démarrer le démon": "",
        "`launchable_message` permet d'afficher un message à l'utilisateur en cas de \"NOK": "",
        "Fonction deamon_start": "",
        "La fonction `deamon_start()` est comme son nom l'indique la méthode qui sera appelée par le core pour démarrer votre démon": "",
        "Vous pouvez copier\/coller le code ci-dessous tel quel et modifier les lignes indiquées": "",
        "public static function deamon_start": "",
        "deamon_stop();": "",
        "if ($deamon_info['launchable": "",
        "throw new Exception(__('Veuillez vérifier la configuration', __FILE__));": "",
        "add(__CLASS__, 'info', 'Lancement démon');": "",
        "while ($i < 20": "",
        "if ($deamon_info['state'] == 'ok": "",
        "if ($i >= 30": "",
        "add(__CLASS__, 'error', __('Impossible de lancer le démon, vérifiez le log', __FILE__), 'unableStartDeamon');": "",
        "return false;": "",
        "removeAll(__CLASS__, 'unableStartDeamon');": "",
        "return true;": "",
        "Ne modifiez que les lignes ayant un commentaire, le reste doit rester inchangé": "",
        "Notez que l'on commence par stopper le démon, ceci pour gérer le redémarrage": "",
        "Ensuite on vérifie si le démon peut effectivement être démarré avec la méthode `deamon_info()` et on génère la ligne de commande dans la variable `$cmd` pour démarrer notre démon, ici avec python3": "",
        "Notez l'utilisation de la fonction `system": "",
        "getCmdPython3(__CLASS__)` qui retournera le chemin vers python3 à utiliser ceci afin d'être compatible avec Debian 12 si vos dépendances sont installées par le core": "",
        "Fonction deamon_stop": "",
        "Cette méthode sera utilisée pour stopper le démon": "",
        "on récupère le pid du démon, qui a été écrit dans le \"pid_file\" et on envoi le kill système au process": "",
        "public static function deamon_stop": "",
        "kill($pid);": "",
        "kill('templated.py'); \/\/ nom du démon à modifier": "",
        "Arrivé ici vous avez déclaré le démon dans le info": "",
        "json et implémenté les 3 méthodes nécessaires pour que le core de Jeedom puisse démarrer et arrêter votre démon ainsi qu'afficher son statut": "",
        "Les prérequis sont en places": "",
        "Communication entre le démon et le code PHP": "",
        "Il reste à gérer la communication depuis et vers le démon": "",
        "Dans le code python on a déjà vu comment c'était géré": "",
        "pour rappel la méthode `listen()` et `read_socket()` qui écoute sur un socket et la méthode `send_change_immediate()` pour envoyer un payload json au code php": "",
        "Il faut donc gérer l'équivalent coté PHP": "",
        "Envoyer un message au démon": "",
        "Cette fonction n'existe pas dans le core et n'est pas standard pour tous les plugins Jeedom, elle n'est pas obligatoire non plus": "",
        "C'est la fonction que j'utilise moi (@Mips) dans chacun de mes plugins ayant un démon, je vous la met ici et vous en faite ce que vous voulez ;": "",
        "Elle reçoit donc en paramètre un tableau de valeur et se charge de l'envoyer au socket du démon qui pourra donc lire ce tableau dans la méthode `read_socket()` que l'on a vu précédemment": "",
        "public static function sendToDaemon($params": "",
        "if ($deamon_info['state": "",
        "throw new Exception(\"Le démon n'est pas démarré\");": "",
        "socket_connect($socket, '127.0.0": "",
        "1', config": "",
        "byKey('socketport', __CLASS__, '55009')); \/\/port par défaut de votre plugin à modifier": "",
        "socket_write($socket, $payLoad, strlen($payLoad));": "",
        "socket_close($socket);": "",
        "Ce qui se trouvent dans le tableau `$params` et comment vous exploitez ces données dans votre démon est de votre ressort, cela dépend de ce que fait votre plugin": "",
        "Pour rappel, ce tableau sera donc récupéré dans la méthode `read_socket()`; extrait du code python": "",
        "On voit bien la clé \"apikey\" ajoutée par le code php qui sera lue par le code python dans le tableau \"message": "",
        "Réceptionner un message du démon": "",
        "Pour cela on doit ajouter un fichier à notre plugin dans le dossier `.\/core\/php\/`": "",
        "Par convention, on va nommer ce fichier `jee[pluginId].php`. `\/plugins\/[pluginId]\/core\/php\/jee[pluginId": "",
        "php` sera donc le chemin à utiliser comme url de callback dans la méthode `deamon_start()`": "",
        "Voici le contenu de base que vous pouvez copier\/coller dans ce fichier": "",
        "require_once dirname(__FILE__) . \"\/..\/..\/..\/..\/core\/php\/core.inc.php\";": "",
        "apiAccess(init('apikey'), 'template')) { \/\/remplacez template par l'id de votre plugin": "",
        "echo __('Vous n\\'êtes pas autorisé à effectuer cette action', __FILE__);": "",
        "if (init('test": "",
        "echo 'OK';": "",
        "is_array($result": "",
        "if (isset($result['key1": "",
        "\/\/ do something": "",
        "elseif (isset($result['key2": "",
        "\/\/ do something else": "",
        "add('template', 'error', 'unknown message received from daemon'); \/\/remplacez template par l'id de votre plugin": "",
        "catch (Exception $e": "",
        "add('template', 'error', displayException($e)); \/\/remplacez template par l'id de votre plugin": "",
        "Le code commence par valider que l'apikey est correcte": "",
        "Le premier test sert de méthode de test lors du démarrage du démon (voir appel `jeedom_com": "",
        "test()` dans le code du démon": "",
        "et finalement on charge le payload que l'on décode dans le tableau `$result`": "",
        "Ensuite c'est à vous de lire le tableau et d'effectuer les actions dans votre plugin en conséquence, exemple": "",
        "Le code python pour envoyer le message ressemblera à ceci": "",
        "jeedom_com.send_change_immediate({'key1": "",
        "value1', 'key2": "",
        "Voila, vous avez un démon complètement fonctionnel et vous pouvez communiquer dans les deux sens entre votre démon et votre code php, Le plus dur reste à faire": "",
        "coder la logique du démon": "",
        "Les dépendances": "",
        "Lorsque l'on va écrire un démon, on va très souvent avoir besoin de librairies externes en plus de nos propres classes": "",
        "Sous Debian, typiquement, on va utiliser l'outils apt pour installer les paquets nécessaires et pour python3, on va utiliser pip3": "",
        "Et pour gérer cela, encore une fois, tout est prévu dans le core de Jeedom pour nous aider via deux méthodes distinctes": "",
        "1. La méthode par procédures": "",
        "Cette méthode était la seule méthode possible avec les versions de jeedom antérieures à la 4.2": "",
        "1. La méthode par fichier json de configuration": "",
        "Cette méthode est apparue avec la version 4": "",
        "2 du core de Jeedom": "",
        "Les deux méthodes peuvent être implémentées dans un même plugin": "",
        "Si les deux méthodes sont implémentées dans un plugin": "",
        "Les core avant 4": "",
        "2 utiliseront la méthode par procédures": "",
        "Les core 4": "",
        "2 et suivants utiliseront la méthode par fichier de configuration json": "",
        "Si seule la méthode par procédures est implémentée dans un plugin": "",
        "Tous les core utiliseront cette méthode": "",
        "Si seule la méthode par fichier de configuration json est implémentée dans un plugin": "",
        "Le plugin ne sera pas compatible avec les versions du core antérieures à la 4.2": "",
        "Les deux méthodes ont leurs avantages et désavantages": "",
        "A vous de choisir selon votre situation": "",
        "Déclaration dans plugin_info\/info.json": "",
        "Dans les deux cas, vous devez adapter votre fichier `info.json`": "",
        "Même exemple que pour la déclaration du démon, il faut rajouter la propriété `hasDependency` et attribuer la valeur `true`": "",
        "La propriété `maxDependancyInstallTime` est le délai en minute après lequel le core considérera que l'installation n'a pas aboutie": "",
        "Dans ce cas, le mode auto du démon sera désactivé et un message sera posté dans le centre de notification": "",
        "Si cette propriété n'est pas définie, le délai par défaut sera de 30min": "",
        "Le script d'installation ne sera pas interrompu donc il se peut que celui-ci finisse par se terminer avec succès": "",
        "Il s'agit uniquement du délai après lequel le core n'attend plus et n'affiche plus la progression": "",
        "La méthode par fichier de configuration json": "",
        "Création du fichiers plugin_info\/packages.json": "",
        "La syntaxe de ce fichier est décrite ici": "",
        "Voir aussi": "",
        "l'article de lancement sur le blog": "",
        "Ce fichier peut contenir l'une ou l'autre des sections suivantes": "",
        "le chemin vers un script à exécuter avant l'installation": "",
        "plugins\/[pluginID]\/resources\/post-install.sh": "",
        "Cela peut être  le chemin vers un script à exécuter après l'installation, ou bien l'action de restart apache": "",
        "restart_apache": "",
        "dépendances Debian": "",
        "[\"ffmpeg": "",
        "[\"libav-tools": "",
        "Pour chaque package, on peut spécifier `version` pour fixer une version, `alternative` si disponible": "",
        "`optional` si c'est optionel, `reinstall` pour forcer la re-installation du package, `remark` pour ajouter un commentaire libre": "",
        "dépendances Python3": "",
        "python3-pyudev": "",
        "python3-requests": "",
        "python3-dev": "",
        "A partir de Jeedom version 4.4": "",
        "9, le core peut gérer l'installation des dépendances python3 sous Debian 12": "",
        "Les dépendances seront installées dans un": "",
        "environnement virtuel": "",
        "Vous devez adapter votre plugin en conséquence et ne plus coder en dur le chemin vers `python3` mais utiliser `system": "",
        "getCmdPython3(__CLASS__)` à la place": "",
        "`$cmd = system": "",
        "getCmdPython3(__CLASS__": "",
        "les dépendances pour NodeJS": "",
        "Pour NodeJS les dépendances sont dans un autre fichier `packages": "",
        "json` dans un format qui lui est propre": "",
        "placé dans le répertoire `\/resources` par exemple, c'est ce fichier qui sera indiqué dans celui de Jeedom": "",
        "plugins\/dyson\/resources\/dysond": "",
        "pour installer une autre dépendance PHP": "",
        "pas d'exemple sous la main; la syntaxe est similaire aux autres packages, avec le mot-clé `composer`": "",
        "Dépendances sur un autre plugin": "",
        "Si un plugin requiert l'installation d'un autre plugin, c'est possible aussi avec la syntaxe suivante;": "",
        "il faut que le plugin soit gratuit, ou bien déjà acheté": "",
        "La méthode par procédures": "",
        "Il y 2 prérequis que nous allons détailler tout de suite": "",
        "Installation des dépendances": "",
        "Dans votre classe eqLogic vous devez rajouter cette fonction si elle n'existe pas": "",
        "Vous pouvez copier\/coller celle-ci tel quel sans rien modifier": "",
        "public static function dependancy_install": "",
        "remove(__CLASS__ . '_update');": "",
        "return array('script' => dirname(__FILE__) . '\/..\/..\/resources\/install_": "",
        "getTmpFolder(__CLASS__": "",
        "\/dependance', 'log' => log": "",
        "getPathToLog(__CLASS__ . '_update'));": "",
        "Cette fonction commence par supprimer le log de l'installation précédente s'il existait et ensuite il va retourner au core la commande script à exécuter et l'emplacement du log": "",
        "Notez que le fichier script renvoyé est nommé `install_": "",
        "sh`. En effet, `": "",
        "` sera remplacé dynamiquement par le core avec l'outil de gestion des paquets à utiliser en fonction du système sur lequel est installé Jeedom": "",
        "Donc `": "",
        "` sera remplacé par `apt` sur un système Debian": "",
        "Cela permet de proposer des scripts d'installation des dépendances pour plusieurs systèmes et donc de supporter autre chose que Debian\/apt qui est le strict minimum et le seul que l'on va gérer ici": "",
        "Le premier argument": "",
        "\/dependance'` est le fichier qui sert au suivi de la progression de l'installation (le pourcentage qui apparaît à l'écran lors de l'installation": "",
        "C'est tout pour la partie php, à présent il faut créer le script dans `.\/resources\/install_apt": "",
        "sh` et évidemment le contenu du script va dépendre de votre plugin et des paquets que vous voulez installer": "",
        "Voici un exemple de script assez simple issu d'un de mes plugins mais vous pouvez en faire de beaucoup plus complet et évolué": "",
        "A partir de Debian 12, il est obligatoire d'installer les packages python dans un environnement virtuel, ce script exemple ne fonctionnera donc plus tel quel, à vous de l'adapter en conséquence": "",
        "PROGRESS_FILE=\/tmp\/jeedom\/template\/dependance #remplacez template par l'ID de votre plugin": "",
        "if [": "",
        "z $1 ]; then": "",
        "PROGRESS_FILE=$1": "",
        "touch ${PROGRESS_FILE": "",
        "echo 0 > ${PROGRESS_FILE": "",
        "Launch install of dependencies": "",
        "echo $(date": "",
        "echo 5 > ${PROGRESS_FILE": "",
        "apt-get clean": "",
        "echo 10 > ${PROGRESS_FILE": "",
        "apt-get update": "",
        "echo 20 > ${PROGRESS_FILE": "",
        "echo \"Install modules using apt-get": "",
        "apt-get install -y python3 python3-requests python3-pip python3-voluptuous python3-bs4": "",
        "echo 60 > ${PROGRESS_FILE": "",
        "echo \"Install the required python libraries": "",
        "python3 -m pip install \"aiohttp": "",
        "echo 80 > ${PROGRESS_FILE": "",
        "echo 100 > ${PROGRESS_FILE": "",
        "Install ended": "",
        "rm ${PROGRESS_FILE": "",
        "On va détailler quelques lignes": "",
        "On commence par définir l'emplacement par défaut du fichier de progression au cas où on n'aurait pas réalisé correctement l'étape précédente": "",
        "Et on utilise le premier argument reçu comme emplacement parce qu'on a correctement fait l'étape précédente ;": "",
        "Les lignes du type `echo 60 > ${PROGRESS_FILE}` servent évidement à retourner la progression": "",
        "pour rassurer l'utilisateur on en met régulièrement jusqu'à arriver à 100 (d'habitude ils stressent quand ca dépasse 100 alors on évite": "",
        "Quelques conseils": "",
        "Ne faite pas de `apt-get upgrade`": "",
        "Vous ne savez pas ce qu'il y a sur la machine et ce n'est pas à vous de tout mettre à jour": "",
        "N'utilisez pas `apt` mais `apt-get`": "",
        "`apt` est fait pour une utilisation en interactif et cela va générer un warning": "",
        "Rajoutez le flag `-y` quand nécessaire pour confirmer les prompts sinon le script va stopper avec une demande du style `Do you want to continue [y\/n]` et l'utilisateur sera bloqué": "",
        "Préférez la syntaxe `python3 -m pip install ...` plutôt que `pip3 install ...` pour installer les paquets python car la deuxième causera des problèmes si `pip3` (ou `pip` si vous utilisez python v2) n'est pas lié à la même version que python3": "",
        "si par exemple python3 pointe sur la version 3": "",
        "7 et que pip3 pointe sur la 3": "",
        "9 ou pire la 2": "",
        "7; Vous ne savez pas ce qui a été fait sur le système et vous n'êtes pas à l'abris de tel problème sur la machine de l'utilisateur, il y a des dizaines de cas répertoriés sur community": "",
        "Il est très important d'installer tous les paquets nécessaires et de faire particulièrement attention à ceux qui sont très souvent déjà installés ... mais pas toujours": "",
        "Il y fréquemment des problèmes avec les paquets `python3-requests`, `python3-pip` et\/ou `serial`": "",
        "Ceux-ci ne sont pas pré-installés sur une debian de base mais très souvent déjà installés par un autre plugin... sauf si votre plugin est le premier et dans ce cas votre démon ne démarrera pas": "",
        "Cela arrive plus souvent qu'on ne pourrait le croire": "",
        "Connaître le statut": "",
        "C'est donc notre fonction php `dependancy_install()` qui sera appelée par le core et qui permettra de lancer notre script `.\/resources\/install_apt": "",
        "sh` lorsque l'utilisateur cliquera sur le bouton \"Relancer\" ou automatiquement par le core lorsqu'il détectera que les dépendances ne sont soit pas installées, soit pas à jour": "",
        "Mais comment le core connaît-il le statut et comment l'affiche-t-il dans le cadre ci-dessus": "",
        "Grâce à la fonction `dependancy_info()` que nous devons rajouter dans notre class eqLogic": "",
        "Voici un exemple dont vous pouvez reprendre la majorité": "",
        "public static function dependancy_info": "",
        "if (file_exists(jeedom": "",
        "if (exec(system": "",
        "get('cmd_check": "",
        "elseif (exec(system": "",
        "Dans cette exemple on test la présence de paquets apt": "",
        "Ici on veut `python3-requests`, `python3-voluptuous` et `python3-bs4` et donc la commande doit retourner 3 d'où la comparaison": "",
        "`< 3`": "",
        "Même chose pour les paquets python": "",
        "La présence de `aiohttp` est validé, un seul paquet donc on compare": "",
        "`< 1`;": "",
        "A partir de Debian 12, il est obligatoire d'installer les packages python dans un environnement virtuel, cette commande ne fonctionnera donc plus tel quel, à vous de l'adapter en conséquence": "",
        "C'est donc très simple": "",
        "la liste des paquets et le total sont les seuls éléments que vous devez modifier si vous n'avez que ce type de vérification sinon il faut sera facile de rajouter les autres tests relevants dans votre cas": "",
        " Introduction.": " .",
        " Introduction?": " ?",
        "Introduction ": " ",
        " Introduction]": " ]",
        "[Introduction]": "[]",
        "*Introduction*": "**",
        " Introduction*": " *",
        " tutoriel.": " .",
        " tutoriel?": " ?",
        "tutoriel ": " ",
        " tutoriel]": " ]",
        "[tutoriel]": "[]",
        "*tutoriel*": "**",
        " tutoriel*": " *",
        " documentation.": " .",
        " documentation?": " ?",
        "documentation ": " ",
        " documentation]": " ]",
        "[documentation]": "[]",
        "*documentation*": "**",
        " documentation*": " *",
        " TIP.": " .",
        " TIP?": " ?",
        "TIP ": " ",
        " TIP]": " ]",
        "[TIP]": "[]",
        "*TIP*": "**",
        " TIP*": " *",
        " Attention.": " .",
        " Attention?": " ?",
        "Attention ": " ",
        " Attention]": " ]",
        "[Attention]": "[]",
        "*Attention*": "**",
        " Attention*": " *",
        " ```python.": " .",
        " ```python?": " ?",
        "```python ": " ",
        " ```python]": " ]",
        "[```python]": "[]",
        "*```python*": "**",
        " ```python*": " *",
        " _apikey.": " .",
        " _apikey?": " ?",
        "_apikey ": " ",
        " _apikey]": " ]",
        "[_apikey]": "[]",
        "*_apikey*": "**",
        " _apikey*": " *",
        " _callback.": " .",
        " _callback?": " ?",
        "_callback ": " ",
        " _callback]": " ]",
        "[_callback]": "[]",
        "*_callback*": "**",
        " _callback*": " *",
        " try.": " .",
        " try?": " ?",
        "try ": " ",
        " try]": " ]",
        "[try]": "[]",
        "*try*": "**",
        " try*": " *",
        " shutdown.": " .",
        " shutdown?": " ?",
        "shutdown ": " ",
        " shutdown]": " ]",
        "[shutdown]": "[]",
        "*shutdown*": "**",
        " shutdown*": " *",
        " listen.": " .",
        " listen?": " ?",
        "listen ": " ",
        " listen]": " ]",
        "[listen]": "[]",
        "*listen*": "**",
        " listen*": " *",
        " except.": " .",
        " except?": " ?",
        "except ": " ",
        " except]": " ]",
        "[except]": "[]",
        "*except*": "**",
        " except*": " *",
        " pass.": " .",
        " pass?": " ?",
        "pass ": " ",
        " pass]": " ]",
        "[pass]": "[]",
        "*pass*": "**",
        " pass*": " *",
        " test.": " .",
        " test?": " ?",
        "test ": " ",
        " test]": " ]",
        "[test]": "[]",
        "*test*": "**",
        " test*": " *",
        " return.": " .",
        " return?": " ?",
        "return ": " ",
        " return]": " ]",
        "[return]": "[]",
        "*return*": "**",
        " return*": " *",
        " ```json.": " .",
        " ```json?": " ?",
        "```json ": " ",
        " ```json]": " ]",
        "[```json]": "[]",
        "*```json*": "**",
        " ```json*": " *",
        " id.": " .",
        " id?": " ?",
        "id ": " ",
        " id]": " ]",
        "[id]": "[]",
        "*id*": "**",
        " id*": " *",
        " pluginID.": " .",
        " pluginID?": " ?",
        "pluginID ": " ",
        " pluginID]": " ]",
        "[pluginID]": "[]",
        "*pluginID*": "**",
        " pluginID*": " *",
        " name.": " .",
        " name?": " ?",
        "name ": " ",
        " name]": " ]",
        "[name]": "[]",
        "*name*": "**",
        " name*": " *",
        " pluginName.": " .",
        " pluginName?": " ?",
        "pluginName ": " ",
        " pluginName]": " ]",
        "[pluginName]": "[]",
        "*pluginName*": "**",
        " pluginName*": " *",
        " hasDependency.": " .",
        " hasDependency?": " ?",
        "hasDependency ": " ",
        " hasDependency]": " ]",
        "[hasDependency]": "[]",
        "*hasDependency*": "**",
        " hasDependency*": " *",
        " true.": " .",
        " true?": " ?",
        "true ": " ",
        " true]": " ]",
        "[true]": "[]",
        "*true*": "**",
        " true*": " *",
        " hasOwnDeamon.": " .",
        " hasOwnDeamon?": " ?",
        "hasOwnDeamon ": " ",
        " hasOwnDeamon]": " ]",
        "[hasOwnDeamon]": "[]",
        "*hasOwnDeamon*": "**",
        " hasOwnDeamon*": " *",
        " maxDependancyInstallTime.": " .",
        " maxDependancyInstallTime?": " ?",
        "maxDependancyInstallTime ": " ",
        " maxDependancyInstallTime]": " ]",
        "[maxDependancyInstallTime]": "[]",
        "*maxDependancyInstallTime*": "**",
        " maxDependancyInstallTime*": " *",
        " ```php.": " .",
        " ```php?": " ?",
        "```php ": " ",
        " ```php]": " ]",
        "[```php]": "[]",
        "*```php*": "**",
        " ```php*": " *",
        " else.": " .",
        " else?": " ?",
        "else ": " ",
        " else]": " ]",
        "[else]": "[]",
        "*else*": "**",
        " else*": " *",
        " getCmdSudo.": " .",
        " getCmdSudo?": " ?",
        "getCmdSudo ": " ",
        " getCmdSudo]": " ]",
        "[getCmdSudo]": "[]",
        "*getCmdSudo*": "**",
        " getCmdSudo*": " *",
        " self.": " .",
        " self?": " ?",
        "self ": " ",
        " self]": " ]",
        "[self]": "[]",
        "*self*": "**",
        " self*": " *",
        " ok.": " .",
        " ok?": " ?",
        "ok ": " ",
        " ok]": " ]",
        "[ok]": "[]",
        "*ok*": "**",
        " ok*": " *",
        " log.": " .",
        " log?": " ?",
        "log ": " ",
        " log]": " ]",
        "[log]": "[]",
        "*log*": "**",
        " log*": " *",
        " break;.": " .",
        " break;?": " ?",
        "break; ": " ",
        " break;]": " ]",
        "[break;]": "[]",
        "*break;*": "**",
        " break;*": " *",
        " sleep(1);.": " .",
        " sleep(1);?": " ?",
        "sleep(1); ": " ",
        " sleep(1);]": " ]",
        "[sleep(1);]": "[]",
        "*sleep(1);*": "**",
        " sleep(1);*": " *",
        " message.": " .",
        " message?": " ?",
        "message ": " ",
        " message]": " ]",
        "[message]": "[]",
        "*message*": "**",
        " message*": " *",
        " system.": " .",
        " system?": " ?",
        "system ": " ",
        " system]": " ]",
        "[system]": "[]",
        "*system*": "**",
        " system*": " *",
        " if.": " .",
        " if?": " ?",
        "if ": " ",
        " if]": " ]",
        "[if]": "[]",
        "*if*": "**",
        " if*": " *",
        " jeedom.": " .",
        " jeedom?": " ?",
        "jeedom ": " ",
        " jeedom]": " ]",
        "[jeedom]": "[]",
        "*jeedom*": "**",
        " jeedom*": " *",
        " die();.": " .",
        " die();?": " ?",
        "die(); ": " ",
        " die();]": " ]",
        "[die();]": "[]",
        "*die();*": "**",
        " die();*": " *",
        " value2.": " .",
        " value2?": " ?",
        "value2 ": " ",
        " value2]": " ]",
        "[value2]": "[]",
        "*value2*": "**",
        " value2*": " *",
        " pre-install.": " .",
        " pre-install?": " ?",
        "pre-install ": " ",
        " pre-install]": " ]",
        "[pre-install]": "[]",
        "*pre-install*": "**",
        " pre-install*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " script.": " .",
        " script?": " ?",
        "script ": " ",
        " script]": " ]",
        "[script]": "[]",
        "*script*": "**",
        " script*": " *",
        " post-install.": " .",
        " post-install?": " ?",
        "post-install ": " ",
        " post-install]": " ]",
        "[post-install]": "[]",
        "*post-install*": "**",
        " post-install*": " *",
        " apt.": " .",
        " apt?": " ?",
        "apt ": " ",
        " apt]": " ]",
        "[apt]": "[]",
        "*apt*": "**",
        " apt*": " *",
        " libav-tools.": " .",
        " libav-tools?": " ?",
        "libav-tools ": " ",
        " libav-tools]": " ]",
        "[libav-tools]": "[]",
        "*libav-tools*": "**",
        " libav-tools*": " *",
        " alternative.": " .",
        " alternative?": " ?",
        "alternative ": " ",
        " alternative]": " ]",
        "[alternative]": "[]",
        "*alternative*": "**",
        " alternative*": " *",
        " ffmpeg.": " .",
        " ffmpeg?": " ?",
        "ffmpeg ": " ",
        " ffmpeg]": " ]",
        "[ffmpeg]": "[]",
        "*ffmpeg*": "**",
        " ffmpeg*": " *",
        " python-pil.": " .",
        " python-pil?": " ?",
        "python-pil ": " ",
        " python-pil]": " ]",
        "[python-pil]": "[]",
        "*python-pil*": "**",
        " python-pil*": " *",
        " php-gd.": " .",
        " php-gd?": " ?",
        "php-gd ": " ",
        " php-gd]": " ]",
        "[php-gd]": "[]",
        "*php-gd*": "**",
        " php-gd*": " *",
        " pip3.": " .",
        " pip3?": " ?",
        "pip3 ": " ",
        " pip3]": " ]",
        "[pip3]": "[]",
        "*pip3*": "**",
        " pip3*": " *",
        " wheel.": " .",
        " wheel?": " ?",
        "wheel ": " ",
        " wheel]": " ]",
        "[wheel]": "[]",
        "*wheel*": "**",
        " wheel*": " *",
        " pyserial.": " .",
        " pyserial?": " ?",
        "pyserial ": " ",
        " pyserial]": " ]",
        "[pyserial]": "[]",
        "*pyserial*": "**",
        " pyserial*": " *",
        " tornado.": " .",
        " tornado?": " ?",
        "tornado ": " ",
        " tornado]": " ]",
        "[tornado]": "[]",
        "*tornado*": "**",
        " tornado*": " *",
        " zigpy.": " .",
        " zigpy?": " ?",
        "zigpy ": " ",
        " zigpy]": " ]",
        "[zigpy]": "[]",
        "*zigpy*": "**",
        " zigpy*": " *",
        " reinstall.": " .",
        " reinstall?": " ?",
        "reinstall ": " ",
        " reinstall]": " ]",
        "[reinstall]": "[]",
        "*reinstall*": "**",
        " reinstall*": " *",
        " zha-quirks.": " .",
        " zha-quirks?": " ?",
        "zha-quirks ": " ",
        " zha-quirks]": " ]",
        "[zha-quirks]": "[]",
        "*zha-quirks*": "**",
        " zha-quirks*": " *",
        " zigpy-znp.": " .",
        " zigpy-znp?": " ?",
        "zigpy-znp ": " ",
        " zigpy-znp]": " ]",
        "[zigpy-znp]": "[]",
        "*zigpy-znp*": "**",
        " zigpy-znp*": " *",
        " zigpy-xbee.": " .",
        " zigpy-xbee?": " ?",
        "zigpy-xbee ": " ",
        " zigpy-xbee]": " ]",
        "[zigpy-xbee]": "[]",
        "*zigpy-xbee*": "**",
        " zigpy-xbee*": " *",
        " zigpy-deconz.": " .",
        " zigpy-deconz?": " ?",
        "zigpy-deconz ": " ",
        " zigpy-deconz]": " ]",
        "[zigpy-deconz]": "[]",
        "*zigpy-deconz*": "**",
        " zigpy-deconz*": " *",
        " zigpy-zigate.": " .",
        " zigpy-zigate?": " ?",
        "zigpy-zigate ": " ",
        " zigpy-zigate]": " ]",
        "[zigpy-zigate]": "[]",
        "*zigpy-zigate*": "**",
        " zigpy-zigate*": " *",
        " zigpy-cc.": " .",
        " zigpy-cc?": " ?",
        "zigpy-cc ": " ",
        " zigpy-cc]": " ]",
        "[zigpy-cc]": "[]",
        "*zigpy-cc*": "**",
        " zigpy-cc*": " *",
        " bellows.": " .",
        " bellows?": " ?",
        "bellows ": " ",
        " bellows]": " ]",
        "[bellows]": "[]",
        "*bellows*": "**",
        " bellows*": " *",
        " Hint.": " .",
        " Hint?": " ?",
        "Hint ": " ",
        " Hint]": " ]",
        "[Hint]": "[]",
        "*Hint*": "**",
        " Hint*": " *",
        " venv.": " .",
        " venv?": " ?",
        "venv ": " ",
        " venv]": " ]",
        "[venv]": "[]",
        "*venv*": "**",
        " venv*": " *",
        " npm.": " .",
        " npm?": " ?",
        "npm ": " ",
        " npm]": " ]",
        "[npm]": "[]",
        "*npm*": "**",
        " npm*": " *",
        " nodejs.": " .",
        " nodejs?": " ?",
        "nodejs ": " ",
        " nodejs]": " ]",
        "[nodejs]": "[]",
        "*nodejs*": "**",
        " nodejs*": " *",
        " composer.": " .",
        " composer?": " ?",
        "composer ": " ",
        " composer]": " ]",
        "[composer]": "[]",
        "*composer*": "**",
        " composer*": " *",
        " plugin.": " .",
        " plugin?": " ?",
        "plugin ": " ",
        " plugin]": " ]",
        "[plugin]": "[]",
        "*plugin*": "**",
        " plugin*": " *",
        " mqtt2.": " .",
        " mqtt2?": " ?",
        "mqtt2 ": " ",
        " mqtt2]": " ]",
        "[mqtt2]": "[]",
        "*mqtt2*": "**",
        " mqtt2*": " *",
        " sh.": " .",
        " sh?": " ?",
        "sh ": " ",
        " sh]": " ]",
        "[sh]": "[]",
        "*sh*": "**",
        " sh*": " *",
        " `jeedom.": " .",
        " `jeedom?": " ?",
        "`jeedom ": " ",
        " `jeedom]": " ]",
        "[`jeedom]": "[]",
        "*`jeedom*": "**",
        " `jeedom*": " *",
        " ```bash.": " .",
        " ```bash?": " ?",
        "```bash ": " ",
        " ```bash]": " ]",
        "[```bash]": "[]",
        "*```bash*": "**",
        " ```bash*": " *",
        " fi.": " .",
        " fi?": " ?",
        "fi ": " ",
        " fi]": " ]",
        "[fi]": "[]",
        "*fi*": "**",
        " fi*": " *",
        " echo.": " .",
        " echo?": " ?",
        "echo ": " ",
        " echo]": " ]",
        "[echo]": "[]",
        "*echo*": "**",
        " echo*": " *",
        " \/dependance.": " .",
        " \/dependance?": " ?",
        "\/dependance ": " ",
        " \/dependance]": " ]",
        "[\/dependance]": "[]",
        "*\/dependance*": "**",
        " \/dependance*": " *",
        " `system.": " .",
        " `system?": " ?",
        "`system ": " ",
        " `system]": " ]",
        "[`system]": "[]",
        "*`system*": "**",
        " `system*": " *"
    },
    "dev\/documentation_plugin.md": {
        "Comment faire la documentation d'un plugin": "",
        "Nous allons voir dans cette documentation comment faire la documentation de votre plugin": "",
        "Le principe est très simple, la documentation du plugin doit être un simple lien web à indiquer dans votre fichier info": "",
        "json (voir le détail": "",
        "dans le champ documentation": "",
        "A noter que vous avez aussi un champ changelog qui doit fonctionner de la même manière que le champ documentation": "",
        "Comment faire": "",
        "Comme vu plus haut, vous devez juste indiquer dans le fichier info": "",
        "json le lien http(s) vers votre documentation, vous êtes donc libre sur la présentation, l'hébergeur ou même le mode": "",
        "un blog": "",
        "un simple serveur web": "",
        "github (seul méthode que nous verrons ici": "",
        "Le plus simple pour votre documentation est d'utiliser le système de page de github qui a l'avantage d'être très facile à utiliser": "",
        "Langage de la documentation": "",
        "Github support asciidoc et markedown (md) pour les pages, nous ne verrons ici que le markdown": "",
        "On ne va pas vous décrire la syntaxe complète du markdown, d'autres sites le font déja très bien dont": "",
        "Nous vous recommandons dans votre plugin (hébergé sur github) de faire un dossier et d'y copier les fichiers et répertoires du dossier \/docs dans le plugin template (voir": "",
        "Une fois cela fait, vous allez avoir dans le dossier \/docs un dossier fr_FR (le seul à modifier": "",
        "Dans ce dossier, nous vous conseillons de faire 2 fichiers": "",
        "votre changelog": "",
        "votre documentation": "",
        "Mise en ligne": "",
        "La mise en ligne est assez simple, il suffit d'aller sur votre dépot github puis \"Settings\" et dans la partie \"GitHub Pages\" d'activer celle sur \"master branch \/docs folder\" (comme l'indique le libellé, seuls les fichiers dans le dossier \/docs de la branche master de votre plugin seront en ligne": "",
        "Github va ensuite vous fournir un lien de type": "",
        "au bout de quelques minutes, en allant dessus, vous devriez voir votre documentation mise en page correctement": "",
        "Il vous faut maintenant mettre les liens de votre documentation dans le fichier info": "",
        "json de votre plugin pour cela il faut": "",
        "pour le lien vers la documentation, cela donne donc sur notre exemple": "",
        "pour le lien vers votre changement, cela donne donc sur notre exemple": "",
        "Vous l'aurez compris, lorsque l'utilisateur va demander à voir votre doc, Jeedom ou le market vont automatiquement remplacer": "",
        "par la langue de l'utilisateur pour pointer vers la bonne langue (si votre documentation n'est pas disponible dans la langue de l'utilisateur alors automatiquement, cela renverra vers le Français": "",
        " Introduction.": " .",
        " Introduction?": " ?",
        "Introduction ": " ",
        " Introduction]": " ]",
        "[Introduction]": "[]",
        "*Introduction*": "**",
        " Introduction*": " *",
        " Principe.": " .",
        " Principe?": " ?",
        "Principe ": " ",
        " Principe]": " ]",
        "[Principe]": "[]",
        "*Principe*": "**",
        " Principe*": " *",
        " ici.": " .",
        " ici?": " ?",
        "ici ": " ",
        " ici]": " ]",
        "[ici]": "[]",
        "*ici*": "**",
        " ici*": " *",
        " Github.": " .",
        " Github?": " ?",
        "Github ": " ",
        " Github]": " ]",
        "[Github]": "[]",
        "*Github*": "**",
        " Github*": " *",
        " celui-ci.": " .",
        " celui-ci?": " ?",
        "celui-ci ": " ",
        " celui-ci]": " ]",
        "[celui-ci]": "[]",
        "*celui-ci*": "**",
        " celui-ci*": " *",
        " Emplacement.": " .",
        " Emplacement?": " ?",
        "Emplacement ": " ",
        " Emplacement]": " ]",
        "[Emplacement]": "[]",
        "*Emplacement*": "**",
        " Emplacement*": " *",
        " ajouter.": " .",
        " ajouter?": " ?",
        "ajouter ": " ",
        " ajouter]": " ]",
        "[ajouter]": "[]",
        "*ajouter*": "**",
        " ajouter*": " *",
        " Note.": " .",
        " Note?": " ?",
        "Note ": " ",
        " Note]": " ]",
        "[Note]": "[]",
        "*Note*": "**",
        " Note*": " *"
    },
    "dev\/index.md": {
        "Développement de plugin": "",
        "compte développeur": "",
        "est nécessaire pour accéder à la section développeurs sur": "",
        "et pouvoir publier des plugins sur le": "",
        "Documentation générale": "",
        "Présentation": "",
        "Icône d'un plugin": "",
        "Structure info.json": "",
        "Documentation d'un plugin": "",
        "Publication d'un plugin": "",
        "Widget d'un plugin": "",
        "Plugin template": "",
        "Démon et dépendances d'un plugin": "",
        "Recommandation valeur des commandes": "",
        "Transfert de plugin": "",
        "Développement js et Core 4": "",
        "4 +": "",
        "Évolutions du Core et adaptations des plugins": "",
        "Core v4.4": "",
        "Core v4.3": "",
        "Core v4.2": "",
        "Core v4.1": "",
        "Core v4.0": "",
        " Community.": " .",
        " Community?": " ?",
        "Community ": " ",
        " Community]": " ]",
        "[Community]": "[]",
        "*Community*": "**",
        " Community*": " *",
        " Market.": " .",
        " Market?": " ?",
        "Market ": " ",
        " Market]": " ]",
        "[Market]": "[]",
        "*Market*": "**",
        " Market*": " *",
        " Un.": " .",
        " Un?": " ?",
        "Un ": " ",
        " Un]": " ]",
        "[Un]": "[]",
        "*Un*": "**",
        " Un*": " *"
    },
    "dev\/packages.md": {
        "A partir de jeedom v4": "",
        "2 il est possible de confier en partie la gestions des dépendances de vos plugins au core": "",
        "C'est assez simple il suffit de créer un fichier": "",
        "plugins\/openzwave\/resources\/post-install.sh": "",
        "```": "",
        "[\"ffmpeg": "",
        "[\"libav-tools": "",
        "restart_apache": "",
        "python3-pip": "",
        "python3-pyudev": "",
        "python3-requests": "",
        "python3-setuptools": "",
        "python3-dev": "",
        "plugins\/dyson\/resources\/dysond": "",
        "Actuellement il gère": "",
        "avec possibilité de lancer des script de pre\/post installation et de lui demander un restart d'apache en post": "",
        "Si le fichier est présent le core ne se base QUE SUR CELUI-CI, il ignore les fonctions `dependancy_info` et `dependancy_install`": "",
        "Il va donc uniquement calculer si il y a des paquets à installer ou non à partir de ce fichier json": "",
        "Pour nodejs c'est un peu particulier, toute demande de nodejs ou npm est outre passée pour installer nodejs v12 quelque soit la plateforme": "",
        "Ensuite il y a 2 possibilités": "",
        "c'est un nom de package dans ce cas celui-ci est installé en global sur le système": "",
        "c'est un chemin dans ce cas jeedom se place dans le répertoire en question est lance un npm install (avec suppression du répertoire": "",
        " Description.": " .",
        " Description?": " ?",
        "Description ": " ",
        " Description]": " ]",
        "[Description]": "[]",
        "*Description*": "**",
        " Description*": " *",
        " dans.": " .",
        " dans?": " ?",
        "dans ": " ",
        " dans]": " ]",
        "[dans]": "[]",
        "*dans*": "**",
        " dans*": " *",
        " Exemples.": " .",
        " Exemples?": " ?",
        "Exemples ": " ",
        " Exemples]": " ]",
        "[Exemples]": "[]",
        "*Exemples*": "**",
        " Exemples*": " *",
        " ```json.": " .",
        " ```json?": " ?",
        "```json ": " ",
        " ```json]": " ]",
        "[```json]": "[]",
        "*```json*": "**",
        " ```json*": " *",
        " apt.": " .",
        " apt?": " ?",
        "apt ": " ",
        " apt]": " ]",
        "[apt]": "[]",
        "*apt*": "**",
        " apt*": " *",
        " git.": " .",
        " git?": " ?",
        "git ": " ",
        " git]": " ]",
        "[git]": "[]",
        "*git*": "**",
        " git*": " *",
        " python-pip.": " .",
        " python-pip?": " ?",
        "python-pip ": " ",
        " python-pip]": " ]",
        "[python-pip]": "[]",
        "*python-pip*": "**",
        " python-pip*": " *",
        " python-dev.": " .",
        " python-dev?": " ?",
        "python-dev ": " ",
        " python-dev]": " ]",
        "[python-dev]": "[]",
        "*python-dev*": "**",
        " python-dev*": " *",
        " python-pyudev.": " .",
        " python-pyudev?": " ?",
        "python-pyudev ": " ",
        " python-pyudev]": " ]",
        "[python-pyudev]": "[]",
        "*python-pyudev*": "**",
        " python-pyudev*": " *",
        " python-louie.": " .",
        " python-louie?": " ?",
        "python-louie ": " ",
        " python-louie]": " ]",
        "[python-louie]": "[]",
        "*python-louie*": "**",
        " python-louie*": " *",
        " python-setuptools.": " .",
        " python-setuptools?": " ?",
        "python-setuptools ": " ",
        " python-setuptools]": " ]",
        "[python-setuptools]": "[]",
        "*python-setuptools*": "**",
        " python-setuptools*": " *",
        " make.": " .",
        " make?": " ?",
        "make ": " ",
        " make]": " ]",
        "[make]": "[]",
        "*make*": "**",
        " make*": " *",
        " build-essential.": " .",
        " build-essential?": " ?",
        "build-essential ": " ",
        " build-essential]": " ]",
        "[build-essential]": "[]",
        "*build-essential*": "**",
        " build-essential*": " *",
        " libudev-dev.": " .",
        " libudev-dev?": " ?",
        "libudev-dev ": " ",
        " libudev-dev]": " ]",
        "[libudev-dev]": "[]",
        "*libudev-dev*": "**",
        " libudev-dev*": " *",
        " g++.": " .",
        " g++?": " ?",
        "g++ ": " ",
        " g++]": " ]",
        "[g++]": "[]",
        "*g++*": "**",
        " g++*": " *",
        " gcc.": " .",
        " gcc?": " ?",
        "gcc ": " ",
        " gcc]": " ]",
        "[gcc]": "[]",
        "*gcc*": "**",
        " gcc*": " *",
        " python-lxml.": " .",
        " python-lxml?": " ?",
        "python-lxml ": " ",
        " python-lxml]": " ]",
        "[python-lxml]": "[]",
        "*python-lxml*": "**",
        " python-lxml*": " *",
        " unzip.": " .",
        " unzip?": " ?",
        "unzip ": " ",
        " unzip]": " ]",
        "[unzip]": "[]",
        "*unzip*": "**",
        " unzip*": " *",
        " libjpeg-dev.": " .",
        " libjpeg-dev?": " ?",
        "libjpeg-dev ": " ",
        " libjpeg-dev]": " ]",
        "[libjpeg-dev]": "[]",
        "*libjpeg-dev*": "**",
        " libjpeg-dev*": " *",
        " python-serial.": " .",
        " python-serial?": " ?",
        "python-serial ": " ",
        " python-serial]": " ]",
        "[python-serial]": "[]",
        "*python-serial*": "**",
        " python-serial*": " *",
        " python-requests.": " .",
        " python-requests?": " ?",
        "python-requests ": " ",
        " python-requests]": " ]",
        "[python-requests]": "[]",
        "*python-requests*": "**",
        " python-requests*": " *",
        " pip2.": " .",
        " pip2?": " ?",
        "pip2 ": " ",
        " pip2]": " ]",
        "[pip2]": "[]",
        "*pip2*": "**",
        " pip2*": " *",
        " wheel.": " .",
        " wheel?": " ?",
        "wheel ": " ",
        " wheel]": " ]",
        "[wheel]": "[]",
        "*wheel*": "**",
        " wheel*": " *",
        " urwid.": " .",
        " urwid?": " ?",
        "urwid ": " ",
        " urwid]": " ]",
        "[urwid]": "[]",
        "*urwid*": "**",
        " urwid*": " *",
        " louie.": " .",
        " louie?": " ?",
        "louie ": " ",
        " louie]": " ]",
        "[louie]": "[]",
        "*louie*": "**",
        " louie*": " *",
        " six.": " .",
        " six?": " ?",
        "six ": " ",
        " six]": " ]",
        "[six]": "[]",
        "*six*": "**",
        " six*": " *",
        " tornado.": " .",
        " tornado?": " ?",
        "tornado ": " ",
        " tornado]": " ]",
        "[tornado]": "[]",
        "*tornado*": "**",
        " tornado*": " *",
        " post-install.": " .",
        " post-install?": " ?",
        "post-install ": " ",
        " post-install]": " ]",
        "[post-install]": "[]",
        "*post-install*": "**",
        " post-install*": " *",
        " script.": " .",
        " script?": " ?",
        "script ": " ",
        " script]": " ]",
        "[script]": "[]",
        "*script*": "**",
        " script*": " *",
        " libav-tools.": " .",
        " libav-tools?": " ?",
        "libav-tools ": " ",
        " libav-tools]": " ]",
        "[libav-tools]": "[]",
        "*libav-tools*": "**",
        " libav-tools*": " *",
        " alternative.": " .",
        " alternative?": " ?",
        "alternative ": " ",
        " alternative]": " ]",
        "[alternative]": "[]",
        "*alternative*": "**",
        " alternative*": " *",
        " ffmpeg.": " .",
        " ffmpeg?": " ?",
        "ffmpeg ": " ",
        " ffmpeg]": " ]",
        "[ffmpeg]": "[]",
        "*ffmpeg*": "**",
        " ffmpeg*": " *",
        " python-pil.": " .",
        " python-pil?": " ?",
        "python-pil ": " ",
        " python-pil]": " ]",
        "[python-pil]": "[]",
        "*python-pil*": "**",
        " python-pil*": " *",
        " php-gd.": " .",
        " php-gd?": " ?",
        "php-gd ": " ",
        " php-gd]": " ]",
        "[php-gd]": "[]",
        "*php-gd*": "**",
        " php-gd*": " *",
        " true.": " .",
        " true?": " ?",
        "true ": " ",
        " true]": " ]",
        "[true]": "[]",
        "*true*": "**",
        " true*": " *",
        " pip3.": " .",
        " pip3?": " ?",
        "pip3 ": " ",
        " pip3]": " ]",
        "[pip3]": "[]",
        "*pip3*": "**",
        " pip3*": " *",
        " pyserial.": " .",
        " pyserial?": " ?",
        "pyserial ": " ",
        " pyserial]": " ]",
        "[pyserial]": "[]",
        "*pyserial*": "**",
        " pyserial*": " *",
        " zigpy.": " .",
        " zigpy?": " ?",
        "zigpy ": " ",
        " zigpy]": " ]",
        "[zigpy]": "[]",
        "*zigpy*": "**",
        " zigpy*": " *",
        " reinstall.": " .",
        " reinstall?": " ?",
        "reinstall ": " ",
        " reinstall]": " ]",
        "[reinstall]": "[]",
        "*reinstall*": "**",
        " reinstall*": " *",
        " zha-quirks.": " .",
        " zha-quirks?": " ?",
        "zha-quirks ": " ",
        " zha-quirks]": " ]",
        "[zha-quirks]": "[]",
        "*zha-quirks*": "**",
        " zha-quirks*": " *",
        " zigpy-znp.": " .",
        " zigpy-znp?": " ?",
        "zigpy-znp ": " ",
        " zigpy-znp]": " ]",
        "[zigpy-znp]": "[]",
        "*zigpy-znp*": "**",
        " zigpy-znp*": " *",
        " zigpy-xbee.": " .",
        " zigpy-xbee?": " ?",
        "zigpy-xbee ": " ",
        " zigpy-xbee]": " ]",
        "[zigpy-xbee]": "[]",
        "*zigpy-xbee*": "**",
        " zigpy-xbee*": " *",
        " zigpy-deconz.": " .",
        " zigpy-deconz?": " ?",
        "zigpy-deconz ": " ",
        " zigpy-deconz]": " ]",
        "[zigpy-deconz]": "[]",
        "*zigpy-deconz*": "**",
        " zigpy-deconz*": " *",
        " zigpy-zigate.": " .",
        " zigpy-zigate?": " ?",
        "zigpy-zigate ": " ",
        " zigpy-zigate]": " ]",
        "[zigpy-zigate]": "[]",
        "*zigpy-zigate*": "**",
        " zigpy-zigate*": " *",
        " zigpy-cc.": " .",
        " zigpy-cc?": " ?",
        "zigpy-cc ": " ",
        " zigpy-cc]": " ]",
        "[zigpy-cc]": "[]",
        "*zigpy-cc*": "**",
        " zigpy-cc*": " *",
        " bellows.": " .",
        " bellows?": " ?",
        "bellows ": " ",
        " bellows]": " ]",
        "[bellows]": "[]",
        "*bellows*": "**",
        " bellows*": " *",
        " nodejs.": " .",
        " nodejs?": " ?",
        "nodejs ": " ",
        " nodejs]": " ]",
        "[nodejs]": "[]",
        "*nodejs*": "**",
        " nodejs*": " *",
        " npm.": " .",
        " npm?": " ?",
        "npm ": " ",
        " npm]": " ]",
        "[npm]": "[]",
        "*npm*": "**",
        " npm*": " *",
        " et.": " .",
        " et?": " ?",
        "et ": " ",
        " et]": " ]",
        "[et]": "[]",
        "*et*": "**",
        " et*": " *",
        " Nodejs.": " .",
        " Nodejs?": " ?",
        "Nodejs ": " ",
        " Nodejs]": " ]",
        "[Nodejs]": "[]",
        "*Nodejs*": "**",
        " Nodejs*": " *"
    },
    "dev\/plugin_template.md": {
        "Documentation plugin template": "",
        "Vous pouvez retrouver une base de plugin vide": "",
        "Création plugin partie 1": "",
        "Voici sa structure": "",
        "tout d'abord un dossier du nom de votre plugin (son identifiant unique plus exactement) qui doit contenir les sous-dossiers suivants": "",
        "Dossier contenant les librairies externes utilisées dans le plugin (exemple pour le plugin SMS une librairie pour la communication série en php": "",
        "Dossier contenant tous les fichiers de fonctionnement interne": "",
        "Dossier contenant la classe du plugin": "",
        "Dossier pouvant contenir des fonctions ne devant pas forcément appartenir à une classe (souvent utilisé pour permettre l'inclusion de multiples classes ou fichiers de configuration en une fois": "",
        "Fichier de configuration du plugin": "",
        "Dossier contenant les fichiers cibles d'appels AJA": "",
        "Dossier contenant les fichiers": "",
        "json de traduction du plugin": "",
        "Dossier contenant les templates html pour des tuiles sépcifiques aux équipements du plugin, dans les sous-dossier dashboard et mobile": "",
        "Dossier contenant la vue \"bureau\" du plugin (en opposition avec la vue \"mobile": "",
        "Dossier contenant tous les fichiers de type javascript pour l'interface du plugin": "",
        "Dossier contenant tous les fichiers de type php pour l'interface du plugin": "",
        "Si besoin, tous les fichiers css du plugin, y compris éventuellement des": "",
        "Dossier contenant le code des modals du plugin": "",
        "Dossier pour les images (png, jpg etc) nécessaires au plugin": "",
        "Contient les fichiers permettant à Jeedom de qualifier le plugin, de faire son installation et sa configuration": "",
        "Fichier contenant les informations de base du plugin": "",
        "Il est obligatoire sinon Jeedom ne verra pas le plugin": "",
        "Il contient entre autre l'identifiant du module, la description, les instructions d'installation…​": "",
        "Fichier contenant (si besoin) les méthodes d'installation et de désinstallation du plugin": "",
        "Fichier contenant les paramètres à configurer du plugin indépendants des équipements de celui-ci (exemple pour le module Zwave l'ip du Raspberry Pi ayant la carte Razberry": "",
        "Doit contenir la doc du plugin au format markdown, la racine et le fichier index.md": "",
        "Toutes les images sont dans docs\/images": "",
        "La doc elle-même est dans un dossier en fonction de la langue (ex en francais": "",
        "Dossier pour d'éventuels démon et dépendances": "",
        "Dossier utilisé pour des fichiers générés par le plugin propre au Jeedom de l'utilisateur": "",
        "Pour ce qui est de la convention de nommage des fichiers voici les": "",
        "impératifs": "",
        "les fichiers de class php doivent obligatoirement se finir par": "",
        "si ce n'est pas géré par un fichier d'inclusion, le nom du fichier doit être": "",
        "les fichiers servant uniquement de point d'entrée pour inclure de multiples fichiers doivent se finir par": "",
        "les fichiers de configuration doivent se finir par": "",
        "Voici les recommandations": "",
        "les fichiers de type AJAX doivent se finir par": "",
        "le nom de la première page de vue d'un plugin doit être le même que l'ID du plugin": "",
        "le nom du fichier JS (s'il y en a un) de la première page de vue du plugin doit être l'ID du plugin": "",
        "Création plugin partie 2": "",
        "dossier plugin info": "",
        "Fichier donnant les instructions d'installation d'un plugin": "",
        "Il est composé de la manière suivante": "",
        "La première partie commentée contient la licence (c'est mieux": "",
        "Celle utilisée ici indique que le fichier appartient à Jeedom et qu'il est open source Ensuite vient l'inclusion du core de Jeedom (cela permet d'accéder aux fonctions internes) Ensuite viennent les 3 fonctions": "",
        "méthode permettant d'installer le plugin": "",
        "Ici l'installation ajoute une tâche cron à Jeedom": "",
        "Utilisé ici pour redémarrer la tache cron": "",
        "méthode permettant de supprimer le plugin": "",
        "Ici la fonction supprime la tâche cron de Jeedom lors de la désinstallation": "",
        "\/* This file is part of Jeedom": "",
        "Jeedom is free software": "",
        "you can redistribute it and\/or modify": "",
        "it under the terms of the GNU General Public License as published by": "",
        "the Free Software Foundation, either version 3 of the License, or": "",
        "at your option) any later version": "",
        "Jeedom is distributed in the hope that it will be useful": "",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of": "",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE": "",
        "See the": "",
        "GNU General Public License for more details": "",
        "You should have received a copy of the GNU General Public License": "",
        "along with Jeedom": "",
        "\/": "",
        "require_once dirname(__FILE__) . '\/..\/..\/..\/core\/php\/core.inc.php';": "",
        "function openzwave_install": "",
        "is_object($cron": "",
        "function openzwave_update": "",
        "function openzwave_remove": "",
        "if (is_object($cron": "",
        "Création plugin partie 3": "",
        "dossier desktop": "",
        "Ce dossier contient la vue à proprement parler": "",
        "Dedans on retrouve obligatoirement la page de configuration du plugin (celle qui apparaîtra quand l'utilisateur fera plugin ⇒ catégorie ⇒ votre plugin": "",
        "Il est conseillé de nommer celle-ci avec l'id de votre plugin": "",
        "Il peut aussi contenir le panel (page que l'utilisateur trouvera dans accueil → nom de votre plugin": "",
        "Tous les fichiers dans ce dossier doivent finir par": "",
        "et doivent obligatoirement commencer par": "",
        "isConnect('admin": "",
        "throw new Exception('{{401 - Accès non autorisé}}');": "",
        "sendVarToJS('eqType', 'mail');": "",
        "A mettre tout en bas de votre page et utile uniquement sur la page de configuration de votre plugin": "",
        "Ce script permet de réduire le javascript obligatoire à une seule fonction (voir partie sur les fichiers JS": "",
        "Dans votre page de configuration une syntaxe HTML a été mise en place pour vous simplifier la vie": "",
        "Donc pour la plupart des plugins vous n'aurez à faire que du HTML pour stocker vos informations en base de données et donc vous en resservir du coté de votre classe": "",
        "La syntaxe est assez simple": "",
        "votre élément (input, select…​) doit avoir la classe css eqLogicAttr (ou cmdAttr pour les commandes) et un attribut indiquant le nom de la propriété": "",
        "Pour la liste des propriétés des équipements et des commandes c'est ici (pour voir les propriétés qui sont de JSON il suffit de regarder le getter ou le setter, si celui-ci prend 2 paramètres alors c'est du JSON": "",
        "Dernier point important sur la page de configuration": "",
        "celle-ci peut contenir autant d'équipements et de commandes que nécessaire": "",
        "Cependant il y a quelques règles à respecter": "",
        "Tous les éléments ayant la classe eqLogicAttr doivent être dans un élément ayant la classe css eqLogic Idem pour les éléments de classe css cmdAttr qui doivent être dans un élément de classe cmd": "",
        "Toutes les commandes d'un équipement doivent se trouver dans l'élément ayant la classe eqLogic correspondante": "",
        "Tous les fichiers JS doivent se trouver dans le dossier JS (facile": "",
        "Il est conseillé de le nommer du même ID que votre plugin (dans la partie configuration, pour le panel vous faîtes comme vous voulez": "",
        "Ce fichier JS (celui de la configuration du plugin) doit au minimum contenir une méthode addCmdToTable qui prend en paramètre l'objet commande à ajouter": "",
        "Voici un exemple simple": "",
        "function addCmdToTable(_cmd": "",
        "isset(_cmd": "",
        "var _cmd = {configuration": "",
        ";": "",
        "var tr = '';     tr += '';": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"id\" style=\"display": "",
        "none;\">';": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"name\">';     tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"configuration\" data-l2key=\"recipient\">';     tr += '';": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"type\" value=\"action\" style=\"display": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"subType\" value=\"message\" style=\"display": "",
        "if (is_numeric(_cmd": "",
        "tr += '<a class=\"btn btn-default btn-xs cmdAction\" data-action=\"test\"><i class=\"fa fa-rss\"><\/i> {{Tester}}<\/a>';": "",
        "tr += '<i class=\"fa fa-minus-circle pull-right cmdAction cursor\" data-action=\"remove\"><\/i><\/td>';": "",
        "tr += '';": "",
        "Ici on peut remarquer": "",
        "va insérer un select avec la liste des types connus (action et info pour le moment": "",
        "l'endroit où le select de sous type doit être posé": "",
        "qui permet d'initialiser le sous type avec la bonne valeur": "",
        "D'autres fonctions javascript peuvent être utilisées": "",
        "qui prend en paramètre tout l'objet de l'équipement (utile en cas de traitement de données avant de les restituer": "",
        "Elle est appelée lors de l'affichage des données de l'équipement": "",
        "qui prend en paramètre l'objet équipement qui va être sauvegardé en base de données (utile si vous devez faire du traitement avant sauvegarde) Dernière chose, pour les fichiers JS, voici comment les inclure de manière propre sur votre page php": "",
        "Le premier argument donne le dossier dans lequel le trouver (attention c'est le dossier père du dossier CSS), le deuxième le nom de votre fichier css, le troisième indique à Jeedom que c'est un fichier CSS et le dernier dans quel plugin il se trouve": "",
        "Le dossier modal vous permet de stocker vos fichiers php destinés à afficher des modals": "",
        "Voici comment les appeler à partir de votre page principale (ce code se met dans un fichier javascript": "",
        "On peut voir": "",
        "Quand on clique sur le bouton assistant, on récupère l'input dans lequel écrire puis on appelle l'assistant": "",
        "Une fois la configuration finie dans l'assistant, le résultat est récuperé puis écrit dans l'input précédemment sélectionné": "",
        "Création plugin partie 4": "",
        "dossier core": "",
        "De loin le dossier le plus important de votre plugin, il peut comporter 4 sous dossiers": "",
        "tous le long de cette partie l'id de votre plugin sera référencé par": "",
        "plugin\\_id": "",
        "Contient les fichiers PHP annexes, j'ai pris l'habitude de mettre par exemple un fichier d'inclusion si, bien sur, vous avez plusieurs fichiers de class ou des 3rparty à inclure": "",
        "Qui peut contenir 2 sous-dossiers, dashboard et mobile, c'est un dossier que Jeedom scanne automatiquement à la recherche de widget, donc si vous utilisez des widgets spécifiques c'est ici qu'il faut mettre leur fichier HTML": "",
        "i18n": "",
        "C'est ici que votre traduction doit se trouver sous forme de fichier json (le mieux et de regarder par exemple le plugin": "",
        "pour voir la forme du fichier": "",
        "Ce dossier est pour tout vos fichiers ajax, voici un squelette de fichier ajax": "",
        "require_once dirname(__FILE__) . '\/..\/..\/..\/..\/core\/php\/core.inc.php';": "",
        "include_file('core', 'authentification', 'php');": "",
        "throw new Exception(__('401 - Accès non autorisé', __FILE__));": "",
        "if (init('action') == 'votre action": "",
        "success($result);": "",
        "throw new Exception(__('Aucune methode correspondante à": "",
        "__FILE__) . init('action'));": "",
        "Catch exeption": "",
        "catch (Exception $e": "",
        "error(displayExeption($e), $e->getCode());": "",
        "Pour la définition des classes jeedom, je vous invite à consulter ce": "",
        "La seule méthode obligatoire est la méthode d'instance sur la classe cmd execute, voici un exemple avec le plugin S.A.R.A.H": "",
        "public function execute($_options = array": "",
        "isset($_options['title']) &&": "",
        "isset($_options['message": "",
        "throw new Exception(__(\"Le titre ou le message ne peuvent être tous les deux vide\", __FILE__));": "",
        "if (isset($_options['title": "",
        "return $http->exec();": "",
        "Plusieurs choses intéressantes ici": "",
        "Pour convertir la version demandée en dashboard ou mobile (mview devient mobile par exemple, cela permet par exemple sur les vues de rajouter le nom des objets": "",
        "Ici remplacement des tags préalablement remplis dans \\$replace du HTML pour contenir les valeurs": "",
        "Là cela permet de mettre la valeur dans le tag, seulement si la commande a bien été récupérée": "",
        "Sauvegarde du widget dans le cache": "",
        "pour que lors de la prochaine demande on le fournisse plus rapidement, on peut remarquer le 0 ici qui indique une durée de vie infinie, sinon la durée est en secondes (on verra dans la partie suivante comment le plugin weather remet à jour son widget": "",
        "set('weatherWidget": "",
        "Il faut aussi dire à Jeedom ce que votre widget autorise au niveau de la personnalisation": "",
        "C'est un peu complexe (et encore) mais normalement flexible et simple a mettre en place": "",
        "Il fonctionne de la même façon sur votre équipement ou commande, c'est un attribut static de la class \\$\\_widgetPossibility qui doit être un tableau multidimensionnel, mais c'est là que cela se complique si une dimension du tableau est a true ou false": "",
        "Il considère alors que tout les enfants possibles sont à cette valeur (je vais donner un exemple": "",
        "En premier lieu les cas où vous devez vous en servir": "",
        "si dans votre class héritant de eqLogic ou de cmd a une fonction toHtml sinon ce n'est pas la peine de lire la suite": "",
        "Méthode pre et post": "",
        "Lors de la création ou la suppression de vos objets (équipement, commande ou autre) dans Jeedom, celui-ci peut appeler plusieurs méthodes avant\/après l'action": "",
        "⇒ Méthode appellée avant la création de votre objet": "",
        "⇒ Méthode appellée après la création de votre objet": "",
        "⇒ Méthode appellée avant la mise à jour de votre objet": "",
        "⇒ Méthode appellée après la mise à jour de votre objet": "",
        "⇒ Méthode appellée avant la sauvegarde (creation et mise à jour donc) de votre objet": "",
        "⇒ Méthode appellée après la sauvegarde de votre objet": "",
        "⇒ Méthode appellée avant la supression de votre objet": "",
        "⇒ Méthode appellée après la supression de votre objet": "",
        "Exemple, toujours avec le plugin weather de la création des commandes ou mise à jour de celles-ci après la sauvegarde (l'exemple est simplifié": "",
        "public function postUpdate": "",
        "is_object($weatherCmd": "",
        "On voit ici que lors de l'appel on récupère l'équipement concerné puis on exécute les commandes pour récupérer les valeurs et mettre à jour celles-ci si nécessaire": "",
        "Partie très importante": "",
        "Pour finir voici quelques trucs et astuces": "",
        "évitez (à moins de savoir ce que vous faites) d'écraser une méthode de la classe héritée (cela peut causer beaucoup de problèmes": "",
        "Pour remonter la batterie (en %) d'un équipement, faites sur celui-ci (Jeedom se chargera du reste et de prévenir l'utilisateur si nécessaire": "",
        " ici.": " .",
        " ici?": " ?",
        "ici ": " ",
        " ici]": " ]",
        "[ici]": "[]",
        "*ici*": "**",
        " ici*": " *",
        " l'arborescence.": " .",
        " l'arborescence?": " ?",
        "l'arborescence ": " ",
        " l'arborescence]": " ]",
        "[l'arborescence]": "[]",
        "*l'arborescence*": "**",
        " l'arborescence*": " *",
        " fonts.": " .",
        " fonts?": " ?",
        "fonts ": " ",
        " fonts]": " ]",
        "[fonts]": "[]",
        "*fonts*": "**",
        " fonts*": " *",
        " Voir.": " .",
        " Voir?": " ?",
        "Voir ": " ",
        " Voir]": " ]",
        "[Voir]": "[]",
        "*Voir*": "**",
        " Voir*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " php.": " .",
        " php?": " ?",
        "php ": " ",
        " php]": " ]",
        "[php]": "[]",
        "*php*": "**",
        " php*": " *",
        " if.": " .",
        " if?": " ?",
        "if ": " ",
        " if]": " ]",
        "[if]": "[]",
        "*if*": "**",
        " if*": " *",
        " PHP.": " .",
        " PHP?": " ?",
        "PHP ": " ",
        " PHP]": " ]",
        "[PHP]": "[]",
        "*PHP*": "**",
        " PHP*": " *",
        " html.": " .",
        " html?": " ?",
        "html ": " ",
        " html]": " ]",
        "[html]": "[]",
        "*html*": "**",
        " html*": " *",
        " JS.": " .",
        " JS?": " ?",
        "JS ": " ",
        " JS]": " ]",
        "[JS]": "[]",
        "*JS*": "**",
        " JS*": " *",
        " id.": " .",
        " id?": " ?",
        "id ": " ",
        " id]": " ]",
        "[id]": "[]",
        "*id*": "**",
        " id*": " *",
        " MODAL.": " .",
        " MODAL?": " ?",
        "MODAL ": " ",
        " MODAL]": " ]",
        "[MODAL]": "[]",
        "*MODAL*": "**",
        " MODAL*": " *",
        " js.": " .",
        " js?": " ?",
        "js ": " ",
        " js]": " ]",
        "[js]": "[]",
        "*js*": "**",
        " js*": " *",
        " Note.": " .",
        " Note?": " ?",
        "Note ": " ",
        " Note]": " ]",
        "[Note]": "[]",
        "*Note*": "**",
        " Note*": " *",
        " Template.": " .",
        " Template?": " ?",
        "Template ": " ",
        " Template]": " ]",
        "[Template]": "[]",
        "*Template*": "**",
        " Template*": " *",
        " zwave.": " .",
        " zwave?": " ?",
        "zwave ": " ",
        " zwave]": " ]",
        "[zwave]": "[]",
        "*zwave*": "**",
        " zwave*": " *",
        " ajax.": " .",
        " ajax?": " ?",
        "ajax ": " ",
        " ajax]": " ]",
        "[ajax]": "[]",
        "*ajax*": "**",
        " ajax*": " *",
        " try.": " .",
        " try?": " ?",
        "try ": " ",
        " try]": " ]",
        "[try]": "[]",
        "*try*": "**",
        " try*": " *",
        " site.": " .",
        " site?": " ?",
        "site ": " ",
        " site]": " ]",
        "[site]": "[]",
        "*site*": "**",
        " site*": " *",
        " cache.": " .",
        " cache?": " ?",
        "cache ": " ",
        " cache]": " ]",
        "[cache]": "[]",
        "*cache*": "**",
        " cache*": " *"
    },
    "dev\/publication_plugin.md": {
        "Comment publier le plugin sur le market": "",
        "Pré-requis": "",
        "S'être inscrit en tant que dev, voir": "",
        "Avoir attendu la validation du compte market comme développeur": "",
        "Vérifier sur Community que vous avez accès à \"Salon des développeurs": "",
        "Avoir mis votre plugin sur github (dépôt privé ou non": "",
        "Présentez votre plugin dans le \"Salon des développeurs\" et \"Présentation plugin": "",
        "Présentation plugin": "",
        "Pourquoi présenter son plugin": "",
        "Pour éviter de travailler dans son coin et de voir à la fin un autre dev sortir la même chose": "",
        "Pour obtenir de l'aide sur la conception de celui-ci": "",
        "Pour permettre à l'équipe Jeedom lors d'un ToStable de connaître à quoi sert votre Plugin et comment il est codé": "",
        "Pour partager vos idées et vos remarques": "",
        "Nous ne vous demandons pas une dissertation sur vos plugins mais juste des infos": "",
        "Nom et id > Z-Wave (openzwave) \/\/ vous pouvez mettre cela en titre de votre sujet": "",
        "ce que fait votre plugin": "",
        "type de langages utilisés": "",
        "Utilise-t-il un démon": "",
        "des dépendances particulières": "",
        "des crons": "",
        "Possède-t-il un panel dédié": "",
        "si vous avez déjà une idée": "",
        "Lien GitHub ou autre site de dépôt (si vous le souhaitez": "",
        "Lien vers la documentation": "",
        "De là un tag sera attribué par un modérateur à votre Plugin": "",
        "Vous avez aussi plusieurs tag a votre disposition, pour l'équipe Jeedom puisse vous avertir plus facilement": "",
        "demon (si vous avez un démon": "",
        "dependance_intall (si vous avez des installation de dépendance": "",
        "nodejs ou python (language utilisé dans votre démon": "",
        "cron (si vous utiliser le moteur cron de Jeedom": "",
        "jsonrpc (si vous utiliser l'api jsonrpc de Jeedom": "",
        "idée, beta, stable, prive (selon ou en est votre plugin": "",
        "gratuit, payant": "",
        "panel-dash, panel-mob (si vous avez un panel dans votre plugin": "",
        "Une fois connecté avec votre compte dev sur le market il faut": "",
        "Cliquer sur market puis sur ajouter": "",
        "Renseigner les informations sur votre plugin": "",
        "Général": "",
        "Id (celui dans le fichier info.json": "",
        "Catégorie": "",
        "Si il est privé ou non": "",
        "Documentation et liens (Ces informations sont basé sur le fichier info": "",
        "json de votre plugin": "",
        "La description (bien mettre les points importants, la plupart des utilisateurs ne vont pas voir la documentation avant l'achat": "",
        "Les langues": "",
        "Le matériel compatible": "",
        "Une note sur l'utilisation si nécessaire": "",
        "c'est ici que vous aller mettre les information entre le market et Github": "",
        "Le token (cela permet de remonter les infos du plugin dans la documentation jeedom": "",
        "com\/settings\/tokens, choisir `token classic`, `aucune expiration` et cocher la partie `repo`": "",
        "Votre nom d'utilisateur github": "",
        "Le nom du dépôt sur github": "",
        "Cocher la case pour que le market gère la traduction de votre plugin et de la documentation (attention dans ce cas à bien donner tous les droits à l'utilisateur `jeedom-market` de github sur votre dépot github": "",
        "Une fois sauvegardé, en retournant dans l'onglet github, vous pourrez indiquer les branches de votre github qui correspondent aux versions du market (pensez à cliquer sur `Valider` avant de cliquer sur `Test\/Synchroniser`": "",
        "Beta  (par exemple": "",
        "Stable  (par exemple": "",
        "V3 (seulement si vous avez une branche différente pour le support de Jeedom v3": "",
        "La synchronisation se fait soit automatiquement tous les jours à 12h10 (attention de part le nombre de plugin et les restrictions d'appels API, la mise à jour commence à 12h10 mais peut prendre plusieurs dizaine d'heure), soit via une synchronisation manuelle d'une branche à partir de la fiche plugin": "",
        "Vous avez un compte market avec un nom différent de community et vous désirez publier sous le nom de community": "",
        "Allez sur votre compte market dans \"Mon profil": "",
        "Dans la zone \"Pour les développeurs\", vous pouvez indiquer dans le champ auteur votre nom de community": "",
        " Payant.": " .",
        " Payant?": " ?",
        "Payant ": " ",
        " Payant]": " ]",
        "[Payant]": "[]",
        "*Payant*": "**",
        " Payant*": " *",
        " gratuit.": " .",
        " gratuit?": " ?",
        "gratuit ": " ",
        " gratuit]": " ]",
        "[gratuit]": "[]",
        "*gratuit*": "**",
        " gratuit*": " *",
        " ici.": " .",
        " ici?": " ?",
        "ici ": " ",
        " ici]": " ]",
        "[ici]": "[]",
        "*ici*": "**",
        " ici*": " *",
        " wink.": " .",
        " wink?": " ?",
        "wink ": " ",
        " wink]": " ]",
        "[wink]": "[]",
        "*wink*": "**",
        " wink*": " *",
        " Configuration.": " .",
        " Configuration?": " ?",
        "Configuration ": " ",
        " Configuration]": " ]",
        "[Configuration]": "[]",
        "*Configuration*": "**",
        " Configuration*": " *",
        " Prix.": " .",
        " Prix?": " ?",
        "Prix ": " ",
        " Prix]": " ]",
        "[Prix]": "[]",
        "*Prix*": "**",
        " Prix*": " *",
        " Nom.": " .",
        " Nom?": " ?",
        "Nom ": " ",
        " Nom]": " ]",
        "[Nom]": "[]",
        "*Nom*": "**",
        " Nom*": " *",
        " Github.": " .",
        " Github?": " ?",
        "Github ": " ",
        " Github]": " ]",
        "[Github]": "[]",
        "*Github*": "**",
        " Github*": " *",
        " beta.": " .",
        " beta?": " ?",
        "beta ": " ",
        " beta]": " ]",
        "[beta]": "[]",
        "*beta*": "**",
        " beta*": " *",
        " master.": " .",
        " master?": " ?",
        "master ": " ",
        " master]": " ]",
        "[master]": "[]",
        "*master*": "**",
        " master*": " *",
        " Note.": " .",
        " Note?": " ?",
        "Note ": " ",
        " Note]": " ]",
        "[Note]": "[]",
        "*Note*": "**",
        " Note*": " *"
    },
    "dev\/structure_info_json.md": {
        "Sécurité": "",
        "Protocole domotique": "",
        "Passerelle domotique": "",
        "Objets Connectés": "",
        "Multimédia": "",
        "Météo": "",
        "Market Jeedom": "",
        "URL vers le bugtracker si externe (si non remplis alors vous receverez un mail": "",
        "bien regarder l'exemple du plugin template) (Voir explicationsci-dessous": "",
        "Temps maximum imparti pour l'installation des dépendances, exprimé en minutes": "",
        "sinon \"false\" ou absent": "",
        "true\" si": "",
        "miniplus, smart, docker, rpi, diy, mobileapp, v4": "",
        "Compatibilité du plugin ": "",
        "Liste des langues disponibles pour le plugin ": "",
        "Lien Html vers le forum sur le sujet officiel du plugin": "",
        "Lien Html vers une vidéo de présentation": "",
        "Lien Html vers la documentation beta du plugin": "",
        "Lien Html vers le Changelog Beta": "",
        "Lien Html vers la documentation du plugin": "",
        "Lien Html vers le Changelog": "",
        "Il s'agit du nom du fichier principal de ce panel": "",
        "Si le plugin utilise un panel dédié sur la webApp Jeedom": "",
        "Si le plugin utilise un panel dédié sur le desktop": "",
        "Catégorie de classement du plugin sur le Market jeedom": "",
        "99 pour inclure toutes les versions mineures": "",
        "Version minimale et maximale requise de Debian": "",
        "Version minimum requise de Jeedom (Core": "",
        "Nom de l'auteur du plugin, tel qu'il sera affiché une fois le plugin installé, dans les informations de celui-ci": "",
        "Type de licence": "",
        "Informations complémentaires à la documentation sur l'usage du plugin": "",
        "Attention c'est un tableau pour les differentes langues de jeedom possible (bien regarder l'exemple du plugin template": "",
        "Description du plugin, tel qu'elle s'affichera sur le Market Jeedom": "",
        "Nom du plugin": "",
        "Ne peut pas contenir _": "",
        "Identifiant unique du plugin sur le Market Jeedom": "",
        "Documentation fichier info.json": "",
        "Intégré depuis la version 3": "",
        "0 de Jeedom, le fichier": "",
        "est obligatoire pour le bon fonctionnement des plugins, et leur bon déploiement sur le Market Jeedom": "",
        "Le fichier info": "",
        "json est enregistré dans le dossier": "",
        "de votre plugin": "",
        "Liste des variables du fichier": "",
        "Les champs marqués d'un * sont des champs obligatoires": "",
        "Doit debuter par une lettre": "",
        "Sans accents": "",
        "Minimum 80 caractères. (``": "",
        "`` pour le retour à la ligne": "",
        "Sous la forme d'un objet json, exemple": "",
        "99} (Core 4.4": "",
        "15 minimum": "",
        "Si l'un des deux n'est pas rempli, il ne sera pas comparé à la version de l'OS de l'utilisateur": "",
        "Vous pouvez indiquer une version plus précise comme 10": "",
        "5 par exemple": "",
        "Pour retirer la restriction de version il faut republier sur la market avec une valeur vide": "",
        "Notez que pour le max, il est conseillé de mettre": "",
        "nomenclature du tableau ci-dessous": "",
        "Respecter impérativement la": "",
        " ": "",
        "le plugin doit installer des dépendances": "",
        "le plugin doit exécuter des deamons": "",
        "des utilisateurs": "",
        "Attributs%20Objet) ou": "",
        "Fichier plugin-template\/plugin_info\/info.json": "",
        "NOMENCLATURE CATEGORIES": "",
        "Ces attributs permettent de demander aux utilisateurs des paramètres supplémentaires, sur chaque objet (`objet` au sens Jeedom": "",
        "menu Outils \/ Objets; typiquement ça représente les pièces dans notre domotique) ou bien pour chaque utilisateur": "",
        "Dans votre code, vous pourrez récupérer la valeur de ces paramètres en utilisant l'objet `User` pour un attribut User, ou bien l'objet `jeeObject` pour un attribut objet": "",
        "```": "",
        "ID_plugin": "",
        "ID_plugin est l'ID de votre plugin": "",
        "clef est la clé dans votre configuration json (dans l'exemple": "",
        "toto, toto 2": "",
        "Attributs Objet": "",
        "La syntaxe est la suivante pour proposer 2 paramètres spécifiques par objet": "",
        "fr_FR": "",
        "Plop je suis un attribut spécial\"},\"type": "",
        "Plop je suis un attribut spécial number\"},\"type": "",
        "L'utilisateur pourra ainsi définir ces 2 paramètres pour chaque objet dans le menu de configuration des objets (menu Outils \/ Objets": "",
        "Ici un texte libre, et un numérique": "",
        "Attributs User": "",
        "Plop je suis un attribut spécial users\"},\"type": "",
        "select\",\"values": "",
        "[{\"value": "",
        "1\", \"name": "",
        "valeur 1\"},{\"value": "",
        "plop\", \"name": "",
        "valeur plop": "",
        "Ici, cet attribut permet à chaque utilisateur de définir un paramètre qui lui est propre (dans le menu Réglages \/ Préférences": "",
        "Attributs EqLogic": "",
        "Transmettre l'équipement en MQTT": "",
        "Ici, cet attribut permet de définir un paramètre pour chaque équipement de jeedom (dans la configuration avancée de l'équipement": "",
        "Vous le retrouver dans la configuration de l'équipement sous `plugin": "",
        "mqttTranmit` (`plugin": "",
        "id_plugin": "",
        " Automatisme.": " .",
        " Automatisme?": " ?",
        "Automatisme ": " ",
        " Automatisme]": " ]",
        "[Automatisme]": "[]",
        "*Automatisme*": "**",
        " Automatisme*": " *",
        " Santé.": " .",
        " Santé?": " ?",
        "Santé ": " ",
        " Santé]": " ]",
        "[Santé]": "[]",
        "*Santé*": "**",
        " Santé*": " *",
        " Programmation.": " .",
        " Programmation?": " ?",
        "Programmation ": " ",
        " Programmation]": " ]",
        "[Programmation]": "[]",
        "*Programmation*": "**",
        " Programmation*": " *",
        " Organisation.": " .",
        " Organisation?": " ?",
        "Organisation ": " ",
        " Organisation]": " ]",
        "[Organisation]": "[]",
        "*Organisation*": "**",
        " Organisation*": " *",
        " Nature.": " .",
        " Nature?": " ?",
        "Nature ": " ",
        " Nature]": " ]",
        "[Nature]": "[]",
        "*Nature*": "**",
        " Nature*": " *",
        " Monitoring.": " .",
        " Monitoring?": " ?",
        "Monitoring ": " ",
        " Monitoring]": " ]",
        "[Monitoring]": "[]",
        "*Monitoring*": "**",
        " Monitoring*": " *",
        " Energie.": " .",
        " Energie?": " ?",
        "Energie ": " ",
        " Energie]": " ]",
        "[Energie]": "[]",
        "*Energie*": "**",
        " Energie*": " *",
        " Confort.": " .",
        " Confort?": " ?",
        "Confort ": " ",
        " Confort]": " ]",
        "[Confort]": "[]",
        "*Confort*": "**",
        " Confort*": " *",
        " Communication.": " .",
        " Communication?": " ?",
        "Communication ": " ",
        " Communication]": " ]",
        "[Communication]": "[]",
        "*Communication*": "**",
        " Communication*": " *",
        " json.": " .",
        " json?": " ?",
        "json ": " ",
        " json]": " ]",
        "[json]": "[]",
        "*json*": "**",
        " json*": " *",
        " info.": " .",
        " info?": " ?",
        "info ": " ",
        " info]": " ]",
        "[info]": "[]",
        "*info*": "**",
        " info*": " *",
        " Champs.": " .",
        " Champs?": " ?",
        "Champs ": " ",
        " Champs]": " ]",
        "[Champs]": "[]",
        "*Champs*": "**",
        " Champs*": " *",
        " Valeurs.": " .",
        " Valeurs?": " ?",
        "Valeurs ": " ",
        " Valeurs]": " ]",
        "[Valeurs]": "[]",
        "*Valeurs*": "**",
        " Valeurs*": " *",
        " min.": " .",
        " min?": " ?",
        "min ": " ",
        " min]": " ]",
        "[min]": "[]",
        "*min*": "**",
        " min*": " *",
        " 10,\"max.": " .",
        " 10,\"max?": " ?",
        "10,\"max ": " ",
        " 10,\"max]": " ]",
        "[10,\"max]": "[]",
        "*10,\"max*": "**",
        " 10,\"max*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " SpecialAttributes.": " .",
        " SpecialAttributes?": " ?",
        "SpecialAttributes ": " ",
        " SpecialAttributes]": " ]",
        "[SpecialAttributes]": "[]",
        "*SpecialAttributes*": "**",
        " SpecialAttributes*": " *",
        " Utilisation.": " .",
        " Utilisation?": " ?",
        "Utilisation ": " ",
        " Utilisation]": " ]",
        "[Utilisation]": "[]",
        "*Utilisation*": "**",
        " Utilisation*": " *",
        " user.": " .",
        " user?": " ?",
        "user ": " ",
        " user]": " ]",
        "[user]": "[]",
        "*user*": "**",
        " user*": " *",
        " clef.": " .",
        " clef?": " ?",
        "clef ": " ",
        " clef]": " ]",
        "[clef]": "[]",
        "*clef*": "**",
        " clef*": " *",
        " object.": " .",
        " object?": " ?",
        "object ": " ",
        " object]": " ]",
        "[object]": "[]",
        "*object*": "**",
        " object*": " *",
        " specialAttributes.": " .",
        " specialAttributes?": " ?",
        "specialAttributes ": " ",
        " specialAttributes]": " ]",
        "[specialAttributes]": "[]",
        "*specialAttributes*": "**",
        " specialAttributes*": " *",
        " toto.": " .",
        " toto?": " ?",
        "toto ": " ",
        " toto]": " ]",
        "[toto]": "[]",
        "*toto*": "**",
        " toto*": " *",
        " name.": " .",
        " name?": " ?",
        "name ": " ",
        " name]": " ]",
        "[name]": "[]",
        "*name*": "**",
        " name*": " *",
        " input.": " .",
        " input?": " ?",
        "input ": " ",
        " input]": " ]",
        "[input]": "[]",
        "*input*": "**",
        " input*": " *",
        " toto2.": " .",
        " toto2?": " ?",
        "toto2 ": " ",
        " toto2]": " ]",
        "[toto2]": "[]",
        "*toto2*": "**",
        " toto2*": " *",
        " number.": " .",
        " number?": " ?",
        "number ": " ",
        " number]": " ]",
        "[number]": "[]",
        "*number*": "**",
        " number*": " *",
        " eqLogic.": " .",
        " eqLogic?": " ?",
        "eqLogic ": " ",
        " eqLogic]": " ]",
        "[eqLogic]": "[]",
        "*eqLogic*": "**",
        " eqLogic*": " *",
        " mqttTranmit.": " .",
        " mqttTranmit?": " ?",
        "mqttTranmit ": " ",
        " mqttTranmit]": " ]",
        "[mqttTranmit]": "[]",
        "*mqttTranmit*": "**",
        " mqttTranmit*": " *",
        " type.": " .",
        " type?": " ?",
        "type ": " ",
        " type]": " ]",
        "[type]": "[]",
        "*type*": "**",
        " type*": " *",
        " checkbox.": " .",
        " checkbox?": " ?",
        "checkbox ": " ",
        " checkbox]": " ]",
        "[checkbox]": "[]",
        "*checkbox*": "**",
        " checkbox*": " *",
        " mqtt2.": " .",
        " mqtt2?": " ?",
        "mqtt2 ": " ",
        " mqtt2]": " ]",
        "[mqtt2]": "[]",
        "*mqtt2*": "**",
        " mqtt2*": " *",
        " key`.": " .",
        " key`?": " ?",
        "key` ": " ",
        " key`]": " ]",
        "[key`]": "[]",
        "*key`*": "**",
        " key`*": " *"
    },
    "dev\/transfert.md": {
        "Tranférer son plugin": "",
        "Peu importe la raison, un jour on peut être amené à arrêter le développement de son plugin": "",
        "Afin de que la communauté puisse continuer à l'utiliser avec les futures versions de Jeedom, merci de faire une demande sur community pour trouver un repreneur": "",
        "Une fois celui-ci trouvé, il ne vous reste plus qu'à contacter l'équipe Jeedom pour demander le transfert, 2 possibilités": "",
        "Ouvrir une demande de support depuis votre compte market en choisissant assistance technique -> developpeur (pas besoin de service pack ou autre il faut juste etre identifié en tant que développeur": "",
        "Cette demande se fait uniquement depuis votre page profils du market en cliquant sur le bouton \"Ouvrir une demande de support\" (bouton tout à droite": "",
        "Écrire un mail à l'adresse dédiée pour les devs ou à support[a].jeedom": "",
        "com avec l'adresse mail enregistrée sur le compte dev": ""
    },
    "dev\/tutorial_plugin.md": {
        "Pour commencer": "",
        "Ce tutoriel a été écrit par ZygOm4t1k que nous remercions vivement": "",
        "Vous pouvez retrouver l'original": "",
        "Voici un petit TP pour expliquer comment créer un plugin": "",
        "Pour l'exemple nous allons créer un plugin qui retourne une phrase du site viedemerde": "",
        "Le plugin sera évolutif": "",
        "documentation officielle": "",
        "Il ne remplace en aucun cas la": "",
        "Créer la base du plugin": "",
        "Pour commencer il faut déterminer un nom et un id (qui ne doit pas exister": "",
        "Vie de Merde": "",
        "Télécharger le plugin template pour avoir la": "",
        "Dé zipper le fichier": "",
        "Vous obtiendrez un dossier \" plugin-template-master \" contenant des dossiers 3rparty, core, desktop…": "",
        "On y va": "",
        "Un assistant de configuration est disponible pour vous aider à personnaliser rapidement votre plugin": "",
        "Cet outil interactif vous permet de définir facilement le nom du plugin, d'indiquer si un démon est requis, et prend en charge la modification automatique de tous les fichiers nécessaires": "",
        "Son utilisation simplifie le processus de configuration et vous fait gagner un temps précieux dans le développement de votre plugin": "",
        "👉 Pour lancer l'assistant, ouvrez un terminal dans le répertoire du plugin template et exécutez la commande suivante": "",
        "```": "",
        "php plugin_info\/helperConfiguration.php": "",
        "Si vous ne voulez pas utilisez ce script, vous pouvez suivre les étapes suivantes pour renommer les fichiers": "",
        "Renommez le dossier \" plugin-template-master \" en \" vdm \" (l'id) du plugin": "",
        "1\/ Ouvrir le fichier plugin_info\/info": "",
        "json et éditer le": "",
        "Plugin pour récupérer les dernières vdm": "",
        "Zyg0m4t1k": "",
        "3.3.39": "",
        "Copiez collez le code ci-dessus": "",
        "J'ai changé l'id": "",
        "le nom, ajouté une description, l'auteur et la catégorie": "",
        "version minimale de jeedom pour avoir accès au plugin sur le market": "",
        "Changelog, documentation, language, compatibility nuls pour le moment": "",
        "J'y reviendrai plus tard": "",
        "2\/ Nous allons renommer les fichiers nécessaires pour que le plugin soit reconnu par Jeedom": "",
        "Renommez le fichier core\/ajax\/template.ajax": "",
        "php en vdm.ajax.php": "",
        "Renommez le fichier core\/class\/template.class": "",
        "php en vdm.class": "",
        "php et ouvrez le pour l'éditer": "",
        "class template extends eqLogic": "",
        "class vdm extends eqLogic": "",
        "class templateCmd extends cmd": "",
        "class vdmCmd extends cmd": "",
        "Renommez le fichier core\/php\/template.inc": "",
        "php en core\/php\/vdm.inc.php": "",
        "Renommez le fichier desktop\/php\/template": "",
        "php en desktop \/php\/vdm": "",
        "php et ouvrez le": "",
        "ne changez pas la ligne": "",
        "Et rien d'autre": "",
        "Renommez le fichier desktop\/modal\/modal.template": "",
        "php en desktop\/modal\/modal.vdm.php": "",
        "Renommez le fichier desktop\/js\/template": "",
        "js en desktop\/js\/ vdm.js": "",
        "Ouvrir le fichier plugin_info\/install": "",
        "php et renommez les fonctions comme suit": "",
        "function vdm_install": "",
        "function vdm_update": "",
        "function vdm_remove": "",
        "Documentation développeurs - Icône de plugin": "",
        "Voilà le plugin est prêt mais il reste la customisation et l'icône à mettre à jour": "",
        "Ajoutez l'icône dans le dossier plugin_info sous le nom vdm_icon.png": "",
        "dans mon cas": "",
        "Maintenant on peut copier le dossier vdm dans le dossier plugin de Jeedom et aller dans la gestion des plugins": "",
        "On retrouve bien le plugin": "",
        "On l'active et ensuite plugins\/Monitoring\/Vie de Merde": "",
        "Voilà la base est prête": "",
        "Vous devriez avoir le plugin d'actif mais pour le moment il ne fait rien": "",
        "Les commandes": "",
        "Le but du plugin sera de récupérer une vdm aléatoire et l'afficher sur le dashboard": "",
        "Il faut donc créer une commande de type info pour stocker cette information": "",
        "Elle sera de sous-type \" string \" car c'est une chaîne de caractère": "",
        "Pour l'exemple nous allons ajouter une commande qui rafraîchit l'information": "",
        "Ce sera donc une commande de type action et sous-type other": "",
        "Créez un équipement \" vdm1 \" en cliquant sur le +": "",
        "Activez le et rendez le visible": "",
        "Choisissez un objet et l'équipement doit apparaître sur le dashboard (selon l'objet": "",
        "A ce moment, il n'y a pas de commandes qui apparaissent dans l'onglet commandes, ni sur le widget": "",
        "Ouvrir le fichier core\/class\/vdm.class": "",
        "php et chercher la fonction postSave() (Lire la doc du plugin template si pas encore fait": "",
        "On crée les 2 commandes": "",
        "public function postSave": "",
        "is_object($info": "",
        "is_object($refresh": "",
        "Créez un autre équipement \" vdm2 \" en cliquant sur le +": "",
        "Dans l'onglet commandes, les commandes sont apparues": "",
        "Choisissez un objet parent et allez voir ce que ça donne sur le dashboard": "",
        "Enregistrez le premier équipement \" vdm1 \" pour créer les commandes": "",
        "Voir le rendu sur le widget aussi": "",
        "Dans l'onglet commandes, vous devriez voir": "",
        "Ouvrir desktop\/php\/vdm": "",
        "php pour trouver le code html de ce tableau": "",
        "Au moment de l'affichage , c'est le script desktop\/js\/vdm": "",
        "js qui est appelé et lance la fonction addCmdToTable": "",
        "Fonction permettant l'affichage des commandes dans l'équipement": "",
        "\/": "",
        "function addCmdToTable(_cmd": "",
        "isset(_cmd": "",
        "var _cmd = { configuration": "",
        ";": "",
        "isset(_cmd.configuration": "",
        "_cmd.configuration = {};": "",
        "var tr = '<tr class=\"cmd\" data-cmd_id=\"' + init(_cmd": "",
        "id) + '\">';": "",
        "tr += '<td style=\"width": "",
        "60px;\">';": "",
        "tr += '<span class=\"cmdAttr\" data-l1key=\"id\"><\/span>';": "",
        "tr += '<\/td>';": "",
        "tr += '<td style=\"min-width": "",
        "300px;width": "",
        "350px;\">';": "",
        "tr += '<div class=\"row\">';": "",
        "tr += '<div class=\"col-xs-7\">';": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"name\" placeholder=\"{{Nom de la commande}}\">';": "",
        "tr += '<select class=\"cmdAttr form-control input-sm\" data-l1key=\"value\" style=\"display": "",
        "none;margin-top": "",
        "5px;\" title=\"{{Commande information liée}}\">';": "",
        "tr += '<option value=\"\">{{Aucune}}<\/option>';": "",
        "tr += '<\/select>';": "",
        "tr += '<\/div>';": "",
        "tr += '<div class=\"col-xs-5\">';": "",
        "tr += '<a class=\"cmdAction btn btn-default btn-sm\" data-l1key=\"chooseIcon\"><i class=\"fas fa-flag\"><\/i> {{Icône}}<\/a>';": "",
        "tr += '<span class=\"cmdAttr\" data-l1key=\"display\" data-l2key=\"icon\" style=\"margin-left": "",
        "10px;\"><\/span>';": "",
        "tr += '<td>';": "",
        "tr += '<span class=\"type\" type=\"' + init(_cmd": "",
        "type) + '\">' + jeedom.cmd": "",
        "availableType() + '<\/span>';": "",
        "tr += '<span class=\"subType\" subType=\"' + init(_cmd": "",
        "subType) + '\"><\/span>';": "",
        "150px;width": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"configuration\" data-l2key=\"minValue\" placeholder=\"{{Min": "",
        "title=\"{{Min": "",
        "style=\"width": "",
        "inline-block;\"\/> ';": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"configuration\" data-l2key=\"maxValue\" placeholder=\"{{Max": "",
        "title=\"{{Max": "",
        "tr += '<input class=\"cmdAttr form-control input-sm\" data-l1key=\"unite\" placeholder=\"{{Unité}}\" title=\"{{Unité}}\" style=\"width": "",
        "inline-block;\"\/>';": "",
        "80px;width": "",
        "tr += '<label class=\"checkbox-inline\"><input type=\"checkbox\" class=\"cmdAttr\" data-l1key=\"isVisible\" checked\/>{{Afficher}}<\/label>';": "",
        "tr += '<label class=\"checkbox-inline\"><input type=\"checkbox\" class=\"cmdAttr\" data-l1key=\"isHistorized\" checked\/>{{Historiser}}<\/label>';": "",
        "tr += '<label class=\"checkbox-inline\"><input type=\"checkbox\" class=\"cmdAttr\" data-l1key=\"display\" data-l2key=\"invertBinary\"\/>{{Inverser}}<\/label>';": "",
        "200px;\">';": "",
        "if (is_numeric(_cmd": "",
        "tr += '<a class=\"btn btn-default btn-xs cmdAction\" data-action=\"configure\"><i class=\"fas fa-cogs\"><\/i><\/a> ';": "",
        "tr += '<a class=\"btn btn-default btn-xs cmdAction\" data-action=\"test\"><i class=\"fas fa-rss\"><\/i> Tester<\/a>';": "",
        "tr += '<i class=\"fas fa-minus-circle pull-right cmdAction cursor\" data-action=\"remove\"><\/i><\/td>';": "",
        "tr += '<\/tr>';": "",
        "var tr = $('#table_cmd tbody tr').last();": "",
        "jeedom.eqLogic.builSelectCmd": "",
        "function (error": "",
        "function (result": "",
        "tr.find('.cmdAttr[data-l1key=value]').append(result);": "",
        "tr.setValues(_cmd, '.cmdAttr');": "",
        "jeedom.cmd.changeType(tr, init(_cmd.subType));": "",
        "Cela se fait automatiquement": "",
        "Voilà il reste à récupérer une vdm aléatoire et à utiliser les commandes": "",
        "Récupération des informations": "",
        "Pour récupérer une vdm de manière aléatoire": "",
        "libxml_use_internal_errors(false);": "",
        "libxml_use_internal_errors(true);": "",
        "return $divs[0]->nodeValue ;": "",
        "php et pour la class vdm qui hérite des méthodes egLogic, je crée une fonction randomVdm": "",
        "public function randomVdm": "",
        "Maintenant on va mettre à jour la commande info(story) avec cette information en lançant la commande action(refresh": "",
        "Toujours dans core\/class\/vdm.class": "",
        "php pour la class vdmCmd on va utiliser la méthode execute": "",
        "public function execute($_options = array": "",
        "C'est ici qu'on va définir ce qu'il va se passer quand on actionne la commande \" Rafraîchir": "",
        "La classe vdmCmd a hérité de toutes les méthodes de la class cmd (Core jeedom": "",
        "On vérifie le logicalId de la commande lancée et si \" refresh \" on lance les actions": "",
        "switch ($this->getLogicalId": "",
        "case 'refresh": "",
        "\/\/LogicalId de la commande rafraîchir que l'on a créé dans la méthode Postsave de la classe vdm": "",
        "\/\/code pour rafraîchir ma commande": "",
        "Maintenant il reste à exécuter la fonction randomVdm": "",
        "On récupère pour cela l'eqLogic (l'équipement) de la commande et on exécute la fonction": "",
        "On met à jour la commande \" story \" avec la variable $info": "",
        "On va utiliser la méthode checkAndUpdateCmd de la class eqlogic": "",
        "Ce qui donne au final": "",
        "switch ($this->getLogicalId()) { \/\/vérifie le logicalid de la commande": "",
        "\/\/ LogicalId de la commande rafraîchir que l'on a créé dans la méthode Postsave de la classe vdm": "",
        "Maintenant allez dans un équipement créé et lancez la commande Rafraichir": "",
        "Puis la commande \" Histoire \" qui doit être à jour": "",
        "Sur le Dashboard, les informations apparaissent": "",
        "Cliquez sur l'icône refresh pour changer l'information": "",
        "On va définir ensuite la taille du widget et le customiser un peu puis automatiser le refresh": "",
        "Update des informations (cron": "",
        "Le plugin est fonctionnel mais pour l'instant il ne fait pas grand-chose": "",
        "Si vous cliquez sur la commande \" refresh \" , la commande \" story \" se met à jour mais sinon rien": "",
        "A noter que pour la commande je la nomme par logicalId": "",
        "Et c'est important": "",
        "Avoir un logicalId unique par équipement (eqLogic) simplifie les choses": "",
        "On va voir maintenant comment mettre à jour la commande en utilisant les fonctions natives du core": "",
        "Les crons": "",
        "Il y en a plusieurs": "",
        "rafraichissement toutes les minutes": "",
        "rafraichissement toutes les 5 minutes": "",
        "rafraichissement toutes les 15 minutes": "",
        "rafraichissement toutes les 30 minutes": "",
        "toutes les heures": "",
        "Vu le plugin on va effectuer une mise à jour toutes les heures (soyons fous": "",
        "On va donc utiliser la fonction cronHourly": "",
        "On va donc ouvrir le fichier vdm.class": "",
        "php et chercher": "",
        "Fonction exécutée automatiquement toutes les heures par Jeedom": "",
        "public static function cronHourly": "",
        "Décommentez le code": "",
        "Notre fonction est opérationnelle": "",
        "Maintenant il faut récupérer tous les équipements actifs de notre plugin": "",
        "byType('vdm', true) \/\/array contenant tous les équipements du plugin, le deuxième argument, un boolean, permet de ne récupérer que les équipements actifs si true ou tous les équipements si false (défaut": "",
        "et les parcourir 1 par 1": "",
        "foreach (self": "",
        "byType('vdm', true) as $vdm": "",
        "Voila maintenant on recherche la commande \" refresh \" de l'équipement (eqLogic": "",
        "Si elle n'existe pas on continue la boucle (foreach) sinon on l'éxécute": "",
        "is_object($cmd": "",
        "byType('vdm', true) as $vdm) { \/\/parcours tous les équipements actifs du plugin vdm": "",
        "is_object($cmd)) { \/\/Si la commande n'existe pas": "",
        "continue; \/\/continue la boucle": "",
        "Pour tester, dans jeedom, allez dans configuration\/moteur de tâches et lancer le cron de class \" plugin \" fonction \" cronHourly": "",
        "L'information se met à jour": "",
        "C'est bien mais ça ne me convient pas": "",
        "A la création de l'équipement, la commande \" story \" ne se met pas à jour": "",
        "On améliore donc le code": "",
        "Pour la création des commandes nous avons utilisé la méthode postSave": "",
        "On va utiliser la méthode postUpdate() pour mettre à jour l'information": "",
        "La manière la plus simple vu qu'il n'y a qu'une commande et qu'elle est créé en postSave": "",
        "public function postUpdate": "",
        "if (is_object($cmd)) { \/\/elle existe et on lance la commande": "",
        "Il faut tester, ça fonctionne": "",
        "Mais voici une alternative qui peut s'avérer plus utile dans des cas plus complexe": "",
        "Dans la fonction postUpdate() , on lance la function cronHourly() avec l'id de l'équipement": "",
        "cronHourly($this->getId()); \/\/lance la fonction cronHourly avec l'id de l'eqLogic": "",
        "Mais dans ce cas on change la fonction cronHourly": "",
        "public static function cronHourly($_eqLogic_id = null": "",
        "if ($_eqLogic_id == null) { \/\/La fonction n'a pas d'argument donc on recherche tous les équipements du plugin": "",
        "else { \/\/La fonction a l'argument id(unique) d'un équipement(eqLogic": "",
        "foreach ($eqLogics as $vdm": "",
        "Après vous pouvez changer la fréquence du cron selon l'importance de vos informations à récupérer": "",
        "Je ne peux que vous invitez à prendre le temps d'aller sur cette page pour en savoir plus": "",
        "Et encore mieux d'aller sur le github du core": "",
        "Mettez le nez de dedans pour maîtriser encore plus": "",
        "Le plugin est fonctionnel en l'état": "",
        "Je prendrai le temps d'ajouter la façon de mettre en place un cron personnalisé selon l'équipement": "",
        "Le widget": "",
        "Pas une mince affaire le widget mais on va rester sur le widget par défaut pour le moment": "",
        "Si vous n'avez rien touché, équipement activé et visible, le widget prend toute la largeur de l'écran": "",
        "On va donc le changer": "",
        "La commande qui apparaît est la commande \"story\" de type info, sous-type string": "",
        "Mon plaisir est de me lever le matin est de lire une vdm au réveil": "",
        "Ça me permet de voir qu'il y a pire que moi": "",
        "Mais je n'ai pas mes lunettes et actuellement le rendu sur le widget ne me permet pas de le lire…": "",
        "Donc on va changer le style en affectant un template à la commande \" story": "",
        "Rien de plus simple": "",
        "Je vais voir": "",
        "Je cherche un template pour cmd.info": "",
        "string( notre commande est de type info sous-type string": "",
        "Pas difficile il y en a que deux (default ou tile": "",
        "J'applique le template \" cmd.info.string.tile": "",
        "html \" à ma commande": "",
        "Pour cela j'ouvre le fichier vdm.class": "",
        "php , fonction postSave() et j'ajoute le template \" tile \" pour la commande \" story \" en appliquant la méthode setTemplate": "",
        "Rafraîchir le dashboard": "",
        "C'est mieux mais le widget prend toujours la largeur du dashboard": "",
        "On va donc corriger": "",
        "Par défaut la largeur du widget de l'équipement(eqLogic) et la hauteur sont à \" auto": "",
        "On va donc changer la largeur du widget(équipement => eqLogic) en utilisant la méthode setDisplay() héritée de la class eqLogic": "",
        "On laisse la hauteur en auto": "",
        "Pour cela il suffit d'ajouter": "",
        "Oui, mais": "",
        "Car il y a un mais": "",
        "Essayez d'ajouter ça dans la fonction postsave() ou postUpdate() et ça ne prends pas en compte le changement": "",
        "Ben faut lire la doc du plugin template ==>ICI": "",
        "Maintenant que vous avez bien lu vous savez qu'Il faut utiliser la méthode preSave": "",
        "public function preSave": "",
        "Enregistrez un équipement et rafraîchissez le dashboard": "",
        "Les paramètres": "",
        "Les options": "",
        "C'est un chapitre important et il faut le comprendre avant de passer à la suite": "",
        "Pour le moment, nous avons donc utiliser 3 classes du core de jeedom": "",
        "EqLogic, cmd, cron": "",
        "Aller pour info, on en ajoute une 4eme avec la class plugin dans le fichier vdm": "",
        "php que vous ouvrez et laissez ouvert car on va l'éditer": "",
        "Il faut comprendre que tout est fait pour nous faciliter la tâche": "",
        "Pour un paramètre\/une option interne au plugin, on va utiliser une des méthodes de la class eqLogic du core": "",
        "setConfiguration() en y ajoutant les paramètres que l'on souhaite": "",
        "Par exemple": "",
        "Pour laisser le choix à l'utilisateur, on retourne sur le fichier desktop": "",
        "php que vous avez laissé ouvert car vous suivez ce TP au pied de la lettre": "",
        "Et remplacez par": "",
        "Enregistrez et allez sur un équipement du plugin que vous avez déjà créé en suivant ce TP (Rafraichir si besoin": "",
        "Dans le champs \"Paramètre\" d'un équipement, tapez \"aléatoire\" et sauvegardez": "",
        "Parfait le paramètre est sauvegardé": "",
        "C'est simple,non": "",
        "C'est pourquoi il ne faut surtout pas toucher à cette ligne de code comme indiqué dans le premier menu \" test": "",
        "C'est lui qui fait tout le travail": "",
        "Si vous regardez de plus près le fichier desktop": "",
        "php il y a": "",
        "Si vous avez bien assimilé tout ça on va pouvoir passer à la suite": "",
        "Mais avant on va changer dans le fichier desktop.php": "",
        "Le texte entre accolades correspond au texte qui sera traduit si vous poussez le plugin sur le market": "",
        "Pour la suite, on va faire évoluer le plugin en choisissant un type de vdm(aléatoire ou épicées ou tops) que l'on souhaite ainsi qu'un cron personnalisé pour chaque équipement": "",
        "Utilisation des options\/paramètres": "",
        "Pour aller plus loin et bien comprendre le chapitre précédent, on va permettre à l'utilisateur de choisir un type de vdm (aleatoire ou epicees ou tops": "",
        "On pourrait le laisser taper dans l'input \" Type de vdm": "",
        "aleatoire ou epicees ou tops mais on va faire autrement en le laissant choisir via une balise select": "",
        "Si vous avez tout suivi, vous devriez avoir dans le fichier desktop.php": "",
        "Qu'on va remplacer par": "",
        "Ici le paramètre \"type\" prendra la valeur du select choisi soit aleatoire ou epicees ou tops": "",
        "Maintenant on va tenir compte de notre paramètre dans la fonction randomVdm() dans le fichier vdm.class.php": "",
        "Maintenant changez la valeur du select sur un équipement, sauvegardez et allez sur le dashboard pour voir ce que cela donne": "",
        " IMPORTANT.": " .",
        " IMPORTANT?": " ?",
        "IMPORTANT ": " ",
        " IMPORTANT]": " ]",
        "[IMPORTANT]": "[]",
        "*IMPORTANT*": "**",
        " IMPORTANT*": " *",
        " ici.": " .",
        " ici?": " ?",
        "ici ": " ",
        " ici]": " ]",
        "[ici]": "[]",
        "*ici*": "**",
        " ici*": " *",
        " fr.": " .",
        " fr?": " ?",
        "fr ": " ",
        " fr]": " ]",
        "[fr]": "[]",
        "*fr*": "**",
        " fr*": " *",
        " Nom.": " .",
        " Nom?": " ?",
        "Nom ": " ",
        " Nom]": " ]",
        "[Nom]": "[]",
        "*Nom*": "**",
        " Nom*": " *",
        " Id.": " .",
        " Id?": " ?",
        "Id ": " ",
        " Id]": " ]",
        "[Id]": "[]",
        "*Id*": "**",
        " Id*": " *",
        " vdm.": " .",
        " vdm?": " ?",
        "vdm ": " ",
        " vdm]": " ]",
        "[vdm]": "[]",
        "*vdm*": "**",
        " vdm*": " *",
        " base.": " .",
        " base?": " ?",
        "base ": " ",
        " base]": " ]",
        "[base]": "[]",
        "*base*": "**",
        " base*": " *",
        " ```json.": " .",
        " ```json?": " ?",
        "```json ": " ",
        " ```json]": " ]",
        "[```json]": "[]",
        "*```json*": "**",
        " ```json*": " *",
        " id.": " .",
        " id?": " ?",
        "id ": " ",
        " id]": " ]",
        "[id]": "[]",
        "*id*": "**",
        " id*": " *",
        " name.": " .",
        " name?": " ?",
        "name ": " ",
        " name]": " ]",
        "[name]": "[]",
        "*name*": "**",
        " name*": " *",
        " description.": " .",
        " description?": " ?",
        "description ": " ",
        " description]": " ]",
        "[description]": "[]",
        "*description*": "**",
        " description*": " *",
        " licence.": " .",
        " licence?": " ?",
        "licence ": " ",
        " licence]": " ]",
        "[licence]": "[]",
        "*licence*": "**",
        " licence*": " *",
        " AGPL.": " .",
        " AGPL?": " ?",
        "AGPL ": " ",
        " AGPL]": " ]",
        "[AGPL]": "[]",
        "*AGPL*": "**",
        " AGPL*": " *",
        " author.": " .",
        " author?": " ?",
        "author ": " ",
        " author]": " ]",
        "[author]": "[]",
        "*author*": "**",
        " author*": " *",
        " require.": " .",
        " require?": " ?",
        "require ": " ",
        " require]": " ]",
        "[require]": "[]",
        "*require*": "**",
        " require*": " *",
        " category.": " .",
        " category?": " ?",
        "category ": " ",
        " category]": " ]",
        "[category]": "[]",
        "*category*": "**",
        " category*": " *",
        " monitoring.": " .",
        " monitoring?": " ?",
        "monitoring ": " ",
        " monitoring]": " ]",
        "[monitoring]": "[]",
        "*monitoring*": "**",
        " monitoring*": " *",
        " changelog.": " .",
        " changelog?": " ?",
        "changelog ": " ",
        " changelog]": " ]",
        "[changelog]": "[]",
        "*changelog*": "**",
        " changelog*": " *",
        " documentation.": " .",
        " documentation?": " ?",
        "documentation ": " ",
        " documentation]": " ]",
        "[documentation]": "[]",
        "*documentation*": "**",
        " documentation*": " *",
        " language.": " .",
        " language?": " ?",
        "language ": " ",
        " language]": " ]",
        "[language]": "[]",
        "*language*": "**",
        " language*": " *",
        " compatibility.": " .",
        " compatibility?": " ?",
        "compatibility ": " ",
        " compatibility]": " ]",
        "[compatibility]": "[]",
        "*compatibility*": "**",
        " compatibility*": " *",
        " Remplacez.": " .",
        " Remplacez?": " ?",
        "Remplacez ": " ",
        " Remplacez]": " ]",
        "[Remplacez]": "[]",
        "*Remplacez*": "**",
        " Remplacez*": " *",
        " ```php.": " .",
        " ```php?": " ?",
        "```php ": " ",
        " ```php]": " ]",
        "[```php]": "[]",
        "*```php*": "**",
        " ```php*": " *",
        " par.": " .",
        " par?": " ?",
        "par ": " ",
        " par]": " ]",
        "[par]": "[]",
        "*par*": "**",
        " par*": " *",
        " Par.": " .",
        " Par?": " ?",
        "Par ": " ",
        " Par]": " ]",
        "[Par]": "[]",
        "*Par*": "**",
        " Par*": " *",
        " ```html.": " .",
        " ```html?": " ?",
        "```html ": " ",
        " ```html]": " ]",
        "[```html]": "[]",
        "*```html*": "**",
        " ```html*": " *",
        " if.": " .",
        " if?": " ?",
        "if ": " ",
        " if]": " ]",
        "[if]": "[]",
        "*if*": "**",
        " if*": " *",
        " 30%;display.": " .",
        " 30%;display?": " ?",
        "30%;display ": " ",
        " 30%;display]": " ]",
        "[30%;display]": "[]",
        "*30%;display*": "**",
        " 30%;display*": " *",
        " filter.": " .",
        " filter?": " ?",
        "filter ": " ",
        " filter]": " ]",
        "[filter]": "[]",
        "*filter*": "**",
        " filter*": " *",
        " type.": " .",
        " type?": " ?",
        "type ": " ",
        " type]": " ]",
        "[type]": "[]",
        "*type*": "**",
        " type*": " *",
        " info.": " .",
        " info?": " ?",
        "info ": " ",
        " info]": " ]",
        "[info]": "[]",
        "*info*": "**",
        " info*": " *",
        " error.": " .",
        " error?": " ?",
        "error ": " ",
        " error]": " ]",
        "[error]": "[]",
        "*error*": "**",
        " error*": " *",
        " success.": " .",
        " success?": " ?",
        "success ": " ",
        " success]": " ]",
        "[success]": "[]",
        "*success*": "**",
        " success*": " *",
        " break;.": " .",
        " break;?": " ?",
        "break; ": " ",
        " break;]": " ]",
        "[break;]": "[]",
        "*break;*": "**",
        " break;*": " *",
        " cron.": " .",
        " cron?": " ?",
        "cron ": " ",
        " cron]": " ]",
        "[cron]": "[]",
        "*cron*": "**",
        " cron*": " *",
        " cron5.": " .",
        " cron5?": " ?",
        "cron5 ": " ",
        " cron5]": " ]",
        "[cron5]": "[]",
        "*cron5*": "**",
        " cron5*": " *",
        " cron15.": " .",
        " cron15?": " ?",
        "cron15 ": " ",
        " cron15]": " ]",
        "[cron15]": "[]",
        "*cron15*": "**",
        " cron15*": " *",
        " cron30.": " .",
        " cron30?": " ?",
        "cron30 ": " ",
        " cron30]": " ]",
        "[cron30]": "[]",
        "*cron30*": "**",
        " cron30*": " *",
        " cronHourly.": " .",
        " cronHourly?": " ?",
        "cronHourly ": " ",
        " cronHourly]": " ]",
        "[cronHourly]": "[]",
        "*cronHourly*": "**",
        " cronHourly*": " *",
        " cronDaily.": " .",
        " cronDaily?": " ?",
        "cronDaily ": " ",
        " cronDaily]": " ]",
        "[cronDaily]": "[]",
        "*cronDaily*": "**",
        " cronDaily*": " *",
        " 1\/jour.": " .",
        " 1\/jour?": " ?",
        "1\/jour ": " ",
        " 1\/jour]": " ]",
        "[1\/jour]": "[]",
        "*1\/jour*": "**",
        " 1\/jour*": " *",
        " self.": " .",
        " self?": " ?",
        "self ": " ",
        " self]": " ]",
        "[self]": "[]",
        "*self*": "**",
        " self*": " *",
        " continue;.": " .",
        " continue;?": " ?",
        "continue; ": " ",
        " continue;]": " ]",
        "[continue;]": "[]",
        "*continue;*": "**",
        " continue;*": " *",
        " ICI.": " .",
        " ICI?": " ?",
        "ICI ": " ",
        " ICI]": " ]",
        "[ICI]": "[]",
        "*ICI*": "**",
        " ICI*": " *",
        " D.": " .",
        " D?": " ?",
        "D ": " ",
        " D]": " ]",
        "[D]": "[]",
        "*D*": "**",
        " D*": " *",
        " Pourquoi.": " .",
        " Pourquoi?": " ?",
        "Pourquoi ": " ",
        " Pourquoi]": " ]",
        "[Pourquoi]": "[]",
        "*Pourquoi*": "**",
        " Pourquoi*": " *",
        " Cherchez.": " .",
        " Cherchez?": " ?",
        "Cherchez ": " ",
        " Cherchez]": " ]",
        "[Cherchez]": "[]",
        "*Cherchez*": "**",
        " Cherchez*": " *",
        " Etc….": " .",
        " Etc…?": " ?",
        "Etc… ": " ",
        " Etc…]": " ]",
        "[Etc…]": "[]",
        "*Etc…*": "**",
        " Etc…*": " *",
        " Important.": " .",
        " Important?": " ?",
        "Important ": " ",
        " Important]": " ]",
        "[Important]": "[]",
        "*Important*": "**",
        " Important*": " *"
    },
    "dev\/widget_plugin.md": {
        "Gestion des widgets des plugins": "",
        "Il existe plusieurs possibilités pour faire des widgets personnalisés pour les plugins": "",
        "la première avec la fonction toHtml (méthode d'instance) qui hérite de la classe eqLogic": "",
        "par le système de template (v4 only": "",
        "Fonction toHtml": "",
        "Là-dessus, rien de spécial, la fonction toHtml doit retourner le widget en html, vous avez un exemple": "",
        "L'important est surtout les 1ères lignes": "",
        "is_array($replace": "",
        "return $replace;": "",
        "Ici, on va créer un nouveau widget basé sur le template \"tmplmultistate\" (vous avez la liste des templates": "",
        "c'est ceux avec tmpl dans leur nom), pour une commande de type info et sous type string": "",
        "Chaque template est pour un type et sous-type donnés, il faut donc bien vérifier que le template que vous voulez utiliser existe pour le type et sous-type": "",
        "Ensuite, vu que c'est un template avec plusieurs états, il faut définir les icônes en fonction de l'état": "",
        "Ça se fait dans la partie test du tableau": "",
        "pour le premier test, on dit si la valeur de la commande vaut 2 alors il faudra remplacer le tag": "",
        "dans le code html du template) par <i class=\"icon maison-vacuum6\"><\/i": "",
        "Un autre exemple basé sur un autre template pourrait être": "",
        "public static function templateWidget": "",
        "template' => 'tmplicon": "",
        "replace' => array": "",
        ";": "",
        "return $return;": "",
        "C'est comme pour un widget normal sauf pour le nom du widget qui est sous la forme id_plugin": "",
        "nom_widget": "",
        "Pour le 2eme exemple, ça sera id_plugin": "",
        " là.": " .",
        " là?": " ?",
        "là ": " ",
        " là]": " ]",
        "[là]": "[]",
        "*là*": "**",
        " là*": " *",
        " php.": " .",
        " php?": " ?",
        "php ": " ",
        " php]": " ]",
        "[php]": "[]",
        "*php*": "**",
        " php*": " *",
        " if.": " .",
        " if?": " ?",
        "if ": " ",
        " if]": " ]",
        "[if]": "[]",
        "*if*": "**",
        " if*": " *",
        " ici.": " .",
        " ici?": " ?",
        "ici ": " ",
        " ici]": " ]",
        "[ici]": "[]",
        "*ici*": "**",
        " ici*": " *",
        " IMPORTANT.": " .",
        " IMPORTANT?": " ?",
        "IMPORTANT ": " ",
        " IMPORTANT]": " ]",
        "[IMPORTANT]": "[]",
        "*IMPORTANT*": "**",
        " IMPORTANT*": " *",
        " Exemple.": " .",
        " Exemple?": " ?",
        "Exemple ": " ",
        " Exemple]": " ]",
        "[Exemple]": "[]",
        "*Exemple*": "**",
        " Exemple*": " *",
        " toto.": " .",
        " toto?": " ?",
        "toto ": " ",
        " toto]": " ]",
        "[toto]": "[]",
        "*toto*": "**",
        " toto*": " *"
    }
}